var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiOptions.html",[0,0.978,1,2.315]],["body/interfaces/ApiOptions.html",[0,1.782,1,3.467,2,2.048,3,0.07,4,0.06,5,0.07,6,0.051,7,2.226,8,0.773,9,2.5,10,0.051,11,0.609,12,0.218,13,3.612,14,3.761,15,2.923,16,3.982,17,3.405,18,1.829,19,3.761,20,3.925,21,3.612,22,2.193,23,0.116,24,0.011,25,3.349,26,3.412,27,0.726,28,0.351,29,2.879,30,2.489,31,2.783,32,1.833,33,0.135,34,3.203,35,2.226,36,2.226,37,2.226,38,3.146,39,1.899,40,2.879,41,2.998,42,2.048,43,2.226,44,3.129,45,0.654,46,1.237,47,1.77,48,2.061,49,1.833,50,2.998,51,2.923,52,2.002,53,2.576,54,1.759,55,2.879,56,3.129,57,1.136,58,3.122,59,0.919,60,1.838,61,2.489,62,2.489,63,2.998,64,2.576,65,2.998,66,2.879,67,2.77,68,2.489,69,2.489,70,2.576,71,2.879,72,2.669,73,2.133,74,1.838,75,0.182,76,2.998,77,2.998,78,2.879,79,2.226,80,2.226,81,2.133,82,0.942,83,0.625,84,1.971,85,2.226,86,1.971,87,3.299,88,2.226,89,2.329,90,2.329,91,3.761,92,1.054,93,3.467,94,2.61,95,2.878,96,3.976,97,2.407,98,2.576,99,1.185,100,2.878,101,2.489,102,1.899,103,3.087,104,1.899,105,1.77,106,0.749,107,2.048,108,2.446,109,1.971,110,3.129,111,1.141,112,2.446,113,0.568,114,1.77,115,2.329,116,2.226,117,2.329,118,0.123,119,2.061,120,2.446,121,2.048,122,2.446,123,2.133,124,2.446,125,2.226,126,2.329,127,3.129,128,4.309,129,1.424,130,2.226,131,2.226,132,2.226,133,1.466,134,1.025,135,2.738,136,2.133,137,2.879,138,1.899,139,2.998,140,2.329,141,2.879,142,2.329,143,3.129,144,2.133,145,3.129,146,2.998,147,2.226,148,1.971,149,2.77,150,2.133,151,1.272,152,1.272,153,3.612,154,1.739,155,1.026,156,1.272,157,1.272,158,2.226,159,1.77,160,2.226,161,2.446,162,1.712,163,2.133,164,2.226,165,0.922,166,1.899,167,1.77,168,1.237,169,1.77,170,2.226,171,2.329,172,0.089,173,2.133,174,1.971,175,1.833,176,0.006,177,0.006]],["title/classes/ArithmeticFunctions.html",[178,0.343,179,1.69]],["body/classes/ArithmeticFunctions.html",[0,1.347,3,0.05,4,0.043,5,0.05,6,0.076,8,0.622,10,0.036,12,0.132,18,0.658,23,0.097,24,0.011,27,0.721,28,0.273,33,0.131,57,1.215,59,1.229,75,0.174,82,0.612,83,1.019,92,2.176,99,1.513,106,0.998,113,0.621,118,0.107,134,0.519,155,1.368,165,1.292,168,0.881,172,0.119,176,0.005,177,0.005,178,0.669,179,2.33,180,0.13,181,1.108,182,0.696,183,4.315,184,4.315,185,4.315,186,1.758,187,0.186,188,2.807,189,0.779,190,1.758,191,2.807,192,1.758,193,2.807,194,1.143,195,1.605,196,2.769,197,2.655,198,2.944,199,3.28,200,3.269,201,1.044,202,2.172,203,1.704,204,1.143,205,2.594,206,2.515,207,2.076,208,1.143,209,1.143,210,1.143,211,1.143,212,1.143,213,1.143,214,1.143,215,1.143,216,3.669,217,1.123,218,1.514,219,1.143,220,1.075,221,1.143,222,1.143,223,1.754,224,0.243,225,2.416,226,2.757,227,1.265,228,0.857,229,2.594,230,0.812,231,2.594,232,2.594,233,1.143,234,1.143,235,1.758,236,1.143,237,2.076,238,1.143,239,1.143,240,1.143,241,1.143,242,1.143,243,1.143,244,1.143,245,1.143,246,1.143,247,1.143,248,1.143,249,1.143,250,1.143,251,1.758,252,1.758,253,1.143,254,1.143,255,2.076,256,1.143,257,2.403,258,1.143,259,1.758,260,1.143,261,1.143,262,2.076,263,1.143,264,1.758,265,1.143,266,1.143,267,1.143,268,1.143,269,1.143,270,1.143,271,1.143,272,2.076,273,1.143,274,1.143,275,1.143,276,1.143,277,1.143,278,1.143,279,1.143,280,1.143,281,1.143,282,1.143,283,1.143,284,1.143,285,1.143,286,1.143,287,1.143,288,1.143,289,1.143,290,1.143,291,1.143,292,1.143,293,1.143,294,1.143,295,1.143,296,1.143,297,1.143,298,1.143,299,1.143,300,1.143,301,1.143,302,1.143,303,1.143,304,2.076,305,1.143,306,1.143,307,1.143,308,1.143,309,2.076,310,1.143,311,1.758,312,1.143,313,1.143,314,1.758,315,1.143,316,1.143,317,1.143,318,1.143,319,2.076,320,1.143,321,1.143,322,1.143,323,2.141,324,1.758,325,3.403,326,3.568,327,1.758,328,1.143,329,1.143,330,1.044,331,1.143,332,1.143,333,2.076,334,1.143,335,1.143,336,1.143,337,1.143,338,1.143,339,1.143,340,1.143,341,1.143,342,1.143,343,1.143,344,1.143,345,1.143,346,1.143,347,1.143,348,1.143,349,1.143,350,1.143,351,1.143,352,1.143,353,1.143,354,1.143,355,1.143,356,2.076,357,1.143,358,1.143,359,1.143,360,1.143,361,1.143,362,1.143,363,1.143,364,1.143,365,1.143,366,1.143,367,1.143,368,1.558,369,1.758,370,1.143,371,1.143,372,1.143,373,1.075,374,1.143,375,2.076,376,1.758,377,1.758,378,1.704,379,1.143,380,1.143,381,1.143,382,2.076,383,1.143,384,1.143,385,1.143,386,1.143,387,2.739,388,1.143,389,1.143,390,2.739,391,1.143,392,0.985,393,1.143,394,1.143]],["title/classes/ArithmeticOperators.html",[178,0.343,356,1.69]],["body/classes/ArithmeticOperators.html",[0,1.326,3,0.048,4,0.041,5,0.048,6,0.089,8,0.612,10,0.035,12,0.167,18,0.638,23,0.101,24,0.011,27,0.729,28,0.267,33,0.131,57,1.211,59,1.101,75,0.17,82,0.6,83,1.018,92,2.164,99,1.498,106,0.979,113,0.607,118,0.114,134,0.503,155,1.342,165,1.29,168,0.854,172,0.15,176,0.005,177,0.005,178,0.666,179,2.036,180,0.126,181,1.075,182,0.68,186,1.109,187,0.235,189,0.984,190,1.109,192,1.109,194,1.109,195,1.567,196,2.741,197,2.622,198,2.915,199,3.268,200,3.257,201,1.012,202,2.142,203,1.664,204,1.109,205,2.558,206,3.017,207,2.036,208,1.109,209,1.109,210,1.109,211,1.109,212,1.109,213,1.109,214,1.109,215,1.109,216,3.684,217,1.097,218,1.479,219,1.109,220,1.043,221,1.109,222,1.109,223,1.725,224,0.238,225,2.398,226,2.732,227,1.241,228,0.831,229,2.558,230,0.788,231,2.558,232,2.558,233,1.109,234,1.109,235,1.716,236,1.109,237,2.036,238,1.109,239,1.109,240,1.109,241,1.109,242,1.109,243,1.109,244,1.109,245,1.109,246,1.109,247,1.109,248,1.109,249,1.109,250,1.109,251,1.716,252,1.716,253,1.109,254,1.109,255,2.036,256,1.109,257,2.364,258,1.109,259,1.716,260,1.109,261,1.109,262,2.036,263,1.109,264,1.716,265,1.109,266,1.109,267,1.109,268,1.109,269,1.109,270,1.109,271,1.109,272,2.036,273,1.109,274,1.109,275,1.109,276,1.109,277,1.109,278,1.109,279,1.109,280,1.109,281,1.109,282,1.109,283,1.109,284,1.109,285,1.109,286,1.109,287,1.109,288,1.109,289,1.109,290,1.109,291,1.109,292,1.109,293,1.109,294,1.109,295,1.109,296,1.109,297,1.109,298,1.109,299,1.109,300,1.109,301,1.109,302,1.109,303,1.109,304,2.036,305,1.109,306,1.109,307,1.109,308,1.109,309,2.036,310,1.109,311,1.716,312,1.109,313,1.109,314,1.716,315,1.109,316,1.109,317,1.109,318,1.109,319,2.036,320,1.109,321,1.109,322,1.109,323,2.1,324,1.716,325,3.463,326,3.608,327,1.716,328,1.109,329,1.109,330,1.012,331,1.109,332,1.109,333,2.036,334,1.109,335,1.109,336,1.109,337,1.109,338,1.109,339,1.109,340,1.109,341,1.109,342,1.109,343,1.109,344,1.109,345,1.109,346,1.109,347,1.109,348,1.109,349,1.109,350,1.109,351,1.109,352,1.109,353,1.109,354,1.109,355,1.109,356,2.292,357,1.716,358,1.109,359,1.716,360,1.109,361,1.716,362,1.109,363,1.716,364,1.109,365,1.716,366,1.109,367,1.716,368,1.522,369,1.716,370,1.109,371,1.109,372,1.109,373,1.043,374,1.109,375,2.036,376,1.716,377,1.716,378,1.664,379,1.109,380,1.109,381,1.109,382,2.036,383,1.109,384,1.109,385,1.109,386,1.109,387,2.705,388,1.109,389,1.109,390,2.705,391,1.109,392,0.955,393,1.109,394,1.109,395,3.122,396,4.214,397,4.214,398,4.214,399,4.214,400,4.214,401,2.722,402,1.132,403,2.722,404,2.722,405,2.722,406,2.722,407,2.722]],["title/interfaces/Cache.html",[0,0.978,38,1.69]],["body/interfaces/Cache.html",[0,1.796,1,3.058,2,2.107,3,0.072,4,0.062,5,0.072,6,0.083,7,2.29,8,0.743,9,2.468,10,0.052,11,0.386,12,0.142,13,2.107,14,2.194,15,1.706,16,3.253,17,2.628,18,1.65,19,2.194,20,2.29,21,2.107,23,0.114,24,0.011,25,2.723,26,3.161,27,0.724,28,0.358,29,2.937,30,2.539,31,2.827,32,1.886,33,0.135,34,3.253,35,2.29,36,2.29,37,2.29,38,3.218,39,1.954,40,2.937,41,3.058,42,2.107,43,2.29,44,3.192,45,0.673,46,1.273,47,1.822,48,2.103,49,1.886,50,3.058,51,2.96,52,2.042,53,2.628,54,1.786,55,2.937,56,3.192,57,1.142,58,3.161,59,0.937,60,1.875,61,2.539,62,2.539,63,3.058,64,2.628,65,3.058,66,2.937,67,2.826,68,2.539,69,2.539,70,2.628,71,2.937,72,2.723,73,2.194,74,1.875,75,0.182,76,3.058,77,3.058,78,2.937,79,2.29,80,2.29,81,2.194,82,0.948,83,0.637,84,2.028,85,2.29,86,2.028,87,3.33,88,2.29,89,2.397,90,2.397,91,3.808,92,1.084,93,3.52,94,2.651,95,2.923,96,4.037,97,2.456,98,2.628,99,1.389,100,2.923,101,2.539,102,1.954,103,3.135,104,1.954,105,1.822,106,0.77,107,2.107,108,3.507,109,3.253,110,4.328,111,1.636,112,3.507,113,0.814,114,1.822,115,2.397,116,2.29,117,2.397,118,0.127,119,2.103,120,2.516,121,2.107,122,2.516,123,2.194,124,2.516,125,2.29,126,2.397,127,3.192,128,4.34,129,1.465,130,2.29,131,2.29,132,2.29,133,1.509,134,1.045,135,2.76,136,2.194,137,2.937,138,1.954,139,3.058,140,2.397,141,2.937,142,2.397,143,3.192,144,2.194,145,3.192,146,3.058,147,2.29,148,2.028,149,2.826,150,2.194,151,1.308,152,2.099,153,3.657,154,1.774,155,1.056,156,1.308,157,1.308,158,2.29,159,1.822,160,2.29,161,2.516,162,1.762,163,2.194,164,2.29,165,0.937,166,1.954,167,1.822,168,1.273,169,1.822,170,2.29,171,2.397,172,0.167,173,2.194,174,2.028,175,1.886,176,0.006,177,0.006,182,0.912,187,0.2,189,0.838,408,3.507,409,4.057,410,4.057]],["title/classes/CollectionFunctions.html",[178,0.343,255,1.69]],["body/classes/CollectionFunctions.html",[0,1.356,3,0.05,4,0.043,5,0.05,6,0.068,8,0.626,10,0.036,12,0.109,18,0.666,23,0.095,24,0.011,27,0.721,28,0.276,33,0.132,57,1.214,59,1.203,75,0.171,82,0.616,83,1.02,92,2.181,99,1.511,106,1.005,113,0.627,118,0.103,134,0.525,155,1.378,165,1.293,168,0.891,172,0.098,176,0.005,177,0.005,178,0.67,179,2.091,180,0.131,181,1.121,182,0.702,186,1.157,187,0.154,189,0.645,190,1.157,192,1.157,194,1.157,195,1.619,196,2.779,197,2.667,198,2.955,199,3.284,200,3.274,201,1.056,202,2.183,203,1.719,204,1.157,205,2.608,206,2.528,207,2.091,208,1.157,209,1.157,210,1.157,211,1.157,212,1.157,213,1.157,214,1.157,215,1.157,216,3.672,217,1.133,218,1.528,219,1.157,220,1.088,221,1.157,222,1.157,223,1.765,224,0.245,225,2.423,226,2.766,227,1.274,228,0.867,229,2.608,230,0.822,231,2.608,232,2.608,233,1.157,234,1.157,235,1.773,236,1.157,237,2.091,238,1.157,239,1.157,240,1.157,241,1.157,242,1.157,243,1.157,244,1.157,245,1.157,246,1.157,247,1.157,248,1.157,249,1.157,250,1.157,251,1.773,252,1.773,253,1.157,254,1.157,255,2.344,256,1.773,257,2.955,258,1.157,259,2.418,260,1.773,261,1.157,262,2.091,263,1.157,264,1.773,265,1.157,266,1.157,267,1.157,268,1.157,269,1.157,270,1.157,271,1.157,272,2.091,273,1.157,274,1.157,275,1.157,276,1.157,277,1.157,278,1.157,279,1.157,280,1.157,281,1.157,282,1.157,283,1.157,284,1.157,285,1.157,286,1.157,287,1.157,288,1.157,289,1.157,290,1.157,291,1.157,292,1.157,293,1.157,294,1.157,295,1.157,296,1.157,297,1.157,298,1.157,299,1.157,300,1.157,301,1.157,302,1.157,303,1.157,304,2.091,305,1.157,306,1.157,307,1.157,308,1.157,309,2.091,310,1.157,311,1.773,312,1.157,313,1.157,314,1.773,315,1.157,316,1.157,317,1.157,318,1.157,319,2.091,320,1.157,321,1.157,322,1.157,323,2.157,324,1.773,325,3.409,326,3.572,327,1.773,328,1.157,329,1.157,330,1.056,331,1.157,332,1.157,333,2.091,334,1.157,335,1.157,336,1.157,337,1.157,338,1.157,339,1.157,340,1.157,341,1.157,342,1.157,343,1.157,344,1.157,345,1.157,346,1.157,347,1.157,348,1.157,349,1.157,350,1.157,351,1.157,352,1.157,353,1.157,354,1.157,355,1.157,356,2.091,357,1.157,358,1.157,359,1.157,360,1.157,361,1.157,362,1.157,363,1.157,364,1.157,365,1.157,366,1.157,367,1.157,368,1.572,369,1.773,370,1.157,371,1.157,372,1.157,373,1.088,374,1.157,375,2.091,376,1.773,377,1.773,378,1.719,379,1.157,380,1.157,381,1.157,382,2.091,383,1.157,384,1.157,385,1.157,386,1.157,387,2.751,388,1.157,389,1.157,390,2.751,391,1.157,392,0.996,393,1.157,394,1.157,411,4.354,412,4.354,413,2.84,414,2.84]],["title/classes/ConditionalFunctions.html",[178,0.343,319,1.69]],["body/classes/ConditionalFunctions.html",[0,1.361,3,0.051,4,0.044,5,0.051,6,0.056,8,0.629,10,0.037,12,0.072,18,0.67,23,0.093,24,0.011,27,0.722,28,0.277,33,0.132,57,1.216,59,1.169,75,0.172,82,0.619,83,1.02,92,2.184,99,1.508,106,1.01,113,0.63,118,0.098,134,0.529,155,1.384,165,1.294,168,0.898,172,0.065,176,0.005,177,0.005,178,0.671,179,2.1,180,0.132,181,1.129,182,0.706,186,1.165,187,0.101,189,0.424,190,1.165,192,1.165,194,1.165,195,1.628,196,2.786,197,2.675,198,2.962,199,3.287,200,3.276,201,1.064,202,2.19,203,1.729,204,1.165,205,2.616,206,2.536,207,2.1,208,1.165,209,1.165,210,1.165,211,1.165,212,1.165,213,1.165,214,1.165,215,1.165,216,3.673,217,1.14,218,1.536,219,1.165,220,1.096,221,1.165,222,1.165,223,1.771,224,0.246,225,2.428,226,2.772,227,1.28,228,0.873,229,2.616,230,0.828,231,2.616,232,2.616,233,1.165,234,1.165,235,1.783,236,1.165,237,2.1,238,1.165,239,1.165,240,1.165,241,1.165,242,1.165,243,1.165,244,1.165,245,1.165,246,1.165,247,1.165,248,1.165,249,1.165,250,1.165,251,1.783,252,1.783,253,1.165,254,1.165,255,2.1,256,1.165,257,2.427,258,1.165,259,1.783,260,1.165,261,1.165,262,2.1,263,1.165,264,1.783,265,1.165,266,1.165,267,1.165,268,1.165,269,1.165,270,1.165,271,1.165,272,2.1,273,1.165,274,1.165,275,1.165,276,1.165,277,1.165,278,1.165,279,1.165,280,1.165,281,1.165,282,1.165,283,1.165,284,1.165,285,1.165,286,1.165,287,1.165,288,1.165,289,1.165,290,1.165,291,1.165,292,1.165,293,1.165,294,1.165,295,1.165,296,1.165,297,1.165,298,1.165,299,1.165,300,1.165,301,1.165,302,1.165,303,1.165,304,2.1,305,1.165,306,1.165,307,1.165,308,1.165,309,2.1,310,1.165,311,1.783,312,1.165,313,1.165,314,1.783,315,1.165,316,1.165,317,1.165,318,1.165,319,2.353,320,1.783,321,1.165,322,1.783,323,2.166,324,1.783,325,3.413,326,3.574,327,1.783,328,1.165,329,1.165,330,1.064,331,1.165,332,1.165,333,2.1,334,1.165,335,1.165,336,1.165,337,1.165,338,1.165,339,1.165,340,1.165,341,1.165,342,1.165,343,1.165,344,1.165,345,1.165,346,1.165,347,1.165,348,1.165,349,1.165,350,1.165,351,1.165,352,1.165,353,1.165,354,1.165,355,1.165,356,2.1,357,1.165,358,1.165,359,1.165,360,1.165,361,1.165,362,1.165,363,1.165,364,1.165,365,1.165,366,1.165,367,1.165,368,1.581,369,1.783,370,1.165,371,1.165,372,1.165,373,1.096,374,1.165,375,2.1,376,1.783,377,1.783,378,1.729,379,1.165,380,1.165,381,1.165,382,2.1,383,1.165,384,1.165,385,1.165,386,1.165,387,2.759,388,1.165,389,1.165,390,2.759,391,1.165,392,1.004,393,1.165,394,1.165,415,3.503,416,2.86]],["title/classes/CsdlAction.html",[178,0.343,417,2.417]],["body/classes/CsdlAction.html",[3,0.097,4,0.083,5,0.097,6,0.109,10,0.07,11,0.656,12,0.217,23,0.11,24,0.01,27,0.708,33,0.127,45,1.52,52,2.49,59,1.405,60,1.814,75,0.181,82,0.971,118,0.132,151,2.224,154,2.164,156,2.224,157,2.224,169,3.747,172,0.191,176,0.008,177,0.008,178,0.668,180,0.253,187,0.296,224,0.391,402,1.351,417,3.893,418,2.387,419,3.577,420,5.177,421,5.177,422,1.814,423,4.93,424,4.93,425,5.469,426,5.469,427,5.469,428,5.469,429,5.469,430,5.469,431,3.088,432,3.393,433,3.088,434,3.577,435,3.231,436,3.088,437,2.899]],["title/classes/CsdlActionImport.html",[178,0.343,436,2.417]],["body/classes/CsdlActionImport.html",[3,0.1,4,0.086,5,0.1,6,0.106,10,0.073,11,0.671,12,0.193,23,0.108,24,0.01,27,0.69,33,0.128,45,1.52,52,3.043,59,1.37,60,2.741,75,0.183,82,0.981,118,0.133,151,2.277,154,2.216,156,2.277,157,2.277,169,3.171,172,0.174,176,0.008,177,0.008,178,0.674,180,0.262,187,0.285,224,0.395,402,0.968,417,3.207,418,2.329,419,3.715,420,4.38,421,4.38,422,1.884,423,4.539,424,4.539,431,3.207,432,3.524,433,3.207,434,3.715,435,3.356,436,3.986,437,2.968,438,5.68,439,5.68,440,5.68,441,5.68]],["title/classes/CsdlAnnotable.html",[178,0.343,442,2.315]],["body/classes/CsdlAnnotable.html",[3,0.11,4,0.095,5,0.11,6,0.103,8,0.66,10,0.08,11,0.712,12,0.201,23,0.103,24,0.01,27,0.512,33,0.126,45,1.497,75,0.179,82,0.933,118,0.114,129,2.258,151,2.016,154,1.962,156,2.016,157,2.016,172,0.141,176,0.009,177,0.009,178,0.665,180,0.289,187,0.265,224,0.37,402,1.065,418,2.258,437,2.628,442,4.334,443,4.631,444,4.793,445,6.252,446,4.478,447,6.252,448,6.252,449,2.703,450,3.878,451,4.089,452,4.422,453,3.529,454,3.878,455,4.335,456,3.382,457,4.335]],["title/classes/CsdlAnnotation.html",[178,0.343,446,2.224]],["body/classes/CsdlAnnotation.html",[3,0.109,4,0.094,5,0.109,6,0.106,8,0.649,10,0.079,11,0.705,12,0.2,23,0.106,24,0.01,27,0.504,33,0.126,45,1.501,75,0.182,82,0.926,118,0.113,129,2.984,151,1.986,154,1.932,156,1.986,157,1.986,172,0.139,176,0.008,177,0.008,178,0.661,180,0.284,187,0.282,224,0.368,402,1.049,418,2.328,437,2.588,442,4.012,443,4.56,444,4.187,446,4.292,449,2.678,450,3.819,451,4.026,452,5.074,453,3.475,454,3.819,455,4.269,456,3.33,457,4.269,458,6.156,459,6.156,460,7.416]],["title/classes/CsdlAnnotations.html",[178,0.343,450,2.655]],["body/classes/CsdlAnnotations.html",[3,0.107,4,0.092,5,0.107,6,0.105,8,0.773,10,0.077,11,0.697,12,0.211,23,0.108,24,0.01,27,0.494,33,0.125,45,1.503,75,0.181,82,0.919,118,0.112,129,2.181,151,1.948,154,1.895,156,1.948,157,1.948,172,0.136,176,0.008,177,0.008,178,0.657,180,0.279,187,0.291,224,0.365,402,1.029,418,2.313,437,2.539,442,4.44,443,4.474,444,4.827,446,4.442,449,2.647,450,4.547,451,5.369,452,5.051,453,3.409,454,3.746,455,4.188,456,3.267,457,4.188,461,6.039,462,6.039,463,6.039,464,6.039,465,2.119,466,4.474]],["title/classes/CsdlComplexType.html",[178,0.343,467,2.529]],["body/classes/CsdlComplexType.html",[3,0.097,4,0.084,5,0.097,6,0.089,8,0.799,10,0.071,11,0.834,12,0.22,23,0.109,24,0.01,27,0.725,28,0.349,33,0.125,45,1.497,54,1.51,75,0.179,118,0.131,134,1.018,152,1.775,172,0.124,176,0.008,177,0.008,178,0.656,180,0.254,187,0.301,224,0.367,402,1.396,418,1.951,422,1.825,449,2.5,465,2.933,467,4.09,468,3.334,469,2.651,470,5.704,471,3.419,472,5.663,473,6.004,474,5.663,475,4.24,476,4.24,477,5.504,478,4.841,479,4.841,480,4.841,481,4.841,482,4.841,483,4.841,484,2.651,485,2.859,486,3.745,487,3.252,488,4.294,489,3.6,490,3.817,491,4.294]],["title/classes/CsdlEntityContainer.html",[178,0.343,492,3.171]],["body/classes/CsdlEntityContainer.html",[3,0.104,4,0.089,5,0.104,6,0.111,10,0.075,11,0.685,12,0.222,23,0.11,24,0.01,28,0.494,33,0.089,45,1.497,53,2.728,59,0.973,60,1.946,75,0.175,118,0.127,144,4.513,172,0.133,176,0.008,177,0.008,178,0.47,180,0.271,187,0.305,224,0.333,402,1.422,418,2.447,422,1.946,433,4.71,436,4.71,484,3.754,492,5.337,493,3.931,494,5.161,495,8.343,496,8.343,497,8.343,498,8.343,499,6.18,500,6.18,501,5.868,502,5.868,503,5.161,504,5.161,505,5.868,506,5.868,507,5.161,508,3.313]],["title/classes/CsdlEntitySet.html",[178,0.343,499,3.171]],["body/classes/CsdlEntitySet.html",[3,0.11,4,0.095,5,0.11,6,0.11,10,0.08,11,0.71,12,0.213,23,0.109,24,0.01,27,0.679,28,0.395,33,0.095,45,1.485,54,1.71,75,0.177,118,0.129,155,1.622,172,0.141,173,4.589,176,0.008,177,0.008,178,0.499,180,0.288,187,0.301,224,0.345,402,1.273,418,2.427,422,2.067,435,5.012,484,3.002,493,3.868,499,5.535,509,4.986,510,7.461,511,5.883,512,6.232,513,6.232,514,5.481,515,6.232,516,5.481,517,4.076]],["title/classes/CsdlEntityType.html",[178,0.343,487,2.529]],["body/classes/CsdlEntityType.html",[3,0.094,4,0.081,5,0.094,6,0.101,8,0.786,10,0.068,11,0.83,12,0.223,23,0.11,24,0.01,27,0.729,28,0.337,33,0.123,45,1.501,54,1.46,75,0.178,118,0.13,134,0.983,152,2.614,172,0.12,176,0.008,177,0.008,178,0.649,180,0.246,187,0.305,224,0.363,402,1.435,418,2.211,422,1.764,449,2.447,465,2.907,467,3.143,468,3.78,469,2.562,470,5.673,471,3.398,472,5.629,473,5.968,474,5.629,475,4.208,476,4.208,478,4.679,479,4.679,480,4.679,481,4.679,482,4.679,483,4.679,484,2.562,485,2.763,486,3.665,487,4.002,488,5.028,489,5.301,490,3.689,491,4.203,518,5.32,519,5.32,520,4.679]],["title/classes/CsdlEnumMember.html",[178,0.343,521,3.171]],["body/classes/CsdlEnumMember.html",[3,0.114,4,0.098,5,0.114,6,0.107,10,0.083,11,0.724,12,0.204,23,0.104,24,0.01,27,0.527,33,0.116,45,1.473,48,3.118,57,1.162,75,0.175,82,0.976,118,0.132,148,3.218,172,0.145,176,0.009,177,0.009,178,0.61,180,0.298,187,0.287,224,0.352,402,1.097,418,2.363,422,2.135,449,2.325,469,3.101,521,6.01,522,5.151,523,6.095,524,4.465,525,5.151,526,5.151]],["title/classes/CsdlEnumType.html",[178,0.343,524,2.968]],["body/classes/CsdlEnumType.html",[3,0.11,4,0.094,5,0.11,6,0.11,10,0.08,11,0.709,12,0.213,23,0.109,24,0.01,27,0.678,33,0.113,45,1.489,48,3.2,57,0.842,75,0.178,82,0.722,118,0.131,148,4.235,172,0.14,176,0.008,177,0.008,178,0.597,180,0.287,187,0.3,224,0.344,402,1.27,418,2.425,422,2.058,449,2.241,469,2.989,521,6.278,524,5.168,525,6.78,526,6.78,527,6.207,528,5.459,529,6.207,530,6.207,531,6.207]],["title/classes/CsdlFunction.html",[178,0.343,431,2.417]],["body/classes/CsdlFunction.html",[3,0.095,4,0.082,5,0.095,6,0.11,10,0.069,11,0.65,12,0.217,23,0.111,24,0.01,27,0.72,33,0.127,45,1.52,52,2.467,59,1.417,60,1.788,75,0.181,82,0.968,118,0.131,151,2.204,154,2.144,156,2.204,157,2.204,169,3.734,172,0.191,176,0.008,177,0.008,178,0.666,180,0.249,187,0.299,224,0.39,402,1.344,417,3.044,418,2.408,419,3.526,420,5.158,421,5.158,422,1.788,423,4.912,424,4.912,431,3.857,432,5.048,433,3.044,434,3.526,435,3.185,436,3.044,437,2.873,532,5.391,533,5.391,534,5.391,535,5.391,536,5.391,537,5.391,538,5.391]],["title/classes/CsdlFunctionImport.html",[178,0.343,433,2.417]],["body/classes/CsdlFunctionImport.html",[3,0.099,4,0.085,5,0.099,6,0.108,10,0.072,11,0.664,12,0.206,23,0.109,24,0.01,27,0.711,33,0.128,45,1.52,52,3.029,59,1.391,60,1.851,75,0.182,82,0.976,118,0.132,151,2.252,154,2.191,156,2.252,157,2.252,169,3.136,172,0.172,176,0.008,177,0.008,178,0.671,180,0.258,187,0.291,224,0.393,402,1.19,417,3.151,418,2.363,419,3.65,420,4.331,421,4.331,422,1.851,423,4.502,424,4.502,431,3.151,432,3.462,433,3.942,434,5.378,435,4.858,436,3.151,437,2.936,539,5.581,540,5.581,541,5.581,542,5.581,543,5.581]],["title/classes/CsdlInclude.html",[178,0.343,544,2.968]],["body/classes/CsdlInclude.html",[3,0.111,4,0.096,5,0.111,6,0.107,8,0.663,10,0.081,11,0.714,12,0.202,23,0.103,24,0.01,28,0.398,33,0.122,45,1.481,75,0.18,86,3.141,118,0.096,133,3.094,134,1.572,172,0.142,176,0.009,177,0.009,178,0.643,180,0.29,187,0.284,224,0.371,402,1.071,418,2.344,442,4.062,444,3.548,446,3.901,449,2.269,452,3.713,453,3.548,484,3.027,544,5.569,545,5.028,546,5.527,547,6.284,548,7.509,549,2.729,550,4.358,551,4.655,552,5.028,553,5.207,554,4.655,555,4.655]],["title/classes/CsdlIncludeAnnotations.html",[178,0.343,553,2.968]],["body/classes/CsdlIncludeAnnotations.html",[3,0.109,4,0.094,5,0.109,6,0.108,8,0.651,10,0.079,11,0.706,12,0.212,23,0.106,24,0.01,28,0.391,33,0.121,45,1.488,75,0.181,86,3.083,118,0.094,133,2.294,134,1.14,172,0.139,176,0.008,177,0.008,178,0.638,180,0.285,187,0.293,224,0.368,402,1.265,418,2.384,442,4.017,444,3.482,446,3.857,449,2.228,452,4.998,453,3.482,484,2.971,544,5.149,545,4.935,549,2.679,550,4.278,551,4.57,552,4.935,553,5.525,554,6.125,555,6.267,556,6.168,557,6.168,558,6.168,559,6.168,560,6.168]],["title/classes/CsdlKey.html",[178,0.343,488,2.655]],["body/classes/CsdlKey.html",[3,0.106,4,0.091,5,0.106,6,0.101,8,0.771,10,0.077,11,0.822,12,0.151,23,0.094,24,0.01,27,0.708,28,0.38,33,0.128,45,1.472,54,1.647,75,0.175,118,0.128,134,1.11,152,1.936,172,0.136,176,0.008,177,0.008,178,0.672,180,0.277,187,0.259,224,0.379,418,2.218,449,2.638,467,3.546,468,3.792,469,2.891,470,5.149,471,3.316,472,5.492,473,5.823,474,5.492,475,4.094,476,4.094,484,2.891,485,3.118,486,3.951,487,3.546,488,4.884,489,3.926,490,5.681,491,5.208,561,6.003,562,5.279,563,6.003]],["title/classes/CsdlNavigationProperty.html",[178,0.343,476,2.139]],["body/classes/CsdlNavigationProperty.html",[3,0.096,4,0.083,5,0.096,6,0.107,8,0.796,10,0.07,11,0.655,12,0.22,23,0.115,24,0.01,27,0.717,33,0.124,45,1.508,54,1.498,60,1.81,75,0.181,82,0.878,118,0.129,151,1.761,154,2.713,156,1.761,157,1.761,159,2.452,172,0.123,176,0.008,177,0.008,178,0.654,180,0.252,187,0.303,224,0.366,402,1.392,418,2.35,422,1.81,437,2.295,449,2.487,456,2.953,465,2.647,471,2.156,475,2.729,476,3.442,485,4.333,486,3.725,564,3.786,565,5.539,566,5.343,567,5.343,568,5.343,569,5.665,570,5.067,571,5.067,572,5.459,573,5.459,574,5.459,575,5.459,576,5.459,577,4.801,578,4.801,579,4.801,580,3.387]],["title/classes/CsdlNavigationPropertyBinding.html",[178,0.343,511,2.968]],["body/classes/CsdlNavigationPropertyBinding.html",[3,0.116,4,0.1,5,0.116,6,0.108,10,0.084,11,0.733,12,0.165,23,0.105,24,0.01,33,0.1,45,1.427,54,2.316,75,0.178,118,0.1,155,2.197,172,0.149,176,0.009,177,0.009,178,0.526,180,0.304,187,0.29,224,0.304,418,2.379,449,2.373,451,5.628,511,5.347,581,6.572,582,4.766,583,6.572,584,6.572,585,7.71]],["title/classes/CsdlOnDelete.html",[178,0.343,571,2.655]],["body/classes/CsdlOnDelete.html",[3,0.107,4,0.092,5,0.107,6,0.101,8,0.775,10,0.078,11,0.699,12,0.152,23,0.111,24,0.01,27,0.689,33,0.128,45,1.496,54,1.664,60,2.726,75,0.181,82,0.92,118,0.125,151,1.956,154,2.642,156,1.956,157,1.956,159,2.723,172,0.137,176,0.008,177,0.008,178,0.674,180,0.28,187,0.26,224,0.38,418,2.228,437,2.549,449,2.654,456,3.28,471,2.394,475,3.03,476,3.03,485,4.108,486,3.975,564,4.205,565,5.172,566,3.966,567,3.966,568,3.966,569,4.205,570,4.558,571,4.905,580,3.761,586,6.063,587,6.063,588,6.063]],["title/classes/CsdlParameter.html",[178,0.343,424,2.529]],["body/classes/CsdlParameter.html",[3,0.094,4,0.081,5,0.094,6,0.11,10,0.068,11,0.643,12,0.219,23,0.113,24,0.01,27,0.704,33,0.126,45,1.521,52,2.441,59,1.426,60,1.758,75,0.182,82,1.033,118,0.131,151,2.67,154,2.598,156,2.67,157,2.67,169,3.035,172,0.168,176,0.008,177,0.008,178,0.663,180,0.245,187,0.302,224,0.389,402,1.38,417,2.993,418,2.423,419,3.467,420,4.193,421,4.193,422,1.758,423,4.397,424,4.631,431,2.993,432,3.288,433,2.993,434,3.467,435,3.132,436,2.993,437,3.48,589,5.301,590,5.301,591,5.301,592,5.301,593,5.301,594,5.301,595,5.301,596,5.301]],["title/classes/CsdlProperty.html",[178,0.343,475,2.139]],["body/classes/CsdlProperty.html",[3,0.093,4,0.08,5,0.093,6,0.109,8,0.784,10,0.068,11,0.641,12,0.223,23,0.115,24,0.01,27,0.714,33,0.123,45,1.51,54,1.448,60,1.75,75,0.182,82,1.02,118,0.128,151,2.608,154,2.697,156,2.608,157,2.608,159,2.37,172,0.119,176,0.008,177,0.008,178,0.647,180,0.244,187,0.307,224,0.362,402,1.432,418,2.398,422,1.75,437,3.399,449,2.434,456,4.374,465,2.606,471,2.084,475,3.369,476,2.638,485,4.421,486,3.646,564,3.66,565,5.497,566,3.452,567,3.452,568,3.452,569,3.66,570,4.181,571,4.181,577,4.642,578,4.642,579,4.642,580,5.016,597,5.278,598,5.278,599,5.278,600,5.278,601,5.278,602,5.278,603,5.278]],["title/classes/CsdlPropertyRef.html",[178,0.343,491,2.655]],["body/classes/CsdlPropertyRef.html",[3,0.104,4,0.09,5,0.104,6,0.104,8,0.762,10,0.076,11,0.819,12,0.196,23,0.1,24,0.01,27,0.705,28,0.373,33,0.127,45,1.48,54,1.617,75,0.18,118,0.132,134,1.544,152,1.9,172,0.133,176,0.008,177,0.008,178,0.669,180,0.272,187,0.277,224,0.376,402,1.004,418,2.293,422,1.954,449,2.608,467,3.481,468,3.92,469,2.838,470,5.107,471,3.298,472,5.463,473,5.792,474,5.463,475,4.068,476,4.068,484,2.838,485,3.06,486,3.906,487,3.481,488,4.479,489,3.853,490,4.086,491,4.844,604,5.181,605,7.221]],["title/classes/CsdlReference.html",[178,0.343,550,2.968]],["body/classes/CsdlReference.html",[3,0.107,4,0.092,5,0.107,6,0.108,8,0.774,10,0.077,11,0.697,12,0.217,23,0.108,24,0.01,28,0.383,33,0.12,45,1.492,75,0.177,86,4.205,118,0.092,133,2.248,134,1.118,172,0.137,176,0.008,177,0.008,178,0.632,180,0.279,187,0.298,224,0.365,402,1.346,418,2.37,442,4.442,444,4.749,446,4.37,449,2.183,452,3.571,453,3.413,465,2.121,466,4.478,484,2.912,544,5.834,545,4.837,549,2.625,550,5.087,551,6.083,552,6.731,553,5.834,554,4.478,555,4.478,606,6.045,607,6.045,608,6.045,609,6.045,610,6.045]],["title/classes/CsdlReferentialConstraint.html",[178,0.343,570,2.655]],["body/classes/CsdlReferentialConstraint.html",[3,0.105,4,0.091,5,0.105,6,0.105,8,0.768,10,0.076,11,0.692,12,0.15,23,0.112,24,0.01,27,0.686,33,0.128,45,1.499,54,2.243,60,1.979,75,0.182,82,0.914,118,0.124,151,1.925,154,2.63,156,1.925,157,1.925,159,3.764,172,0.135,176,0.008,177,0.008,178,0.671,180,0.276,187,0.278,224,0.378,418,2.304,437,2.509,449,2.628,456,3.228,471,2.356,475,2.982,476,2.982,485,4.247,486,3.937,564,4.138,565,5.136,566,3.903,567,3.903,568,3.903,569,4.138,570,4.871,571,4.514,580,3.701,611,5.967,612,5.967,613,7.278]],["title/classes/CsdlReturnType.html",[178,0.343,423,2.529]],["body/classes/CsdlReturnType.html",[3,0.095,4,0.082,5,0.095,6,0.109,10,0.069,11,0.649,12,0.219,23,0.113,24,0.01,27,0.706,33,0.126,45,1.52,52,2.463,59,1.416,60,1.783,75,0.181,82,1.035,118,0.126,151,2.68,154,2.607,156,2.68,157,2.68,169,3.063,172,0.169,176,0.008,177,0.008,178,0.665,180,0.248,187,0.299,224,0.39,402,1.386,417,3.035,418,2.407,419,3.517,420,4.231,421,4.231,423,4.655,424,4.426,431,3.035,432,3.335,433,3.035,434,3.517,435,3.176,436,3.035,437,3.493,614,5.377,615,5.377,616,5.377,617,5.377,618,5.377,619,5.377,620,5.377,621,5.377]],["title/classes/CsdlSchema.html",[178,0.343,622,3.425]],["body/classes/CsdlSchema.html",[3,0.091,4,0.078,5,0.091,6,0.112,8,0.698,10,0.066,11,0.629,12,0.226,23,0.114,24,0.01,28,0.52,33,0.078,45,1.511,48,1.908,59,0.85,60,1.701,75,0.17,118,0.078,133,2.879,134,1.482,172,0.116,176,0.008,177,0.008,178,0.411,180,0.237,187,0.311,224,0.306,392,2.812,402,1.479,417,4.525,418,2.472,431,4.525,442,4.188,444,4.525,446,4.163,450,4.972,453,2.896,454,4.972,465,1.8,466,3.8,467,4.735,468,2.471,484,3.953,487,4.735,492,5.937,493,2.304,524,5.558,546,4.512,549,2.228,622,5.296,623,5.13,624,8.014,625,8.014,626,8.014,627,7.049,628,8.014,629,8.014,630,8.014,631,8.014,632,5.937,633,5.13,634,5.13,635,5.13,636,5.13,637,5.13,638,5.13,639,5.13,640,5.13,641,5.13,642,5.13,643,5.13,644,5.13,645,4.104,646,4.104]],["title/classes/CsdlSingleton.html",[178,0.343,500,3.171]],["body/classes/CsdlSingleton.html",[3,0.113,4,0.098,5,0.113,6,0.11,10,0.082,11,0.723,12,0.203,23,0.114,24,0.01,28,0.406,33,0.098,45,1.472,54,1.759,75,0.177,118,0.13,155,1.669,172,0.145,176,0.009,177,0.009,178,0.513,180,0.296,187,0.297,224,0.351,402,1.093,418,2.409,422,2.126,484,3.088,500,5.629,511,5.928,517,4.193,647,6.411,648,8.548,649,6.411,650,6.411,651,6.411,652,6.411]],["title/classes/CsdlStructuralProperty.html",[178,0.343,565,2.8]],["body/classes/CsdlStructuralProperty.html",[3,0.103,4,0.089,5,0.103,6,0.107,8,0.759,10,0.075,11,0.684,12,0.196,23,0.114,24,0.01,27,0.711,33,0.127,45,1.502,54,1.607,60,1.942,75,0.182,82,0.906,118,0.131,151,1.889,154,2.746,156,1.889,157,1.889,159,2.63,172,0.132,176,0.008,177,0.008,178,0.667,180,0.271,187,0.288,224,0.375,402,0.998,418,2.349,422,1.942,437,2.462,449,2.598,456,3.168,471,2.313,475,2.927,476,2.927,485,4.331,486,3.892,564,4.062,565,5.313,566,3.831,567,3.831,568,3.831,569,4.062,570,4.463,571,4.463,580,3.633,653,5.857,654,5.857,655,5.857,656,5.857]],["title/classes/CsdlStructuredType.html",[178,0.343,470,2.8]],["body/classes/CsdlStructuredType.html",[3,0.097,4,0.083,5,0.097,6,0.11,8,0.729,10,0.07,11,0.834,12,0.22,23,0.109,24,0.01,27,0.725,28,0.348,33,0.125,45,1.496,54,1.505,75,0.179,118,0.131,134,1.014,152,1.769,172,0.124,176,0.008,177,0.008,178,0.655,180,0.253,187,0.3,224,0.367,402,1.394,418,2.416,422,1.819,449,2.494,467,3.24,468,4.13,469,2.641,470,5.191,471,3.417,472,5.659,473,6,474,5.659,475,4.237,476,4.237,484,2.641,485,2.849,486,3.736,487,3.24,488,4.284,489,3.587,490,3.803,491,4.284,522,4.388,523,4.388,528,4.823,657,5.484,658,5.484,659,4.823,660,4.823]],["title/classes/CsdlTerm.html",[178,0.343,454,2.655]],["body/classes/CsdlTerm.html",[3,0.095,4,0.082,5,0.095,6,0.113,8,0.568,10,0.069,11,0.649,12,0.224,23,0.114,24,0.01,27,0.645,33,0.12,45,1.513,75,0.183,82,1.023,118,0.124,129,1.943,151,2.623,154,2.552,156,2.623,157,2.623,172,0.122,176,0.008,177,0.008,178,0.631,180,0.249,187,0.31,224,0.346,402,1.456,418,2.476,422,1.785,437,3.42,442,3.692,443,3.987,444,3.853,446,3.893,449,2.465,450,3.338,451,3.52,452,4.032,453,3.038,454,4.233,455,5.64,456,4.4,457,5.64,661,5.381,662,5.381,663,5.381,664,5.381,665,5.381,666,5.381,667,5.381,668,5.381,669,5.381,670,5.381,671,5.381]],["title/classes/CsdlTypeDefinition.html",[178,0.343,632,3.171]],["body/classes/CsdlTypeDefinition.html",[3,0.101,4,0.087,5,0.101,6,0.112,8,0.746,10,0.073,11,0.673,12,0.223,23,0.115,24,0.01,27,0.659,28,0.361,33,0.087,45,1.505,75,0.178,82,1.031,118,0.126,151,2.668,156,2.668,157,2.668,172,0.129,176,0.008,177,0.008,178,0.456,180,0.263,187,0.308,224,0.327,402,1.437,418,2.454,422,1.889,437,3.478,442,4.352,444,4.67,446,4.297,453,3.216,465,1.999,466,4.22,484,2.744,549,2.474,580,5.131,632,5.24,672,5.697,673,8.272,674,5.697,675,5.697,676,5.697,677,5.697,678,5.697,679,5.697,680,5.697,681,5.697]],["title/classes/DateAndTimeFunctions.html",[178,0.343,272,1.69]],["body/classes/DateAndTimeFunctions.html",[0,1.295,3,0.046,4,0.04,5,0.046,6,0.102,8,0.598,10,0.033,12,0.195,18,0.611,23,0.106,24,0.011,27,0.716,28,0.258,33,0.13,57,1.218,59,1.369,75,0.169,82,0.583,83,1.016,92,2.146,99,1.53,106,0.952,113,0.586,118,0.123,121,2.115,134,0.481,155,1.305,165,1.287,168,0.817,172,0.176,176,0.005,177,0.005,178,0.661,179,1.98,180,0.12,181,1.029,182,0.657,186,1.061,187,0.279,189,1.167,190,1.061,192,1.061,194,1.061,195,1.514,196,2.701,197,2.575,198,2.872,199,3.25,200,3.238,201,0.969,202,2.098,203,1.608,204,1.061,205,2.505,206,2.429,207,1.98,208,1.061,209,1.061,210,1.061,211,1.061,212,1.061,213,1.061,214,1.061,215,1.061,216,3.656,217,1.06,218,1.429,219,1.061,220,0.998,221,1.061,222,1.061,223,1.685,224,0.232,225,2.37,226,2.695,227,1.206,228,0.795,229,2.505,230,0.754,231,2.505,232,2.505,233,1.061,234,1.061,235,1.659,236,1.061,237,1.98,238,1.061,239,1.061,240,1.061,241,1.061,242,1.061,243,1.061,244,1.061,245,1.061,246,1.061,247,1.061,248,1.061,249,1.061,250,1.061,251,1.659,252,1.659,253,1.061,254,1.061,255,1.98,256,1.061,257,2.309,258,1.061,259,1.659,260,1.061,261,1.061,262,1.98,263,1.061,264,1.659,265,1.061,266,1.061,267,1.061,268,1.061,269,1.061,270,1.061,271,1.061,272,2.239,273,1.659,274,1.061,275,1.659,276,1.061,277,1.659,278,1.061,279,1.659,280,1.061,281,1.659,282,1.061,283,1.659,284,1.061,285,1.659,286,1.061,287,1.659,288,1.061,289,2.309,290,1.061,291,1.659,292,1.061,293,1.659,294,1.061,295,1.659,296,1.061,297,1.659,298,1.061,299,1.659,300,1.061,301,1.061,302,1.061,303,1.061,304,1.98,305,1.061,306,1.061,307,1.061,308,1.061,309,1.98,310,1.061,311,1.659,312,1.061,313,1.061,314,1.659,315,1.061,316,1.061,317,1.061,318,1.061,319,1.98,320,1.061,321,1.061,322,1.061,323,2.042,324,1.659,325,3.364,326,3.544,327,1.659,328,1.061,329,1.061,330,0.969,331,1.061,332,1.061,333,1.98,334,1.061,335,1.061,336,1.061,337,1.061,338,1.061,339,1.061,340,1.061,341,1.061,342,1.061,343,1.061,344,1.061,345,1.061,346,1.061,347,1.061,348,1.061,349,1.061,350,1.061,351,1.061,352,1.061,353,1.061,354,1.061,355,1.061,356,1.98,357,1.061,358,1.061,359,1.061,360,1.061,361,1.061,362,1.061,363,1.061,364,1.061,365,1.061,366,1.061,367,1.061,368,1.47,369,1.659,370,1.061,371,1.061,372,1.061,373,0.998,374,1.061,375,1.98,376,1.659,377,1.659,378,1.608,379,1.061,380,1.061,381,1.061,382,1.98,383,1.061,384,1.061,385,1.061,386,1.061,387,2.656,388,1.061,389,1.061,390,2.656,391,1.061,392,0.914,393,1.061,394,1.061,682,4.072,683,4.072,684,4.072,685,4.072,686,4.072,687,4.072,688,4.072,689,4.072,690,3.258,691,4.072,692,4.072,693,4.072,694,2.604,695,2.604,696,2.604,697,2.604,698,2.604,699,2.604,700,2.604,701,2.604,702,2.604,703,2.604,704,2.604,705,2.604,706,2.604,707,2.604]],["title/classes/Field.html",[92,1.144,178,0.343]],["body/classes/Field.html",[3,0.064,4,0.056,5,0.064,6,0.086,8,0.385,10,0.079,11,0.499,12,0.092,23,0.098,24,0.01,28,0.532,33,0.056,34,3.068,45,1.294,46,2.864,48,1.95,51,2.581,52,1.894,53,2.437,54,1.842,55,1.895,56,2.059,57,0.495,59,1.018,60,2.036,72,3.566,75,0.153,92,1.641,94,1.486,103,1.757,106,1.449,118,0.113,123,2.836,126,2.155,129,1.894,133,1.356,134,0.674,135,1.28,150,1.973,151,1.176,152,1.176,154,1.144,155,0.949,156,1.176,157,1.176,159,1.638,165,1.254,169,1.638,172,0.082,173,2.836,176,0.006,177,0.006,178,0.42,180,0.169,187,0.217,217,1.365,224,0.169,225,1.645,417,2.059,420,2.262,421,2.262,422,1.209,423,2.155,424,2.155,431,2.059,432,2.262,433,2.059,435,2.155,436,2.059,437,1.533,446,1.895,449,1.317,450,2.262,451,2.385,452,2.155,454,2.262,455,2.529,456,1.973,457,2.529,467,2.155,468,1.757,471,1.44,472,2.385,474,2.385,475,1.823,476,1.823,485,1.895,487,2.155,488,2.262,489,2.385,491,2.262,492,2.702,493,2.355,499,2.702,500,2.702,508,2.059,510,3.208,511,2.529,517,2.385,521,2.702,524,2.529,525,2.918,526,2.918,544,2.529,549,2.277,550,3.636,551,2.702,553,2.529,554,2.702,555,2.702,566,2.385,567,2.385,568,2.385,570,2.262,571,2.262,580,2.262,582,2.059,622,4.195,627,3.208,632,2.702,645,2.918,646,2.918,708,3.208,709,7.097,710,3.647,711,5.243,712,8.255,713,2.526,714,1.001,715,3.208,716,4.195,717,1.695,718,3.208,719,4.612,720,3.647,721,2.262,722,6.76,723,7.308,724,3.647,725,3.647,726,3.647,727,3.647,728,3.647,729,3.647,730,3.647,731,3.647,732,3.647,733,3.647,734,3.647,735,3.647,736,3.647,737,3.647,738,3.647,739,2.529,740,3.647,741,3.647,742,3.647,743,3.647,744,3.647,745,3.647,746,3.647,747,3.647,748,3.647,749,3.647,750,3.647,751,3.647,752,3.647,753,3.647,754,3.647,755,3.647,756,3.647,757,3.647,758,3.647,759,3.647,760,3.647,761,3.647,762,3.647,763,3.647,764,3.647,765,3.647,766,3.808,767,3.647,768,3.647,769,3.647,770,3.647,771,3.647,772,3.647,773,3.647,774,3.647,775,3.647,776,3.647,777,3.647,778,3.647,779,3.647,780,3.647,781,3.647,782,3.647,783,3.647,784,3.647,785,3.647,786,3.647,787,3.647,788,3.647,789,3.647,790,3.647,791,3.647,792,3.647,793,3.647,794,3.647,795,3.647,796,3.647,797,3.647,798,3.647,799,3.647,800,3.647,801,3.647,802,3.647,803,3.647,804,3.647,805,3.647,806,3.647,807,3.647,808,3.647,809,3.647,810,3.647,811,5.243,812,6.139,813,3.647,814,3.647,815,3.647,816,2.702,817,3.647,818,3.647,819,6.713,820,5.243,821,3.647,822,3.647,823,3.647,824,3.647,825,3.647,826,3.647,827,8.328,828,3.647,829,5.243,830,3.647,831,5.243,832,3.647,833,3.647,834,2.836,835,3.647,836,3.647,837,3.647,838,3.647,839,3.647,840,3.647,841,3.647,842,3.647,843,3.647,844,3.647,845,3.647,846,3.647,847,3.647,848,3.647,849,3.647,850,4.164,851,3.647,852,2.918,853,3.647,854,2.918,855,3.647,856,6.139,857,5.243,858,5.399,859,3.647,860,3.647,861,3.647,862,3.647,863,3.647,864,3.647,865,2.385,866,2.918,867,3.647,868,3.647]],["title/classes/Function.html",[59,0.71,178,0.343]],["body/classes/Function.html",[0,1.346,3,0.049,4,0.043,5,0.049,6,0.082,8,0.622,10,0.036,12,0.108,18,0.657,22,1.152,23,0.099,24,0.011,27,0.725,28,0.273,33,0.131,57,1.213,59,1.16,75,0.173,82,0.611,83,1.019,92,2.176,99,1.502,106,0.997,113,0.849,118,0.11,134,0.518,155,1.367,165,1.292,168,0.88,172,0.097,176,0.005,177,0.005,178,0.669,179,2.074,180,0.13,181,1.107,182,0.695,186,1.142,187,0.209,189,0.639,190,1.142,192,1.142,194,1.142,195,1.603,196,2.768,197,2.764,198,3.081,199,3.279,200,3.289,201,1.042,202,2.464,203,1.702,204,1.142,205,2.592,206,2.513,207,2.074,208,1.142,209,1.142,210,1.142,211,1.142,212,1.142,213,1.142,214,1.142,215,1.142,216,3.675,217,1.122,218,1.512,219,1.142,220,1.074,221,1.142,222,1.142,223,1.892,224,0.272,225,2.415,226,2.905,227,1.264,228,0.856,229,2.592,230,0.811,231,2.592,232,2.592,233,1.142,234,1.142,235,1.756,236,1.142,237,2.074,238,1.142,239,1.142,240,1.142,241,1.142,242,1.142,243,1.142,244,1.142,245,1.142,246,1.142,247,1.142,248,1.142,249,1.142,250,1.142,251,1.756,252,1.756,253,1.142,254,1.142,255,2.074,256,1.142,257,2.401,258,1.142,259,1.756,260,1.142,261,1.142,262,2.074,263,1.142,264,1.756,265,1.142,266,1.142,267,1.142,268,1.142,269,1.142,270,1.142,271,1.142,272,2.074,273,1.142,274,1.142,275,1.142,276,1.142,277,1.142,278,1.142,279,1.142,280,1.142,281,1.142,282,1.142,283,1.142,284,1.142,285,1.142,286,1.142,287,1.142,288,1.142,289,1.142,290,1.142,291,1.142,292,1.142,293,1.142,294,1.142,295,1.142,296,1.142,297,1.142,298,1.142,299,1.142,300,1.142,301,1.142,302,1.142,303,1.142,304,2.074,305,1.142,306,1.142,307,1.142,308,1.142,309,2.074,310,1.142,311,1.756,312,1.142,313,1.142,314,1.756,315,1.142,316,1.142,317,1.142,318,1.142,319,2.074,320,1.142,321,1.142,322,1.142,323,2.139,324,1.756,325,3.403,326,3.568,327,1.756,328,1.142,329,1.142,330,1.042,331,1.142,332,1.142,333,2.074,334,1.142,335,1.142,336,1.142,337,1.142,338,1.142,339,1.142,340,1.142,341,1.142,342,1.142,343,1.142,344,1.142,345,1.142,346,1.142,347,1.142,348,1.142,349,1.142,350,1.142,351,1.142,352,1.142,353,1.142,354,1.142,355,1.142,356,2.074,357,1.142,358,1.142,359,1.142,360,1.142,361,1.142,362,1.142,363,1.142,364,1.142,365,1.142,366,1.142,367,1.142,368,1.557,369,1.756,370,1.142,371,1.142,372,1.142,373,1.074,374,1.142,375,2.074,376,1.756,377,1.756,378,1.702,379,1.142,380,1.142,381,1.142,382,2.074,383,1.142,384,1.142,385,1.142,386,1.142,387,2.737,388,1.142,389,1.142,390,2.737,391,1.142,392,0.984,393,1.142,394,1.142,422,0.93,869,1.47,870,2.803,871,1.833,872,2.803,873,2.803,874,2.803]],["title/classes/GeoFunctions.html",[178,0.343,309,1.69]],["body/classes/GeoFunctions.html",[0,1.344,3,0.049,4,0.043,5,0.049,6,0.075,8,0.621,10,0.036,12,0.132,18,0.655,23,0.097,24,0.011,27,0.726,28,0.272,33,0.131,57,1.214,59,1.227,75,0.173,82,0.61,83,1.019,92,2.174,99,1.512,106,0.995,113,0.619,118,0.106,134,0.516,155,1.364,165,1.292,168,0.876,172,0.118,176,0.005,177,0.005,178,0.668,179,2.069,180,0.129,181,1.103,182,0.693,186,1.137,187,0.186,189,0.776,190,1.137,192,1.137,194,1.137,195,1.598,196,2.764,197,2.65,198,2.939,199,3.278,200,3.267,201,1.038,202,2.167,203,1.697,204,1.137,205,2.588,206,2.509,207,2.069,208,1.137,209,1.137,210,1.137,211,1.137,212,1.137,213,1.137,214,1.137,215,1.137,216,3.679,217,1.119,218,1.508,219,1.137,220,1.07,221,1.137,222,1.137,223,1.749,224,0.242,225,2.413,226,2.752,227,1.261,228,0.853,229,2.588,230,0.808,231,2.588,232,2.588,233,1.137,234,1.137,235,1.751,236,1.137,237,2.069,238,1.137,239,1.137,240,1.137,241,1.137,242,1.137,243,1.137,244,1.137,245,1.137,246,1.137,247,1.137,248,1.137,249,1.137,250,1.137,251,1.751,252,1.751,253,1.137,254,1.137,255,2.069,256,1.137,257,2.397,258,1.137,259,1.751,260,1.137,261,1.137,262,2.069,263,1.137,264,1.751,265,1.137,266,1.137,267,1.137,268,1.137,269,1.137,270,1.137,271,1.137,272,2.069,273,1.137,274,1.137,275,1.137,276,1.137,277,1.137,278,1.137,279,1.137,280,1.137,281,1.137,282,1.137,283,1.137,284,1.137,285,1.137,286,1.137,287,1.137,288,1.137,289,1.137,290,1.137,291,1.137,292,1.137,293,1.137,294,1.137,295,1.137,296,1.137,297,1.137,298,1.137,299,1.137,300,1.137,301,1.137,302,1.137,303,1.137,304,2.069,305,1.137,306,1.137,307,1.137,308,1.137,309,2.324,310,1.751,311,2.397,312,1.137,313,1.751,314,2.397,315,1.137,316,1.751,317,1.137,318,1.751,319,2.069,320,1.137,321,1.137,322,1.137,323,2.134,324,1.751,325,3.401,326,3.567,327,1.751,328,1.137,329,1.137,330,1.038,331,1.137,332,1.137,333,2.069,334,1.137,335,1.137,336,1.137,337,1.137,338,1.137,339,1.137,340,1.137,341,1.137,342,1.137,343,1.137,344,1.137,345,1.137,346,1.137,347,1.137,348,1.137,349,1.137,350,1.137,351,1.137,352,1.137,353,1.137,354,1.137,355,1.137,356,2.069,357,1.137,358,1.137,359,1.137,360,1.137,361,1.137,362,1.137,363,1.137,364,1.137,365,1.137,366,1.137,367,1.137,368,1.552,369,1.751,370,1.137,371,1.137,372,1.137,373,1.07,374,1.137,375,2.069,376,1.751,377,1.751,378,1.697,379,1.137,380,1.137,381,1.137,382,2.069,383,1.137,384,1.137,385,1.137,386,1.137,387,2.733,388,1.137,389,1.137,390,2.733,391,1.137,392,0.98,393,1.137,394,1.137,402,0.893,875,4.298,876,4.298,877,4.298,878,2.793,879,2.793,880,2.793]],["title/classes/Grouping.html",[178,0.343,207,1.69]],["body/classes/Grouping.html",[0,1.351,3,0.05,4,0.043,5,0.05,6,0.082,8,0.624,10,0.036,12,0.109,18,0.662,22,1.158,23,0.099,24,0.011,27,0.721,28,0.275,33,0.132,57,1.213,59,1.117,75,0.171,82,0.614,83,1.02,92,2.179,99,1.503,106,1.002,113,0.852,118,0.103,134,0.522,155,1.373,165,1.293,168,0.886,172,0.098,176,0.005,177,0.005,178,0.669,179,2.083,180,0.13,181,1.115,182,0.699,186,1.15,187,0.21,189,0.642,190,1.15,192,1.15,194,1.15,195,1.612,196,2.774,197,2.932,198,3.087,199,3.282,200,3.271,201,1.05,202,2.469,203,1.711,204,1.15,205,2.6,206,2.521,207,2.337,208,1.15,209,1.15,210,1.15,211,1.15,212,1.15,213,1.15,214,1.15,215,1.15,216,3.67,217,1.128,218,1.521,219,1.15,220,1.081,221,1.15,222,1.15,223,1.898,224,0.273,225,2.42,226,2.761,227,1.269,228,0.862,229,2.6,230,0.817,231,2.6,232,2.6,233,1.15,234,1.15,235,1.765,236,1.15,237,2.083,238,1.15,239,1.15,240,1.15,241,1.15,242,1.15,243,1.15,244,1.15,245,1.15,246,1.15,247,1.15,248,1.15,249,1.15,250,1.15,251,1.765,252,1.765,253,1.15,254,1.15,255,2.083,256,1.15,257,2.41,258,1.15,259,1.765,260,1.15,261,1.15,262,2.083,263,1.15,264,1.765,265,1.15,266,1.15,267,1.15,268,1.15,269,1.15,270,1.15,271,1.15,272,2.083,273,1.15,274,1.15,275,1.15,276,1.15,277,1.15,278,1.15,279,1.15,280,1.15,281,1.15,282,1.15,283,1.15,284,1.15,285,1.15,286,1.15,287,1.15,288,1.15,289,1.15,290,1.15,291,1.15,292,1.15,293,1.15,294,1.15,295,1.15,296,1.15,297,1.15,298,1.15,299,1.15,300,1.15,301,1.15,302,1.15,303,1.15,304,2.083,305,1.15,306,1.15,307,1.15,308,1.15,309,2.083,310,1.15,311,1.765,312,1.15,313,1.15,314,1.765,315,1.15,316,1.15,317,1.15,318,1.15,319,2.083,320,1.15,321,1.15,322,1.15,323,2.149,324,1.765,325,3.406,326,3.57,327,1.765,328,1.15,329,1.15,330,1.05,331,1.15,332,1.15,333,2.083,334,1.15,335,1.15,336,1.15,337,1.15,338,1.15,339,1.15,340,1.15,341,1.15,342,1.15,343,1.15,344,1.15,345,1.15,346,1.15,347,1.15,348,1.15,349,1.15,350,1.15,351,1.15,352,1.15,353,1.15,354,1.15,355,1.15,356,2.083,357,1.15,358,1.15,359,1.15,360,1.15,361,1.15,362,1.15,363,1.15,364,1.15,365,1.15,366,1.15,367,1.15,368,1.565,369,2.41,370,1.15,371,1.15,372,1.15,373,1.081,374,1.15,375,2.083,376,1.765,377,1.765,378,1.711,379,1.15,380,1.15,381,1.15,382,2.083,383,1.15,384,1.15,385,1.15,386,1.15,387,2.745,388,1.15,389,1.15,390,2.745,391,1.15,392,0.99,393,1.15,394,1.15,869,1.478,871,1.846,881,2.823,882,2.823,883,2.823,884,2.823,885,2.823]],["title/classes/GroupingAndNavigationOperators.html",[178,0.343,375,1.69]],["body/classes/GroupingAndNavigationOperators.html",[0,1.355,3,0.05,4,0.043,5,0.05,6,0.068,8,0.626,10,0.036,12,0.109,18,0.665,23,0.097,24,0.011,27,0.721,28,0.276,33,0.132,57,1.216,59,1.119,75,0.171,82,0.616,83,1.02,92,2.225,99,1.507,106,1.005,113,0.626,118,0.103,134,0.525,155,1.758,165,1.293,168,0.89,172,0.12,176,0.005,177,0.005,178,0.67,179,2.09,180,0.131,181,1.12,182,0.702,186,1.156,187,0.154,189,0.645,190,1.156,192,1.156,194,1.156,195,1.618,196,2.778,197,2.666,198,2.954,199,3.284,200,3.273,201,1.055,202,2.182,203,1.718,204,1.156,205,2.606,206,2.527,207,2.666,208,1.156,209,1.156,210,1.156,211,1.156,212,1.156,213,1.156,214,1.156,215,1.156,216,3.671,217,1.133,218,1.527,219,1.156,220,1.087,221,1.156,222,1.156,223,1.764,224,0.245,225,2.423,226,2.765,227,1.273,228,0.866,229,2.606,230,0.821,231,2.606,232,2.606,233,1.156,234,1.156,235,1.772,236,1.156,237,2.09,238,1.156,239,1.156,240,1.156,241,1.156,242,1.156,243,1.156,244,1.156,245,1.156,246,1.156,247,1.156,248,1.156,249,1.156,250,1.156,251,1.772,252,1.772,253,1.156,254,1.156,255,2.09,256,1.156,257,2.417,258,1.156,259,1.772,260,1.156,261,1.156,262,2.09,263,1.156,264,1.772,265,1.156,266,1.156,267,1.156,268,1.156,269,1.156,270,1.156,271,1.156,272,2.09,273,1.156,274,1.156,275,1.156,276,1.156,277,1.156,278,1.156,279,1.156,280,1.156,281,1.156,282,1.156,283,1.156,284,1.156,285,1.156,286,1.156,287,1.156,288,1.156,289,1.156,290,1.156,291,1.156,292,1.156,293,1.156,294,1.156,295,1.156,296,1.156,297,1.156,298,1.156,299,1.156,300,1.156,301,1.156,302,1.156,303,1.156,304,2.09,305,1.156,306,1.156,307,1.156,308,1.156,309,2.09,310,1.156,311,1.772,312,1.156,313,1.156,314,1.772,315,1.156,316,1.156,317,1.156,318,1.156,319,2.09,320,1.156,321,1.156,322,1.156,323,2.155,324,1.772,325,3.409,326,3.572,327,1.772,328,1.156,329,1.156,330,1.055,331,1.156,332,1.156,333,2.09,334,1.156,335,1.156,336,1.156,337,1.156,338,1.156,339,1.156,340,1.156,341,1.156,342,1.156,343,1.156,344,1.156,345,1.156,346,1.156,347,1.156,348,1.156,349,1.156,350,1.156,351,1.156,352,1.156,353,1.156,354,1.156,355,1.156,356,2.09,357,1.156,358,1.156,359,1.156,360,1.156,361,1.156,362,1.156,363,1.156,364,1.156,365,1.156,366,1.156,367,1.156,368,1.571,369,1.772,370,1.156,371,1.156,372,1.156,373,1.087,374,1.156,375,2.343,376,2.155,377,2.155,378,1.718,379,1.156,380,1.156,381,1.156,382,2.09,383,1.156,384,1.156,385,1.156,386,1.156,387,2.75,388,1.156,389,1.156,390,2.75,391,1.156,392,0.996,393,1.156,394,1.156,886,2.837,887,2.837,888,2.495]],["title/classes/Lambda.html",[178,0.343,378,1.69]],["body/classes/Lambda.html",[0,1.347,3,0.05,4,0.043,5,0.05,6,0.067,8,0.672,10,0.036,12,0.108,18,0.658,22,1.153,23,0.099,24,0.011,27,0.724,28,0.273,33,0.131,57,1.213,59,1.114,75,0.173,82,0.612,83,1.019,92,2.176,99,1.502,106,0.998,113,0.849,118,0.102,134,0.519,155,1.368,165,1.292,168,0.88,172,0.097,176,0.005,177,0.005,178,0.669,179,2.075,180,0.13,181,1.108,182,0.696,186,1.143,187,0.209,189,0.639,190,1.143,192,1.143,194,1.143,195,1.604,196,2.768,197,2.655,198,3.082,199,3.28,200,3.269,201,1.043,202,2.465,203,1.703,204,1.143,205,2.593,206,2.854,207,2.075,208,1.143,209,1.143,210,1.143,211,1.143,212,1.143,213,1.143,214,1.143,215,1.143,216,3.675,217,1.123,218,1.514,219,1.143,220,1.075,221,1.143,222,1.143,223,1.753,224,0.273,225,2.416,226,2.905,227,1.265,228,0.857,229,2.593,230,0.812,231,2.593,232,2.593,233,1.143,234,1.143,235,1.757,236,1.143,237,2.075,238,1.143,239,1.143,240,1.143,241,1.143,242,1.143,243,1.143,244,1.143,245,1.143,246,1.143,247,1.143,248,1.143,249,1.143,250,1.143,251,1.757,252,1.757,253,1.143,254,1.143,255,2.075,256,1.143,257,2.403,258,1.143,259,1.757,260,1.143,261,1.143,262,2.075,263,1.143,264,1.757,265,1.143,266,1.143,267,1.143,268,1.143,269,1.143,270,1.143,271,1.143,272,2.075,273,1.143,274,1.143,275,1.143,276,1.143,277,1.143,278,1.143,279,1.143,280,1.143,281,1.143,282,1.143,283,1.143,284,1.143,285,1.143,286,1.143,287,1.143,288,1.143,289,1.143,290,1.143,291,1.143,292,1.143,293,1.143,294,1.143,295,1.143,296,1.143,297,1.143,298,1.143,299,1.143,300,1.143,301,1.143,302,1.143,303,1.143,304,2.075,305,1.143,306,1.143,307,1.143,308,1.143,309,2.075,310,1.143,311,1.757,312,1.143,313,1.143,314,1.757,315,1.143,316,1.143,317,1.143,318,1.143,319,2.075,320,1.143,321,1.143,322,1.143,323,2.593,324,1.757,325,3.403,326,3.568,327,1.757,328,1.143,329,1.143,330,1.043,331,1.143,332,1.143,333,2.075,334,1.143,335,1.143,336,1.143,337,1.143,338,1.143,339,1.143,340,1.143,341,1.143,342,1.143,343,1.143,344,1.143,345,1.143,346,1.143,347,1.143,348,1.143,349,1.143,350,1.143,351,1.143,352,1.143,353,1.143,354,1.143,355,1.143,356,2.075,357,1.143,358,1.143,359,1.143,360,1.143,361,1.143,362,1.143,363,1.143,364,1.143,365,1.143,366,1.143,367,1.143,368,1.558,369,1.757,370,1.143,371,1.143,372,1.143,373,1.075,374,1.143,375,2.075,376,1.757,377,1.757,378,2.075,379,1.143,380,1.143,381,1.143,382,2.075,383,1.143,384,1.143,385,1.143,386,1.143,387,2.738,388,1.143,389,1.143,390,2.738,391,1.143,392,0.984,393,1.143,394,1.143,465,1.514,869,1.471,871,1.835,889,2.467,890,2.806,891,2.806,892,2.806,893,2.806]],["title/classes/LambdaOperators.html",[178,0.343,382,1.69]],["body/classes/LambdaOperators.html",[0,1.357,3,0.05,4,0.043,5,0.05,6,0.068,8,0.627,10,0.036,12,0.109,18,0.667,23,0.095,24,0.011,27,0.721,28,0.276,33,0.132,57,1.217,59,1.121,75,0.171,82,0.617,83,1.02,92,2.212,99,1.511,106,1.007,113,0.628,118,0.103,134,0.526,155,1.38,165,1.293,168,0.893,172,0.099,176,0.005,177,0.005,178,0.67,179,2.093,180,0.131,181,1.124,182,0.703,186,1.159,187,0.154,189,0.646,190,1.159,192,1.159,194,1.159,195,1.621,196,2.781,197,2.669,198,2.957,199,3.285,200,3.274,201,1.058,202,2.185,203,1.722,204,1.159,205,2.61,206,2.53,207,2.093,208,1.159,209,1.159,210,1.159,211,1.159,212,1.159,213,1.159,214,1.159,215,1.159,216,3.672,217,1.135,218,1.53,219,1.159,220,1.09,221,1.159,222,1.159,223,1.766,224,0.245,225,2.424,226,2.768,227,1.276,228,0.869,229,2.61,230,0.823,231,2.61,232,2.61,233,1.159,234,1.159,235,1.776,236,1.159,237,2.093,238,1.159,239,1.159,240,1.159,241,1.159,242,1.159,243,1.159,244,1.159,245,1.159,246,1.159,247,1.159,248,1.159,249,1.159,250,1.159,251,1.776,252,1.776,253,1.159,254,1.159,255,2.093,256,1.159,257,2.42,258,1.159,259,1.776,260,1.159,261,1.159,262,2.093,263,1.159,264,1.776,265,1.159,266,1.159,267,1.159,268,1.159,269,1.159,270,1.159,271,1.159,272,2.093,273,1.159,274,1.159,275,1.159,276,1.159,277,1.159,278,1.159,279,1.159,280,1.159,281,1.159,282,1.159,283,1.159,284,1.159,285,1.159,286,1.159,287,1.159,288,1.159,289,1.159,290,1.159,291,1.159,292,1.159,293,1.159,294,1.159,295,1.159,296,1.159,297,1.159,298,1.159,299,1.159,300,1.159,301,1.159,302,1.159,303,1.159,304,2.093,305,1.159,306,1.159,307,1.159,308,1.159,309,2.093,310,1.159,311,1.776,312,1.159,313,1.159,314,1.776,315,1.159,316,1.159,317,1.159,318,1.159,319,2.093,320,1.159,321,1.159,322,1.159,323,2.159,324,1.776,325,3.41,326,3.573,327,1.776,328,1.159,329,1.159,330,1.058,331,1.159,332,1.159,333,2.093,334,1.159,335,1.159,336,1.159,337,1.159,338,1.159,339,1.159,340,1.159,341,1.159,342,1.159,343,1.159,344,1.159,345,1.159,346,1.159,347,1.159,348,1.159,349,1.159,350,1.159,351,1.159,352,1.159,353,1.159,354,1.159,355,1.159,356,2.093,357,1.159,358,1.159,359,1.159,360,1.159,361,1.159,362,1.159,363,1.159,364,1.159,365,1.159,366,1.159,367,1.159,368,1.575,369,1.776,370,1.159,371,1.159,372,1.159,373,1.09,374,1.159,375,2.093,376,1.776,377,1.776,378,2.347,379,1.159,380,1.159,381,1.159,382,2.347,383,1.776,384,1.159,385,1.776,386,1.159,387,2.753,388,1.159,389,1.159,390,2.753,391,1.159,392,0.998,393,1.159,394,1.159,894,2.845,895,2.845]],["title/classes/LogicalOperators.html",[178,0.343,333,1.69]],["body/classes/LogicalOperators.html",[0,1.295,3,0.046,4,0.04,5,0.046,6,0.098,8,0.598,10,0.033,12,0.19,18,0.611,23,0.105,24,0.011,27,0.733,28,0.258,33,0.13,57,1.208,59,1.081,75,0.169,82,0.583,83,1.016,92,2.146,99,1.493,106,0.952,113,0.586,118,0.121,134,0.481,155,1.305,165,1.287,168,0.817,172,0.171,176,0.005,177,0.005,178,0.661,179,1.98,180,0.12,181,1.029,182,0.657,186,1.061,187,0.268,189,1.119,190,1.061,192,1.061,194,1.061,195,1.514,196,2.701,197,2.575,198,2.872,199,3.25,200,3.238,201,0.969,202,2.098,203,1.608,204,1.061,205,2.505,206,3.171,207,1.98,208,1.061,209,1.061,210,1.061,211,1.061,212,1.061,213,1.061,214,1.061,215,1.061,216,3.69,217,1.06,218,1.429,219,1.061,220,0.998,221,1.061,222,1.061,223,1.685,224,0.232,225,2.37,226,2.695,227,1.206,228,0.795,229,2.505,230,0.754,231,2.505,232,2.505,233,1.061,234,1.061,235,1.659,236,1.061,237,1.98,238,1.061,239,1.061,240,1.061,241,1.061,242,1.061,243,1.061,244,1.061,245,1.061,246,1.061,247,1.061,248,1.061,249,1.061,250,1.061,251,1.659,252,1.659,253,1.061,254,1.061,255,1.98,256,1.061,257,2.309,258,1.061,259,1.659,260,1.061,261,1.061,262,1.98,263,1.061,264,1.659,265,1.061,266,1.061,267,1.061,268,1.061,269,1.061,270,1.061,271,1.061,272,1.98,273,1.061,274,1.061,275,1.061,276,1.061,277,1.061,278,1.061,279,1.061,280,1.061,281,1.061,282,1.061,283,1.061,284,1.061,285,1.061,286,1.061,287,1.061,288,1.061,289,1.061,290,1.061,291,1.061,292,1.061,293,1.061,294,1.061,295,1.061,296,1.061,297,1.061,298,1.061,299,1.061,300,1.061,301,1.061,302,1.061,303,1.061,304,1.98,305,1.061,306,1.061,307,1.061,308,1.061,309,1.98,310,1.061,311,1.659,312,1.061,313,1.061,314,1.659,315,1.061,316,1.061,317,1.061,318,1.061,319,1.98,320,1.061,321,1.061,322,1.061,323,2.042,324,1.659,325,3.498,326,3.631,327,1.659,328,1.061,329,1.061,330,0.969,331,1.061,332,1.061,333,2.239,334,1.659,335,1.061,336,1.659,337,1.061,338,1.659,339,1.061,340,1.659,341,1.061,342,1.659,343,1.061,344,1.659,345,1.061,346,1.659,347,1.061,348,1.659,349,1.061,350,1.659,351,1.061,352,1.659,353,1.061,354,1.659,355,1.061,356,1.98,357,1.061,358,1.061,359,1.061,360,1.061,361,1.061,362,1.061,363,1.061,364,1.061,365,1.061,366,1.061,367,1.061,368,1.47,369,1.659,370,1.061,371,1.061,372,1.061,373,0.998,374,1.061,375,1.98,376,1.659,377,1.659,378,1.608,379,1.061,380,1.061,381,1.061,382,1.98,383,1.061,384,1.061,385,1.061,386,1.061,387,2.656,388,1.061,389,1.061,390,2.656,391,1.061,392,0.914,393,1.061,394,1.061,402,1.287,896,4.072,897,4.072,898,4.072,899,4.072,900,4.072,901,4.072,902,2.604,903,2.604,904,2.604,905,2.604,906,2.604,907,2.604,908,2.604,909,2.604,910,2.604,911,2.604,912,2.604]],["title/classes/Navigation.html",[155,1.114,178,0.343]],["body/classes/Navigation.html",[0,1.349,3,0.05,4,0.043,5,0.05,6,0.082,8,0.623,10,0.036,12,0.109,18,0.66,22,1.155,23,0.099,24,0.011,27,0.721,28,0.274,33,0.131,57,1.216,59,1.116,75,0.171,82,0.613,83,1.02,92,2.245,99,1.508,106,1,113,0.85,118,0.102,134,0.52,155,1.538,165,1.292,168,0.883,172,0.098,176,0.005,177,0.005,178,0.669,179,2.079,180,0.13,181,1.111,182,0.697,186,1.146,187,0.209,189,0.64,190,1.146,192,1.146,194,1.146,195,1.607,196,2.771,197,2.768,198,3.085,199,3.281,200,3.27,201,1.046,202,2.467,203,1.707,204,1.146,205,2.597,206,2.517,207,2.079,208,1.146,209,1.146,210,1.146,211,1.146,212,1.146,213,1.146,214,1.146,215,1.146,216,3.67,217,1.125,218,1.517,219,1.146,220,1.078,221,1.146,222,1.146,223,1.895,224,0.273,225,2.418,226,2.758,227,1.267,228,0.859,229,2.597,230,0.814,231,2.597,232,2.597,233,1.146,234,1.146,235,1.761,236,1.146,237,2.079,238,1.146,239,1.146,240,1.146,241,1.146,242,1.146,243,1.146,244,1.146,245,1.146,246,1.146,247,1.146,248,1.146,249,1.146,250,1.146,251,1.761,252,1.761,253,1.146,254,1.146,255,2.079,256,1.146,257,2.406,258,1.146,259,1.761,260,1.146,261,1.146,262,2.079,263,1.146,264,1.761,265,1.146,266,1.146,267,1.146,268,1.146,269,1.146,270,1.146,271,1.146,272,2.079,273,1.146,274,1.146,275,1.146,276,1.146,277,1.146,278,1.146,279,1.146,280,1.146,281,1.146,282,1.146,283,1.146,284,1.146,285,1.146,286,1.146,287,1.146,288,1.146,289,1.146,290,1.146,291,1.146,292,1.146,293,1.146,294,1.146,295,1.146,296,1.146,297,1.146,298,1.146,299,1.146,300,1.146,301,1.146,302,1.146,303,1.146,304,2.079,305,1.146,306,1.146,307,1.146,308,1.146,309,2.079,310,1.146,311,1.761,312,1.146,313,1.146,314,1.761,315,1.146,316,1.146,317,1.146,318,1.146,319,2.079,320,1.146,321,1.146,322,1.146,323,2.144,324,1.761,325,3.405,326,3.569,327,1.761,328,1.146,329,1.146,330,1.046,331,1.146,332,1.146,333,2.079,334,1.146,335,1.146,336,1.146,337,1.146,338,1.146,339,1.146,340,1.146,341,1.146,342,1.146,343,1.146,344,1.146,345,1.146,346,1.146,347,1.146,348,1.146,349,1.146,350,1.146,351,1.146,352,1.146,353,1.146,354,1.146,355,1.146,356,2.079,357,1.146,358,1.146,359,1.146,360,1.146,361,1.146,362,1.146,363,1.146,364,1.146,365,1.146,366,1.146,367,1.146,368,1.561,369,1.761,370,1.146,371,1.146,372,1.146,373,1.078,374,1.146,375,2.079,376,1.761,377,1.761,378,1.707,379,1.146,380,1.146,381,1.146,382,2.079,383,1.146,384,1.146,385,1.146,386,1.146,387,2.741,388,1.146,389,1.146,390,2.741,391,1.146,392,0.987,393,1.146,394,1.146,869,1.474,871,1.84,913,2.813,914,2.813,915,2.813,916,2.813,917,2.813]],["title/classes/ODataAnnotatable.html",[178,0.343,918,2.224]],["body/classes/ODataAnnotatable.html",[3,0.097,4,0.084,5,0.097,6,0.105,10,0.07,11,0.72,12,0.19,22,1.849,23,0.109,24,0.01,27,0.567,28,0.348,33,0.105,57,1.078,59,1.255,74,2.294,75,0.173,82,0.64,83,0.923,99,1.29,106,1.314,111,1.591,113,1.09,118,0.115,128,4.095,129,3.063,130,3.105,131,3.105,132,3.105,135,2.787,165,0.996,172,0.18,176,0.008,177,0.008,178,0.554,180,0.254,182,1.116,187,0.281,189,1.238,224,0.254,227,1.665,549,3.828,714,1.509,918,3.594,919,4.836,920,4.292,921,4.292,922,3.216,923,6.919,924,2.556,925,4.622,926,4.087,927,4.297,928,5.499,929,4.341,930,4.693,931,4.693,932,3.216,933,4.087,934,4.177,935,5.499,936,4.127,937,3.216,938,4.087,939,4.836,940,4.836,941,4.836,942,4.836,943,3.411,944,4.836,945,2.556,946,4.836,947,4.836,948,4.836,949,3.249,950,4.836,951,4.836,952,4.836,953,4.836,954,4.836,955,4.836,956,4.836,957,4.836]],["title/classes/ODataAnnotation.html",[178,0.343,925,2.417]],["body/classes/ODataAnnotation.html",[3,0.099,4,0.086,5,0.099,6,0.11,10,0.072,11,0.784,12,0.221,23,0.109,24,0.01,27,0.626,28,0.357,33,0.107,57,0.953,59,0.933,74,2.328,75,0.178,82,0.817,83,0.903,99,0.959,106,1.333,113,1.01,118,0.086,128,4.459,129,3.079,130,4.319,131,4.319,132,4.319,135,2.463,165,1.01,172,0.127,176,0.008,177,0.008,178,0.562,180,0.26,187,0.302,189,1.133,224,0.26,227,1.354,549,3.65,714,1.544,918,2.923,919,4.949,922,2.616,925,4.522,926,3.325,927,3.797,929,3.974,930,4.147,931,4.147,933,3.325,934,4.201,936,3.646,937,2.616,938,3.325,939,6.173,940,4.949,941,4.949,942,4.949,943,3.491,944,4.949,945,2.616,946,4.949,947,4.949,948,4.949,949,3.325,950,4.949,951,4.949,952,4.949,953,4.949,954,4.949,955,4.949,956,4.949,957,4.949,958,7.019,959,5.627,960,5.627,961,5.627,962,5.627,963,5.627]],["title/classes/ODataAnnotations.html",[178,0.343,964,2.968]],["body/classes/ODataAnnotations.html",[3,0.081,4,0.07,5,0.081,6,0.106,8,0.731,10,0.059,11,0.659,12,0.174,15,1.926,22,2.171,23,0.112,24,0.011,26,3.326,28,0.389,29,4.013,30,3.469,33,0.113,45,1.149,46,2.175,51,3.114,52,2.503,58,2.057,68,2.057,69,2.057,70,2.129,75,0.174,83,1.017,99,1.262,113,1.145,118,0.131,135,2.432,165,0.998,172,0.167,176,0.007,177,0.007,178,0.593,180,0.212,182,0.991,187,0.288,189,1.027,217,1.804,224,0.284,225,1.928,392,2.156,402,0.781,471,3.208,714,1.257,766,3.811,869,2.095,934,2.289,937,3.696,943,4.3,964,5.633,965,3.393,966,4.586,967,4.595,968,4.58,969,4.095,970,4.845,971,4.58,972,4.58,973,4.551,974,4.58,975,4.58,976,5.723,977,4.58,978,4.58,979,4.58,980,4.58,981,4.58,982,3.393,983,3.393,984,3.393,985,3.393,986,2.289,987,4.534,988,5.135,989,4.807,990,3.393,991,4.534,992,3.393,993,2.996,994,3.393,995,3.393,996,3.393,997,3.393,998,3.393,999,3.393,1000,4.551,1001,4.551,1002,3.393,1003,3.393,1004,3.393,1005,3.393,1006,3.393,1007,3.393,1008,3.393,1009,3.393,1010,3.393,1011,5.135,1012,3.393,1013,3.393,1014,3.393,1015,4.551,1016,5.891,1017,4.551,1018,4.551,1019,4.551,1020,4.534,1021,3.393,1022,3.393,1023,3.393,1024,3.393,1025,3.393,1026,3.393,1027,5.135,1028,3.393,1029,4.551,1030,3.393,1031,3.393,1032,3.393]],["title/classes/ODataApiOptions.html",[178,0.343,1033,3.425]],["body/classes/ODataApiOptions.html",[1,4.268,3,0.079,4,0.068,5,0.079,6,0.111,9,2.476,10,0.057,11,0.574,12,0.209,13,3.976,14,3.699,15,2.875,16,3.944,17,3.558,18,1.794,19,3.699,20,3.86,21,3.552,22,2.046,23,0.112,24,0.011,25,3.293,26,3.29,27,0.695,28,0.433,30,3.437,33,0.092,34,3.662,38,2.382,41,2.412,48,2.243,51,2.875,57,0.605,71,2.316,72,3.8,73,3.963,74,2.001,75,0.167,76,2.412,77,2.412,78,2.316,79,3.86,80,3.86,81,2.412,82,0.519,83,0.771,84,2.228,85,2.517,86,2.228,87,3.182,97,3.652,98,2.804,104,2.906,118,0.068,119,2.543,172,0.101,176,0.007,177,0.007,178,0.483,180,0.206,187,0.305,223,2.032,224,0.206,227,1.452,228,1.842,714,1.223,717,2.072,816,4.469,869,2.058,922,3.178,924,2.072,1033,4.827,1034,3.921,1035,4.458,1036,4.458,1037,5.306,1038,4.469,1039,4.136,1040,4.458,1041,6.443,1042,4.458,1043,4.458,1044,4.827,1045,4.469,1046,4.458,1047,6.443,1048,6.443,1049,4.458,1050,4.458,1051,4.458,1052,4.458,1053,5.306,1054,4.184,1055,4.458,1056,4.458,1057,4.184,1058,5.306,1059,3.567,1060,4.458,1061,5.306,1062,5.306,1063,5.471,1064,3.567,1065,6.455,1066,7.095,1067,3.921,1068,3.263,1069,3.921,1070,3.921,1071,6.939,1072,6.939,1073,6.939,1074,6.939,1075,6.939,1076,6.939,1077,6.939,1078,3.921,1079,3.921,1080,3.921,1081,3.921,1082,3.921,1083,3.921,1084,4.827,1085,4.827,1086,4.827,1087,3.921,1088,3.921,1089,3.567,1090,3.921,1091,3.567,1092,3.921,1093,3.921,1094,3.921,1095,3.567,1096,3.921,1097,3.567,1098,3.921,1099,3.921,1100,3.921,1101,3.921,1102,3.921,1103,3.921,1104,3.921,1105,4.827,1106,2.517]],["title/classes/ODataBaseService.html",[178,0.343,1107,2.968]],["body/classes/ODataBaseService.html",[3,0.064,4,0.055,5,0.064,6,0.109,9,2.82,10,0.046,12,0.21,18,2.025,23,0.113,24,0.01,28,0.386,31,3.825,32,1.673,33,0.055,43,4.391,54,2.134,57,0.827,75,0.148,83,0.752,118,0.13,119,2.266,138,3.966,167,4.028,172,0.199,176,0.006,177,0.006,178,0.288,180,0.166,182,0.838,187,0.299,189,1.231,217,2.305,224,0.24,225,2.82,402,1.388,471,1.421,493,3.698,869,1.771,1107,3.602,1108,3.599,1109,6.246,1110,6.246,1111,5.871,1112,3.166,1113,3.165,1114,4.943,1115,5.359,1116,3.599,1117,4.876,1118,5.241,1119,4.639,1120,6.284,1121,5.891,1122,6.22,1123,3.599,1124,4.753,1125,3.599,1126,3.599,1127,3.599,1128,3.599,1129,5.241,1130,6.284,1131,3.599,1132,3.599,1133,3.599,1134,3.599,1135,3.599,1136,4.514,1137,5.579,1138,3.599,1139,3.78,1140,3.599,1141,3.599,1142,2.496,1143,3.599,1144,2.666,1145,2.496,1146,2.88,1147,1.947,1148,3.599,1149,6.094,1150,6.094,1151,5.194,1152,3.599]],["title/classes/ODataBatchRequest.html",[178,0.343,1153,3.765]],["body/classes/ODataBatchRequest.html",[3,0.065,4,0.056,5,0.065,6,0.095,8,0.651,9,2.4,10,0.091,11,0.502,12,0.155,13,2.742,17,3.637,18,0.863,21,1.912,22,1.801,23,0.1,24,0.011,28,0.524,31,2.928,32,1.711,33,0.08,45,0.875,46,1.155,47,1.653,49,1.711,50,4.31,74,1.75,75,0.174,82,0.785,83,0.898,97,3.591,98,3.317,102,3.247,106,1.596,111,1.527,113,0.97,114,1.653,118,0.094,123,4.018,152,1.187,163,3.86,165,1.147,166,1.773,170,2.98,172,0.139,175,1.711,176,0.006,177,0.006,178,0.423,180,0.17,182,0.851,187,0.253,189,0.999,201,2.507,217,2.237,224,0.17,330,1.369,408,2.283,415,2.945,449,1.329,582,2.078,713,1.773,714,1.01,716,4.223,717,1.711,722,4.571,834,3.338,850,3.274,949,2.174,966,2.078,969,3.646,986,3.084,1039,2.078,1054,4.675,1057,2.552,1112,3.206,1119,3.206,1121,2.407,1153,6.276,1154,3.68,1155,5.427,1156,5.278,1157,5.278,1158,3.68,1159,4.319,1160,3.68,1161,3.68,1162,5.278,1163,5.903,1164,3.68,1165,5.278,1166,5.278,1167,3.68,1168,3.68,1169,5.278,1170,4.642,1171,3.68,1172,4.642,1173,3.68,1174,3.68,1175,3.68,1176,3.68,1177,4.937,1178,5.278,1179,5.278,1180,5.278,1181,3.68,1182,3.68,1183,5.278,1184,3.68,1185,5.427,1186,5.393,1187,3.237,1188,2.552,1189,3.237,1190,3.91,1191,3.91,1192,3.66,1193,3.91,1194,3.118,1195,3.68,1196,2.174,1197,2.727,1198,2.727,1199,2.727,1200,3.68,1201,3.68,1202,4.193,1203,6.741,1204,3.68,1205,4.642,1206,2.407,1207,5.278,1208,5.278,1209,3.68,1210,3.68,1211,5.278,1212,6.741,1213,6.171,1214,1.839,1215,2.594,1216,3.68,1217,6.741,1218,4.571,1219,5.278,1220,6.171,1221,3.68,1222,3.68,1223,3.68,1224,3.68,1225,3.68,1226,3.68,1227,3.68,1228,4.642,1229,3.68,1230,3.68,1231,3.68,1232,3.68,1233,3.68,1234,3.237,1235,3.68,1236,2.945,1237,3.68,1238,3.68,1239,5.942,1240,3.68,1241,3.68,1242,2.945,1243,3.68,1244,3.452,1245,3.68,1246,3.68,1247,3.68,1248,3.68,1249,6.171,1250,5.278,1251,3.237,1252,3.237,1253,5.278,1254,6.171,1255,5.278,1256,6.171,1257,3.237,1258,3.452,1259,3.237,1260,3.91,1261,3.68,1262,3.68,1263,3.68,1264,4.642,1265,3.68,1266,3.68,1267,4.642,1268,3.68,1269,3.68,1270,3.68,1271,5.278,1272,3.68,1273,2.945,1274,3.68,1275,5.278,1276,5.278,1277,3.237,1278,3.68,1279,3.68,1280,3.68,1281,3.68,1282,3.68,1283,3.68,1284,3.68,1285,3.68,1286,5.278,1287,7.968,1288,5.278,1289,6.741,1290,7.136,1291,3.68,1292,7.136,1293,6.741,1294,5.278,1295,3.68,1296,3.68,1297,3.68,1298,6.171,1299,3.68,1300,3.68,1301,3.68,1302,3.68,1303,2.552,1304,3.68,1305,3.68,1306,3.68,1307,3.68,1308,3.68,1309,3.237,1310,3.68,1311,3.68,1312,3.68,1313,3.68,1314,3.68,1315,3.68,1316,3.68,1317,3.68,1318,3.68,1319,3.68,1320,3.68,1321,3.68,1322,3.68]],["title/classes/ODataCache.html",[178,0.343,1323,2.8]],["body/classes/ODataCache.html",[0,0.818,3,0.063,4,0.055,5,0.063,6,0.11,10,0.046,11,0.492,12,0.21,22,2.148,23,0.113,24,0.011,27,0.293,28,0.447,31,3.681,32,1.664,33,0.079,38,3.173,39,1.724,40,3.457,46,2.309,47,1.608,49,1.664,57,0.825,75,0.176,82,0.883,83,0.935,97,1.555,99,1.402,106,1.562,109,3.792,111,2.043,113,1.171,118,0.132,119,2.259,152,2.373,165,0.745,172,0.193,176,0.006,177,0.006,178,0.287,180,0.165,182,0.834,187,0.302,189,1.24,223,1.538,224,0.239,227,0.861,408,3.769,471,2.996,714,0.982,717,1.664,721,5.226,834,2.799,945,3.093,969,2.115,1045,5.754,1124,2.115,1139,2.221,1147,1.937,1159,4.891,1194,4.748,1202,4.921,1214,1.789,1215,1.505,1236,4.14,1239,4.861,1244,2.342,1258,5.256,1323,3.384,1324,3.148,1325,5.23,1326,5.802,1327,4.501,1328,4.14,1329,4.615,1330,4.501,1331,4.14,1332,4.501,1333,4.501,1334,4.14,1335,4.14,1336,4.14,1337,5.573,1338,2.483,1339,5.174,1340,3.58,1341,2.864,1342,3.58,1343,4.812,1344,3.833,1345,3.58,1346,1.86,1347,3.58,1348,2.864,1349,3.58,1350,3.588,1351,3.58,1352,3.588,1353,3.58,1354,2.864,1355,3.58,1356,2.864,1357,3.58,1358,2.864,1359,3.58,1360,3.833,1361,3.58,1362,5.23,1363,2.864,1364,3.58,1365,3.588,1366,3.58,1367,3.833,1368,3.58,1369,3.833,1370,3.58,1371,3.148,1372,4.55,1373,2.864,1374,3.148,1375,3.148,1376,2.864,1377,4.55,1378,4.55,1379,3.833,1380,3.148,1381,3.148,1382,3.148,1383,3.6,1384,2.864,1385,2.864,1386,2.864,1387,3.148,1388,4.55,1389,3.148,1390,3.148,1391,3.148,1392,3.148,1393,3.148,1394,3.148,1395,3.148,1396,3.148,1397,4.55,1398,3.148,1399,4.55,1400,3.148,1401,4.55,1402,3.148,1403,3.588,1404,4.55,1405,3.148,1406,3.148,1407,3.148,1408,3.148,1409,2.342,1410,3.148,1411,3.148,1412,3.148,1413,3.148,1414,3.148,1415,3.148,1416,3.148,1417,3.148,1418,3.148,1419,3.148,1420,3.148,1421,5.853,1422,3.148,1423,4.55,1424,3.148,1425,3.148,1426,3.148,1427,3.148,1428,3.148,1429,3.148,1430,3.148,1431,2.864,1432,3.148,1433,3.148,1434,3.148]],["title/interfaces/ODataCacheEntry.html",[0,0.978,1343,2.8]],["body/interfaces/ODataCacheEntry.html",[0,0.998,2,2.271,3,0.077,4,0.067,5,0.077,6,0.056,10,0.056,11,0.566,23,0.093,24,0.011,28,0.482,31,3.486,32,2.032,33,0.091,38,3.271,39,2.105,40,3.775,46,1.868,47,1.963,49,2.032,75,0.176,82,0.975,83,0.967,97,1.898,99,1.337,106,1.618,109,4.012,111,1.265,113,1.155,118,0.119,152,2.53,165,0.857,176,0.007,177,0.007,178,0.35,223,1.299,224,0.202,227,1.052,408,2.712,471,2.673,714,1.199,717,2.032,721,5.402,834,3.22,945,3.146,969,2.582,1045,6.051,1124,2.582,1139,2.712,1147,2.365,1159,4.531,1194,4.491,1202,4.843,1214,2.185,1215,1.838,1236,4.763,1239,5.416,1244,2.859,1258,4.427,1323,2.859,1324,3.844,1325,5.014,1326,6.013,1327,3.238,1329,3.031,1330,3.238,1332,3.238,1333,3.238,1337,5.665,1343,4.753,1344,3.238,1350,3.031,1352,3.031,1360,3.238,1362,5.383,1365,3.031,1367,3.238,1369,3.238,1371,3.844,1372,5.235,1373,3.497,1374,3.844,1375,3.844,1376,3.497,1377,6.686,1378,5.235,1379,4.41,1380,3.844,1381,3.844,1382,3.844,1383,3.931,1384,3.497,1385,3.497,1386,3.497,1387,3.844,1388,5.235,1389,3.844,1390,3.844,1391,3.844,1392,3.844,1393,3.844,1394,3.844,1395,3.844,1396,3.844,1397,5.235,1398,3.844,1399,5.235,1400,3.844,1401,5.235,1402,3.844,1403,4.128,1404,5.235,1405,3.844,1406,3.844,1407,3.844,1408,3.844,1409,2.859,1410,3.844,1411,3.844,1412,3.844,1413,3.844,1414,3.844,1415,3.844,1416,3.844,1417,3.844,1418,3.844,1419,3.844,1420,3.844,1421,6.391,1422,3.844,1423,5.235,1424,3.844,1425,3.844,1426,3.844,1427,3.844,1428,3.844,1429,3.844,1430,3.844,1431,3.497,1432,3.844,1433,3.844,1434,3.844]],["title/classes/ODataCallable.html",[178,0.343,1435,3.425]],["body/classes/ODataCallable.html",[3,0.075,4,0.065,5,0.075,6,0.112,9,2.822,10,0.055,11,0.557,12,0.215,22,1.923,23,0.116,24,0.01,27,0.653,28,0.424,33,0.065,42,3.043,57,1.209,74,2.694,75,0.174,83,0.915,84,3.596,94,3.071,95,3.231,100,3.497,101,3.497,103,3.466,105,2.63,111,1.235,118,0.127,119,1.588,125,2.41,133,2.178,134,1.394,141,3.738,165,0.614,169,3.002,170,3.775,171,3.95,172,0.18,176,0.007,177,0.007,178,0.342,180,0.197,182,0.945,187,0.308,189,1.304,224,0.197,227,1.409,228,1.304,230,1.935,402,1.139,517,5.313,582,4.653,713,3.912,714,1.171,869,1.998,922,2.722,924,2.722,932,3.344,1112,3.473,1142,2.961,1435,4.686,1436,4.269,1437,3.775,1438,4.062,1439,5.094,1440,5.857,1441,4.269,1442,4.269,1443,4.269,1444,4.269,1445,5.33,1446,4.269,1447,4.269,1448,6.433,1449,2.961,1450,4.269,1451,3.307,1452,4.269,1453,5.151,1454,6.671,1455,5.151,1456,5.151,1457,4.269,1458,5.151,1459,5.151,1460,3.307,1461,4.269,1462,4.686,1463,4.269,1464,3.307,1465,4.269,1466,5.151,1467,4.339,1468,3.755,1469,4.269,1470,4.686,1471,5.151,1472,4.269,1473,3.163,1474,2.309,1475,6.686,1476,4.269,1477,5.857,1478,4.269,1479,4.269,1480,4.269,1481,2.792,1482,3.755,1483,3.755,1484,4.686,1485,4.269,1486,4.269,1487,2.961,1488,3.755,1489,3.416,1490,3.755,1491,3.163,1492,4.373,1493,3.755,1494,3.755,1495,2.792,1496,2.792,1497,2.792,1498,4.269]],["title/classes/ODataCallableParser.html",[178,0.343,1445,3.171]],["body/classes/ODataCallableParser.html",[3,0.073,4,0.063,5,0.073,6,0.11,9,2.827,10,0.053,11,0.543,12,0.212,18,1.66,22,1.752,23,0.113,24,0.011,27,0.58,28,0.471,33,0.087,46,1.29,48,2.122,57,0.558,75,0.177,83,0.969,87,3.595,94,3.436,95,2.944,99,0.701,100,2.944,101,3.18,103,3.411,105,1.847,106,1.499,107,3.678,111,1.19,113,1.136,118,0.128,133,2.936,134,1.46,141,3.678,153,2.965,154,1.29,165,1.159,167,3.18,172,0.189,176,0.006,177,0.006,178,0.457,180,0.19,182,0.92,187,0.303,189,1.141,223,1.696,224,0.19,230,1.652,402,1.207,422,1.364,468,2.749,517,4.632,714,1.128,717,1.911,739,2.852,850,3.54,922,2.653,924,1.911,945,1.911,949,3.372,1106,2.321,1124,3.372,1214,2.055,1215,1.729,1346,2.136,1383,3.83,1437,3.998,1438,3.958,1445,4.228,1449,2.852,1451,3.222,1460,3.222,1464,2.321,1474,2.224,1481,5.265,1492,4.866,1495,2.69,1496,2.69,1497,2.69,1499,3.616,1500,5.707,1501,4.112,1502,4.112,1503,4.112,1504,5.245,1505,4.112,1506,4.112,1507,4.112,1508,4.112,1509,4.112,1510,4.112,1511,5.02,1512,4.112,1513,4.112,1514,5.02,1515,4.112,1516,6.228,1517,3.873,1518,4.856,1519,3.046,1520,3.616,1521,3.046,1522,3.616,1523,3.046,1524,3.616,1525,5.517,1526,4.866,1527,5.164,1528,4.228,1529,4.228,1530,3.616,1531,3.616,1532,3.046,1533,3.046,1534,3.046,1535,3.046,1536,3.046,1537,4.228,1538,3.046,1539,3.046,1540,3.046,1541,2.551,1542,3.54,1543,5.02,1544,3.616,1545,5.765,1546,3.616,1547,3.616,1548,2.69,1549,2.69,1550,2.551,1551,6.228,1552,6.944,1553,5.02,1554,5.02,1555,3.616,1556,3.616,1557,3.616,1558,3.616,1559,3.616,1560,3.616]],["title/classes/ODataEntitiesAnnotations.html",[178,0.343,1020,2.8]],["body/classes/ODataEntitiesAnnotations.html",[3,0.078,4,0.068,5,0.078,6,0.109,8,0.772,10,0.057,11,0.649,12,0.192,15,1.868,22,2.043,23,0.11,24,0.011,26,3.285,28,0.381,29,3.545,30,3.285,33,0.111,45,1.132,46,2.399,51,3.076,52,1.604,58,3.065,59,0.998,68,3.065,69,3.065,70,3.172,75,0.175,83,1.015,99,1.247,113,1.134,118,0.131,135,1.559,165,0.982,172,0.165,176,0.007,177,0.007,178,0.586,180,0.205,182,0.97,187,0.306,189,1.084,217,1.777,224,0.205,225,1.888,392,2.567,465,2.567,471,2.695,714,1.219,766,3.733,869,2.052,934,2.22,937,3.663,943,4.233,964,5.827,965,3.291,966,4.55,967,4.538,969,2.624,970,3.936,973,4.458,976,5.663,982,3.291,983,3.291,984,3.291,985,3.291,986,2.22,987,4.464,988,5.056,989,4.733,990,3.291,991,4.464,992,3.291,993,2.905,994,3.291,995,3.291,996,3.291,997,3.291,998,3.291,999,3.291,1000,5.419,1001,4.458,1002,3.291,1003,3.291,1004,3.291,1005,3.291,1006,3.291,1007,3.291,1008,3.291,1009,3.291,1010,3.291,1011,5.056,1012,3.291,1013,3.291,1014,3.291,1015,5.419,1016,5.839,1017,4.458,1018,5.056,1019,4.458,1020,5,1021,3.291,1022,3.291,1023,5.056,1024,3.291,1025,5.056,1026,3.291,1027,5.056,1028,3.291,1029,4.458,1030,3.291,1031,3.291,1032,3.291,1561,4.442,1562,3.554,1563,4.442,1564,4.442,1565,4.442,1566,3.554,1567,3.907,1568,4.442,1569,4.442,1570,4.442,1571,4.442,1572,4.442,1573,4.442,1574,4.442,1575,4.442,1576,4.442,1577,4.442,1578,4.442,1579,4.442,1580,4.442,1581,3.907,1582,4.442]],["title/classes/ODataEntityAnnotations.html",[178,0.343,991,2.8]],["body/classes/ODataEntityAnnotations.html",[3,0.076,4,0.065,5,0.076,6,0.111,8,0.761,10,0.055,11,0.718,12,0.204,15,2.819,22,2.085,23,0.111,24,0.011,26,3.239,28,0.373,29,3.484,30,3.239,33,0.11,45,1.112,46,2.507,51,3.032,52,1.551,54,1.613,58,1.928,59,0.975,68,1.928,69,1.928,70,1.996,75,0.175,83,1.013,99,1.229,113,1.123,118,0.132,135,1.507,165,0.965,172,0.171,176,0.007,177,0.007,178,0.577,180,0.198,182,0.948,187,0.311,189,1.119,217,1.746,224,0.198,225,1.845,392,2.531,465,2.531,471,2.648,714,1.178,766,3.647,869,2.005,934,2.146,937,3.626,943,4.16,964,5.789,965,3.181,966,4.51,967,4.474,969,2.537,970,3.846,973,4.356,976,5.597,982,3.181,983,3.181,984,3.181,985,3.181,986,2.146,987,4.386,988,4.968,989,4.65,990,3.181,991,4.941,992,3.181,993,4.386,994,3.181,995,3.181,996,4.968,997,3.181,998,4.968,999,3.181,1000,5.343,1001,4.356,1002,4.968,1003,3.181,1004,4.968,1005,3.181,1006,4.968,1007,3.181,1008,4.968,1009,3.181,1010,4.968,1011,4.968,1012,3.181,1013,4.356,1014,3.181,1015,5.343,1016,5.78,1017,4.356,1018,4.968,1019,4.356,1020,4.386,1021,3.181,1022,3.181,1023,3.181,1024,3.181,1025,3.181,1026,3.181,1027,4.968,1028,3.181,1029,4.356,1030,3.181,1031,3.181,1032,3.181,1562,3.435,1566,3.435,1567,3.776,1581,3.776,1583,4.293,1584,4.293,1585,4.293,1586,4.293,1587,4.293,1588,4.293,1589,4.293,1590,4.293,1591,4.293,1592,4.293,1593,4.293,1594,4.293,1595,4.293,1596,4.293,1597,4.293,1598,4.293,1599,4.293,1600,4.293,1601,4.293,1602,4.293,1603,4.293,1604,4.293,1605,4.293,1606,4.293,1607,4.293,1608,4.293]],["title/classes/ODataEntityContainer.html",[178,0.343,1609,3.425]],["body/classes/ODataEntityContainer.html",[3,0.094,4,0.081,5,0.094,6,0.108,8,0.714,10,0.068,11,0.643,12,0.197,23,0.11,24,0.01,28,0.513,33,0.081,57,0.918,59,1.121,74,1.759,75,0.175,83,0.839,99,1.153,111,1.535,113,0.764,118,0.128,129,2.99,135,2.373,143,4.426,144,4.027,162,2.304,165,0.764,172,0.183,176,0.008,177,0.008,178,0.425,180,0.245,182,1.091,187,0.305,189,1.2,224,0.245,227,1.277,230,1.535,465,2.612,493,2.383,494,4.666,503,4.666,504,4.666,507,5.948,508,2.995,549,3.7,713,4.143,714,1.456,869,2.307,918,4.301,920,4.195,921,4.195,922,3.144,924,3.144,925,3.818,926,3.135,927,4.381,929,4.207,930,3.996,931,3.996,932,3.461,933,3.135,934,2.652,936,3.513,937,2.466,938,3.135,945,2.466,1112,3.868,1142,3.679,1196,3.135,1197,3.931,1439,5.416,1473,3.931,1474,2.87,1491,3.931,1609,5.411,1610,7.401,1611,5.011,1612,5.516,1613,3.47,1614,4.195,1615,5.306,1616,3.659,1617,4.195,1618,4.195,1619,3.996,1620,4.195,1621,4.195,1622,3.996,1623,4.195,1624,4.195,1625,4.195,1626,3.47,1627,3.47,1628,5.306,1629,3.135,1630,5.306,1631,5.306,1632,5.306,1633,3.291,1634,3.291]],["title/classes/ODataEntityService.html",[178,0.343,1635,3.171]],["body/classes/ODataEntityService.html",[3,0.099,4,0.085,5,0.099,6,0.102,8,0.737,9,2.633,10,0.072,12,0.207,18,1.639,23,0.113,24,0.01,28,0.483,31,3.313,33,0.085,45,1.391,57,0.759,83,0.63,111,2.023,113,1.006,118,0.125,152,1.803,162,2.428,167,3.768,172,0.196,176,0.008,177,0.008,178,0.448,180,0.258,182,1.127,187,0.297,189,1.219,217,2.08,225,2.633,402,1.362,465,2.676,468,3.367,471,3.362,493,3.139,713,3.367,869,2.384,1107,5.819,1109,5.179,1110,5.179,1111,5.179,1118,4.142,1119,4.274,1120,5.179,1121,5.489,1122,5.819,1124,4.13,1129,4.142,1130,5.179,1136,4.142,1137,4.848,1139,3.468,1147,3.024,1193,5.651,1635,5.179,1636,5.591,1637,5.179,1638,7.627,1639,5.591,1640,6.394,1641,5.591,1642,6.148,1643,5.227,1644,5.591,1645,4.473,1646,4.473,1647,4.473,1648,5.591,1649,5.591,1650,4.473,1651,4.473,1652,5.591,1653,4.473,1654,5.591]],["title/classes/ODataEntitySet.html",[178,0.343,1612,3.171]],["body/classes/ODataEntitySet.html",[3,0.088,4,0.076,5,0.088,6,0.109,8,0.685,10,0.064,11,0.617,12,0.199,18,1.167,22,1.33,23,0.115,24,0.01,27,0.591,28,0.485,33,0.076,57,0.881,59,1.076,74,2.152,75,0.179,83,0.863,84,3.244,99,1.106,111,1.44,113,0.716,118,0.128,129,2.94,135,2.277,145,4.321,162,2.162,165,0.716,172,0.184,173,3.907,174,3.61,176,0.007,177,0.007,178,0.398,180,0.23,182,1.047,187,0.306,189,1.259,224,0.23,227,1.738,230,1.44,465,2.534,493,2.915,508,3.664,509,3.982,514,4.377,516,4.377,549,3.652,713,4.05,714,1.366,869,2.214,918,4.229,920,4.026,921,4.026,922,3.017,924,2.313,925,3.664,926,2.941,927,4.294,929,4.124,930,3.835,931,3.835,932,3.558,933,2.941,934,2.488,936,3.372,937,2.313,938,2.941,1112,3.752,1142,3.452,1196,2.941,1197,3.687,1214,2.488,1215,2.093,1346,2.586,1438,4.501,1439,5.324,1448,4.808,1454,6.124,1460,3.664,1462,5.193,1473,3.687,1474,2.692,1484,3.982,1489,3.982,1491,3.687,1550,3.087,1610,7.476,1611,4.808,1612,4.808,1613,3.256,1614,4.026,1616,3.511,1617,4.026,1618,4.026,1619,3.835,1620,4.026,1621,4.026,1622,3.835,1623,4.026,1624,4.026,1625,4.026,1626,3.256,1627,3.256,1629,2.941,1633,3.087,1634,3.087,1655,6.49,1656,4.977,1657,4.977,1658,4.977,1659,4.977,1660,4.977,1661,4.977,1662,4.977,1663,4.977,1664,4.977]],["title/classes/ODataEntitySetService.html",[178,0.343,1665,3.425]],["body/classes/ODataEntitySetService.html",[3,0.053,4,0.046,5,0.053,6,0.104,8,0.48,9,2.826,10,0.039,12,0.207,15,3.593,18,1.068,23,0.108,24,0.011,27,0.247,28,0.455,31,3.628,32,1.4,33,0.046,45,1.473,57,0.618,58,1.353,74,2.884,75,0.139,83,0.947,97,3.581,106,1.043,111,2,113,1.033,114,1.353,118,0.126,119,1.694,138,3.644,152,2.847,164,4.353,167,3.104,172,0.192,174,3.455,175,1.4,176,0.005,177,0.005,178,0.241,180,0.139,182,0.734,187,0.296,189,1.23,217,1.593,225,2.169,402,1.335,465,2.306,493,4.066,508,4.807,509,2.411,713,3.165,766,4.783,869,1.553,932,3.641,949,2.691,986,3.968,1107,3.808,1109,3.374,1110,3.374,1111,3.374,1118,2.232,1119,3.93,1120,3.374,1121,4.521,1122,4.793,1124,2.691,1129,2.232,1130,3.374,1136,2.232,1137,3.158,1139,1.869,1144,2.232,1145,2.089,1147,1.63,1185,4.006,1188,2.089,1191,6.009,1202,3.1,1206,2.979,1303,3.158,1373,3.644,1376,2.411,1487,3.158,1616,4.171,1635,4.869,1637,5.712,1640,4.897,1642,4.006,1643,5.494,1645,2.411,1646,2.411,1647,2.411,1650,3.644,1651,2.411,1653,2.411,1665,3.644,1666,8.112,1667,4.829,1668,4.006,1669,5.491,1670,5.491,1671,5.491,1672,4.521,1673,6.572,1674,4.584,1675,5.491,1676,5.383,1677,3.013,1678,4.006,1679,4.897,1680,3.013,1681,3.013,1682,3.013,1683,7.197,1684,3.013,1685,6.254,1686,3.013,1687,3.013,1688,3.013,1689,4.393,1690,3.013,1691,4.829,1692,4.554,1693,3.013,1694,3.013,1695,3.013,1696,3.013,1697,3.013,1698,3.013,1699,3.013,1700,3.013,1701,3.013,1702,3.013,1703,3.013,1704,3.013,1705,3.013,1706,3.013,1707,3.013,1708,4.554,1709,3.013,1710,3.013,1711,3.013,1712,3.013,1713,2.65,1714,3.013,1715,3.013,1716,3.013,1717,2.65,1718,3.013,1719,4.006,1720,3.013,1721,3.013,1722,3.013,1723,5.491,1724,5.491,1725,5.491,1726,4.534,1727,2.65,1728,2.65,1729,3.013,1730,3.013,1731,3.013,1732,2.65,1733,3.013,1734,3.013,1735,3.013,1736,4.554,1737,3.013,1738,3.013,1739,3.013,1740,3.013,1741,3.013,1742,3.013,1743,3.013,1744,3.013,1745,3.013,1746,3.013,1747,3.013,1748,3.013]],["title/classes/ODataEntityTypeKey.html",[178,0.343,1749,3.425]],["body/classes/ODataEntityTypeKey.html",[3,0.042,4,0.037,5,0.042,6,0.07,8,0.403,9,2.698,10,0.031,11,0.452,12,0.119,22,1.022,23,0.105,24,0.011,27,0.605,28,0.419,33,0.09,46,1.702,48,1.422,54,1.488,57,1.148,61,1.08,62,1.717,74,0.797,75,0.175,82,0.689,83,0.971,87,3.069,91,2.933,92,2.091,93,2.574,94,3.151,95,1.717,99,1.301,100,1.717,101,1.717,105,1.717,106,1.548,107,2.472,113,1.26,114,2.435,118,0.126,119,0.894,121,1.986,129,1.381,133,1.77,134,1.306,139,2.068,149,3.531,151,0.775,152,0.775,153,1.249,154,0.754,155,1.924,156,0.775,157,0.775,158,1.357,159,2.435,160,1.357,162,1.66,163,1.3,165,1.064,166,1.158,167,2.83,168,2.074,172,0.054,175,2.52,176,0.004,177,0.004,178,0.434,180,0.111,187,0.169,189,0.356,202,0.82,217,1.64,218,1.903,220,1.823,223,1.136,224,0.273,227,0.579,228,1.656,230,1.713,468,2.612,469,1.158,549,1.044,690,3.059,713,3.807,714,1.049,717,1.117,739,1.667,834,3.574,850,2.371,852,1.924,865,1.572,866,1.924,918,2.472,924,2.212,927,1.3,929,1.249,932,1.777,936,1.986,937,2.52,945,1.777,949,3.904,986,3.694,993,1.572,1068,2.574,1106,1.357,1196,1.42,1199,1.781,1206,1.572,1214,2.378,1215,2.649,1338,1.667,1346,1.249,1383,3.409,1409,1.572,1437,2.158,1451,2.687,1460,1.357,1464,2.687,1474,1.3,1481,4.994,1492,3.871,1495,1.572,1496,1.572,1497,1.572,1517,3.204,1518,6.039,1519,5.08,1521,3.525,1523,3.525,1525,5.259,1526,4.122,1527,4.485,1528,3.525,1529,2.832,1532,1.781,1533,2.832,1534,1.781,1535,1.781,1536,2.832,1537,2.832,1538,1.781,1539,2.832,1540,1.781,1541,1.491,1542,2.952,1548,2.5,1549,1.572,1550,1.491,1614,1.491,1616,3.409,1617,1.491,1618,1.491,1619,2.811,1620,1.491,1621,1.491,1622,1.42,1623,1.491,1624,1.491,1625,1.491,1629,1.42,1633,1.491,1634,1.491,1672,3.113,1674,2.371,1685,1.781,1726,1.781,1749,3.808,1750,4.339,1751,3.362,1752,2.114,1753,1.3,1754,4.769,1755,2.114,1756,1.572,1757,1.781,1758,3.059,1759,2.832,1760,3.059,1761,5.542,1762,3.059,1763,4.339,1764,3.059,1765,2.114,1766,3.362,1767,3.059,1768,2.114,1769,2.114,1770,4.185,1771,1.781,1772,2.114,1773,3.362,1774,2.114,1775,2.114,1776,2.114,1777,5.205,1778,2.114,1779,5.205,1780,2.114,1781,3.362,1782,2.114,1783,3.362,1784,2.114,1785,2.114,1786,2.114,1787,2.114,1788,2.114,1789,2.832,1790,6.031,1791,2.114,1792,2.114,1793,2.114,1794,2.114,1795,2.114,1796,2.114,1797,2.114,1798,3.362,1799,3.362,1800,3.362,1801,3.362,1802,3.059,1803,2.114,1804,3.362,1805,4.485,1806,2.114,1807,2.114,1808,3.362,1809,2.114,1810,2.114,1811,2.114,1812,3.362,1813,2.114,1814,3.362,1815,3.362,1816,3.362,1817,3.362,1818,3.362,1819,3.362,1820,2.114,1821,5.542,1822,4.185,1823,2.114,1824,4.735,1825,4.735,1826,1.924,1827,3.808,1828,2.114,1829,2.114,1830,2.114,1831,2.114,1832,2.114,1833,2.114,1834,2.114,1835,2.114,1836,2.114,1837,2.114,1838,2.114,1839,2.114,1840,2.114,1841,2.114,1842,2.114,1843,2.114,1844,2.114,1845,2.114,1846,2.114,1847,2.114,1848,2.114,1849,2.114,1850,4.185,1851,3.362,1852,2.114,1853,2.114,1854,2.114,1855,2.114,1856,3.362,1857,2.114,1858,2.114,1859,1.781,1860,2.114,1861,2.114,1862,2.114,1863,2.114,1864,2.114,1865,5.295,1866,4.769,1867,2.114,1868,2.114,1869,2.114,1870,2.114,1871,2.114,1872,2.114,1873,3.059,1874,2.114,1875,2.114,1876,2.114,1877,4.769,1878,5.08,1879,3.362,1880,3.362,1881,2.114,1882,2.114,1883,4.769,1884,2.114,1885,2.114,1886,2.114,1887,2.114,1888,2.114,1889,2.114,1890,2.114,1891,2.114,1892,2.114,1893,2.114,1894,2.114,1895,2.114,1896,1.924,1897,2.114,1898,2.114,1899,2.114,1900,2.114,1901,2.114,1902,2.114,1903,2.114,1904,2.114,1905,2.114,1906,2.114,1907,3.362,1908,3.362,1909,2.114,1910,2.114,1911,1.924,1912,2.114,1913,2.114,1914,2.114,1915,2.114,1916,2.114,1917,2.114,1918,3.362,1919,5.205,1920,2.114,1921,2.114,1922,3.362,1923,2.114,1924,3.362,1925,2.114,1926,3.362,1927,2.114,1928,1.781,1929,1.781,1930,3.362,1931,2.114,1932,3.362,1933,2.114,1934,2.114,1935,2.114,1936,2.114,1937,2.114,1938,4.185,1939,2.114,1940,2.114]],["title/classes/ODataEnumType.html",[178,0.343,1941,3.425]],["body/classes/ODataEnumType.html",[3,0.062,4,0.054,5,0.062,6,0.109,8,0.539,9,2.783,10,0.045,11,0.485,12,0.206,22,1.764,23,0.116,24,0.01,27,0.492,28,0.444,33,0.054,42,2.652,48,3.143,57,1.217,59,1.162,74,2.718,75,0.175,82,0.816,83,0.924,84,3.298,92,2.229,94,2.449,95,2.963,99,1.125,100,3.283,101,3.283,105,2.293,111,1.74,113,0.506,118,0.133,119,1.307,125,1.985,129,2.64,133,1.899,134,1.296,135,1.792,137,3.428,148,3.005,149,4.097,162,1.527,165,0.865,172,0.188,176,0.006,177,0.006,178,0.281,180,0.162,182,0.823,187,0.305,189,1.309,224,0.162,227,1.447,228,1.073,230,1.017,402,1.025,465,2.11,469,1.693,522,2.813,523,2.813,549,3.357,604,3.092,659,4.491,660,3.092,713,3.723,714,0.965,869,1.741,918,3.798,920,3.167,921,3.167,922,2.373,924,2.373,925,3.395,926,2.077,927,3.791,929,4.093,930,3.016,931,3.016,932,3.72,933,2.077,934,1.757,936,2.652,937,1.634,938,2.077,945,2.373,1112,3.124,1142,2.438,1196,2.077,1197,2.604,1437,3.725,1438,3.541,1439,4.782,1448,3.783,1451,2.883,1453,4.491,1454,6.674,1455,4.491,1456,4.491,1458,4.491,1459,4.491,1460,2.883,1462,4.085,1464,2.883,1466,4.491,1467,3.783,1468,3.092,1470,4.085,1471,4.491,1473,2.604,1474,1.902,1481,2.299,1482,3.092,1483,3.092,1484,2.813,1487,2.438,1488,3.092,1489,2.813,1490,3.092,1491,2.604,1493,3.092,1494,3.092,1495,2.299,1496,2.299,1497,2.299,1517,3.899,1611,3.783,1613,2.299,1614,3.167,1616,2.762,1617,3.167,1618,3.167,1619,3.016,1620,3.167,1621,3.167,1622,3.016,1623,3.167,1624,3.167,1625,3.167,1626,2.299,1627,2.299,1629,2.077,1633,2.181,1634,2.181,1865,2.438,1941,4.085,1942,8.541,1943,5.106,1944,5.106,1945,5.106,1946,3.515,1947,3.515,1948,6.184,1949,3.515,1950,3.515,1951,5.192,1952,5.106,1953,3.515,1954,5.106,1955,3.515,1956,5.106,1957,3.515,1958,6.599,1959,5.106,1960,5.106,1961,3.515,1962,3.515,1963,3.515,1964,3.515,1965,2.813,1966,2.813,1967,3.515,1968,5.106,1969,3.515,1970,3.515]],["title/classes/ODataEnumTypeFieldParser.html",[178,0.343,1951,3.171]],["body/classes/ODataEnumTypeFieldParser.html",[3,0.076,4,0.066,5,0.076,6,0.097,8,0.708,9,2.701,10,0.055,11,0.56,12,0.181,23,0.106,24,0.011,27,0.482,28,0.479,33,0.09,48,1.601,54,1.617,57,1.121,59,0.977,74,1.428,75,0.181,82,0.947,83,0.958,87,3.136,92,1.795,94,2.4,95,1.934,99,1.289,100,1.934,101,1.934,105,1.934,106,1.483,111,1.246,113,1.151,118,0.131,129,2.731,133,2.497,134,1.242,135,2.067,136,2.329,137,3.06,146,3.906,147,2.431,148,2.945,149,2.152,150,3.906,155,1.534,162,1.87,165,1.039,172,0.171,176,0.007,177,0.007,178,0.472,180,0.199,182,0.95,187,0.283,189,1.12,223,1.28,224,0.199,227,1.036,228,1.315,230,2.09,373,1.65,422,1.954,465,2.356,469,2.074,549,3.472,713,2.074,714,1.181,834,2.329,918,4.153,920,3.655,921,3.655,922,2.001,925,3.326,926,2.544,927,4.224,929,3.751,930,3.481,931,3.481,932,2.738,933,2.544,934,2.152,936,3.06,937,2.001,938,2.544,986,2.945,1068,2.329,1106,2.431,1196,2.544,1214,2.152,1215,1.81,1346,3.06,1383,3.187,1437,2.431,1451,2.431,1460,2.431,1464,2.431,1467,3.19,1474,2.329,1517,2.544,1525,4.723,1526,4.393,1527,4.723,1541,2.671,1542,3.655,1548,2.816,1549,2.816,1550,2.671,1613,2.816,1614,2.671,1616,3.187,1617,2.671,1618,2.671,1619,3.481,1620,4.166,1621,2.671,1622,2.544,1623,2.671,1624,2.671,1625,2.671,1626,2.816,1627,2.816,1629,2.544,1633,3.655,1634,2.671,1672,2.816,1674,2.671,1753,2.329,1756,2.816,1757,3.19,1771,3.19,1789,3.19,1805,3.853,1859,3.19,1865,2.986,1878,4.364,1951,4.975,1965,5.373,1966,3.445,1971,6.651,1972,5.891,1973,4.306,1974,5.181,1975,4.306,1976,3.787,1977,6.351,1978,3.787,1979,3.787,1980,3.787,1981,5.181,1982,3.787,1983,3.787,1984,3.787,1985,5.906,1986,3.787,1987,3.787,1988,3.787,1989,3.787,1990,3.787,1991,3.787,1992,3.787,1993,3.787,1994,3.787,1995,3.787,1996,3.787,1997,5.181]],["title/classes/ODataEnumTypeParser.html",[178,0.343,1517,2.529]],["body/classes/ODataEnumTypeParser.html",[3,0.066,4,0.057,5,0.066,6,0.11,8,0.654,9,2.766,10,0.048,11,0.505,12,0.214,22,1.991,23,0.113,24,0.011,27,0.554,28,0.454,33,0.081,48,1.381,54,1.458,57,1.113,59,0.881,74,1.232,75,0.181,82,0.929,83,0.933,87,3.331,92,0.993,94,2.526,95,2.785,99,1.381,100,2.785,101,2.785,105,2.386,106,1.415,111,1.537,113,1.149,118,0.132,119,1.381,129,2.691,133,2.852,134,1.418,135,1.864,136,2.009,137,3.516,146,2.874,147,3.502,148,3.383,149,3.1,150,3.874,155,1.383,162,1.613,165,0.974,172,0.185,176,0.006,177,0.006,178,0.425,180,0.172,182,0.857,187,0.306,189,1.227,223,1.579,224,0.172,227,0.894,228,1.134,230,1.959,373,1.423,402,1.154,422,1.232,465,2.176,469,1.789,520,3.267,549,3.407,713,1.789,714,1.019,834,2.009,918,3.985,920,3.296,921,3.296,922,2.469,924,1.726,925,2.999,926,2.194,927,4.03,929,3.72,930,3.139,931,3.139,932,2.883,933,2.194,934,1.856,936,2.76,937,1.726,938,2.194,986,2.655,1068,2.009,1106,2.097,1196,2.194,1214,1.856,1215,1.562,1346,2.76,1383,2.874,1437,3.502,1438,3.684,1449,2.576,1451,2.999,1460,2.999,1464,2.999,1467,2.752,1474,2.009,1517,3.139,1525,4.428,1526,4.057,1527,4.428,1541,2.304,1542,3.296,1548,2.429,1549,2.429,1550,2.304,1611,3.936,1613,2.429,1614,3.296,1616,3.355,1617,3.296,1618,3.296,1619,3.664,1620,3.296,1621,3.296,1622,3.139,1623,3.296,1624,3.296,1625,3.296,1626,2.429,1627,2.429,1629,2.194,1633,3.296,1634,2.304,1672,2.429,1674,2.304,1751,3.267,1752,3.267,1753,2.009,1756,2.429,1757,2.752,1771,2.752,1789,4.595,1805,3.475,1859,2.752,1865,2.576,1878,3.936,1951,4.595,1965,4.963,1966,2.972,1971,7.532,1974,3.267,1976,3.267,1977,5.953,1978,3.267,1979,3.267,1980,3.267,1981,4.672,1982,3.267,1983,3.267,1984,3.267,1985,5.455,1986,3.267,1987,3.267,1988,3.267,1989,3.267,1990,3.267,1991,3.267,1992,3.267,1993,5.953,1994,3.267,1995,3.267,1996,3.267,1997,4.672,1998,5.313,1999,3.714,2000,3.714,2001,3.714,2002,3.714,2003,3.714,2004,3.714,2005,3.714,2006,3.714,2007,3.714,2008,3.714,2009,3.714,2010,3.714]],["title/classes/ODataInMemoryCache.html",[178,0.343,2011,3.765]],["body/classes/ODataInMemoryCache.html",[3,0.084,4,0.072,5,0.084,6,0.081,8,0.663,10,0.061,11,0.597,12,0.219,22,2.272,23,0.116,24,0.01,27,0.388,28,0.398,31,3.656,33,0.072,38,1.87,46,2.356,57,0.957,75,0.169,82,0.731,83,0.534,99,1.418,109,3.523,111,2.172,113,1.124,118,0.134,119,2.621,172,0.199,176,0.007,177,0.007,178,0.379,180,0.219,182,1.013,187,0.313,189,1.292,224,0.29,408,3.896,465,3.085,721,4.656,945,2.201,1147,2.561,1159,4.981,1194,4.914,1198,3.508,1202,4.899,1214,3.523,1258,5.358,1323,5.804,1325,4.653,1326,5.568,1327,4.653,1328,5.025,1329,4.888,1330,4.653,1331,5.025,1332,4.653,1333,4.653,1334,5.025,1335,5.025,1336,5.025,1337,5.568,1338,3.284,1341,3.789,1343,4.61,1344,3.508,1346,2.46,1348,3.789,1350,3.284,1352,4.356,1354,3.789,1356,3.789,1358,3.789,1360,3.508,1362,3.508,1363,3.789,1365,4.356,1367,3.508,1369,3.508,2011,5.524,2012,4.735,2013,4.735,2014,4.164,2015,4.164,2016,4.735,2017,4.735,2018,4.164,2019,4.164,2020,4.735,2021,4.164,2022,4.164,2023,4.164,2024,4.164,2025,4.164,2026,4.164,2027,4.164,2028,4.164,2029,4.164,2030,5.025,2031,3.789,2032,3.789,2033,3.789,2034,3.789]],["title/classes/ODataInStorageCache.html",[178,0.343,2035,3.425]],["body/classes/ODataInStorageCache.html",[0,0.994,3,0.077,4,0.066,5,0.077,6,0.1,8,0.626,10,0.056,11,0.564,12,0.216,17,2.023,22,2.237,23,0.115,24,0.01,27,0.356,28,0.376,31,3.594,33,0.066,38,1.719,46,2.276,47,3.257,57,0.917,75,0.176,82,0.786,83,0.491,98,2.023,99,1.391,102,2.096,106,1.377,109,3.375,111,2.267,113,1.154,118,0.135,119,2.511,165,0.626,172,0.197,176,0.007,177,0.007,178,0.348,180,0.201,182,0.957,187,0.313,189,1.29,217,1.545,224,0.274,230,1.717,408,3.681,465,3.054,721,4.499,945,2.758,967,4.189,1147,2.354,1159,4.933,1163,3.224,1194,4.821,1198,3.224,1202,4.807,1218,3.224,1258,5.244,1273,5.804,1323,5.754,1325,4.397,1326,5.433,1327,4.397,1328,4.749,1329,5.03,1330,4.397,1331,4.749,1332,4.397,1333,4.397,1334,4.749,1335,4.749,1336,4.749,1337,5.433,1338,3.018,1341,3.482,1343,4.744,1344,3.224,1346,2.261,1348,3.482,1350,3.018,1352,4.116,1354,3.482,1356,3.482,1358,3.482,1360,3.224,1362,3.224,1363,3.482,1365,4.116,1367,3.224,1369,3.224,1379,3.224,2014,3.828,2015,3.828,2018,5.22,2019,3.828,2021,3.828,2022,3.828,2023,3.828,2024,3.828,2025,3.828,2026,3.828,2027,3.828,2028,3.828,2029,3.828,2030,4.749,2031,3.482,2032,3.482,2033,3.482,2034,3.482,2035,4.749,2036,3.828,2037,7.278,2038,5.935,2039,4.352,2040,4.352,2041,4.352,2042,4.352,2043,4.352,2044,3.482,2045,3.828,2046,3.828,2047,3.828,2048,3.828,2049,5.22,2050,3.828,2051,3.828,2052,3.828,2053,3.828,2054,3.828,2055,3.828]],["title/modules/ODataModule.html",[2056,3.425,2057,3.171]],["body/modules/ODataModule.html",[3,0.11,4,0.095,5,0.11,6,0.096,12,0.157,23,0.08,24,0.01,28,0.552,33,0.114,45,1.037,59,1.037,83,0.844,115,4.734,116,4.793,118,0.095,165,0.9,172,0.141,176,0.009,177,0.009,178,0.5,182,1.008,187,0.221,189,0.926,714,1.715,722,5.545,1114,6.152,1117,5.002,1188,4.335,2057,5.936,2058,5.002,2059,6.252,2060,8.012,2061,6.152,2062,7.485,2063,6.252,2064,6.252,2065,8.012,2066,7.047,2067,4.631,2068,7.485,2069,8.012,2070,6.252,2071,6.252,2072,7.485,2073,6.252,2074,6.252,2075,6.252,2076,5.498,2077,7.485,2078,6.252,2079,6.252,2080,6.252,2081,6.252]],["title/classes/ODataParameterParser.html",[178,0.343,1504,3.425]],["body/classes/ODataParameterParser.html",[3,0.073,4,0.063,5,0.073,6,0.111,9,2.817,10,0.053,11,0.546,12,0.208,18,1.347,22,1.535,23,0.113,24,0.011,27,0.648,28,0.473,33,0.087,46,2.068,48,2.776,57,0.78,75,0.175,83,0.959,87,3.601,94,3.412,95,1.864,99,1.123,100,2.959,101,3.193,103,3.886,105,2.58,106,1.503,107,3.694,111,1.201,113,1.139,118,0.128,133,2.45,134,1.218,141,2.985,153,3.694,154,2.068,165,1.161,167,3.193,172,0.179,176,0.007,177,0.007,178,0.46,180,0.192,182,0.927,187,0.305,189,1.195,223,1.234,224,0.192,230,1.663,402,0.979,422,1.905,468,3.596,517,2.715,714,1.139,717,1.93,739,2.879,850,3.564,922,1.93,945,1.93,949,3.394,1106,2.344,1124,2.453,1214,2.075,1215,1.745,1346,2.157,1383,3.846,1437,4.014,1445,3.076,1449,2.879,1451,2.344,1460,2.344,1464,3.244,1474,2.246,1481,5.278,1492,4.883,1495,2.715,1496,2.715,1497,2.715,1499,3.651,1504,5.272,1511,3.651,1514,3.651,1516,6.253,1517,3.892,1518,4.881,1519,3.076,1520,3.651,1521,3.076,1522,3.651,1523,3.076,1524,3.651,1525,5.526,1526,4.883,1527,5.178,1528,4.256,1529,4.256,1530,3.651,1531,3.651,1532,3.076,1533,5.267,1534,3.076,1535,5.267,1536,3.076,1537,4.256,1538,5.267,1539,3.076,1540,3.076,1541,2.575,1542,3.564,1543,5.053,1544,3.651,1545,5.795,1546,3.651,1547,3.651,1548,2.715,1549,2.715,1550,2.575,1551,6.253,1552,6.962,1553,5.053,1554,5.053,1555,3.651,1556,3.651,1557,3.651,1558,3.651,1559,3.651,1560,3.651,2082,5.745,2083,4.152,2084,4.152,2085,4.152,2086,4.152,2087,4.152,2088,4.152,2089,4.152,2090,4.152,2091,4.152,2092,4.152,2093,4.152,2094,4.152,2095,4.152]],["title/classes/ODataParserOptions.html",[178,0.343,1106,2.417]],["body/classes/ODataParserOptions.html",[1,3.885,3,0.087,4,0.075,5,0.087,6,0.101,9,2.546,10,0.063,11,0.613,12,0.18,13,3.346,14,2.662,15,2.069,16,3.59,17,2.994,18,1.51,19,2.662,20,2.778,21,2.556,23,0.092,24,0.011,25,3.103,26,3.225,27,0.701,28,0.455,30,3.552,33,0.098,34,3.809,38,1.943,41,2.662,48,1.83,51,2.708,71,2.556,72,3.81,73,4.122,74,2.136,75,0.169,76,2.662,77,2.662,78,2.556,79,3.637,80,3.637,81,2.662,82,0.573,83,0.809,84,2.459,85,2.778,86,2.459,87,3.31,97,3.435,98,2.287,104,2.37,118,0.075,119,1.83,172,0.111,176,0.007,177,0.007,178,0.516,180,0.227,187,0.27,223,2.135,224,0.227,227,1.184,228,1.503,714,1.35,717,2.287,816,4.772,869,2.197,922,3.338,924,2.287,1033,3.937,1034,4.327,1037,4.327,1038,3.645,1039,3.637,1041,5.666,1044,3.937,1045,3.645,1047,5.666,1048,5.666,1053,4.327,1054,3.412,1057,3.412,1058,4.327,1059,3.937,1061,5.666,1062,5.666,1063,5.747,1064,3.937,1065,6.615,1066,7.272,1067,4.327,1068,3.485,1069,4.327,1070,4.327,1071,7.137,1072,7.137,1073,7.137,1074,7.137,1075,7.137,1076,7.137,1077,7.137,1078,4.327,1079,4.327,1080,4.327,1081,4.327,1082,4.327,1083,4.327,1084,5.154,1085,5.154,1086,5.154,1087,4.327,1088,4.327,1089,3.937,1090,4.327,1091,3.937,1092,4.327,1093,4.327,1094,4.327,1095,3.937,1096,4.327,1097,3.937,1098,4.327,1099,4.327,1100,4.327,1101,4.327,1102,4.327,1103,4.327,1104,4.327,1105,5.154,1106,3.637,2096,6.442,2097,4.92,2098,4.92]],["title/classes/ODataPathSegments.html",[178,0.343,1192,2.968]],["body/classes/ODataPathSegments.html",[3,0.067,4,0.058,5,0.067,6,0.109,10,0.069,11,0.514,12,0.204,18,1.85,22,2.109,23,0.112,24,0.011,27,0.658,28,0.476,33,0.082,39,3.027,46,1.972,49,2.511,57,1.071,59,0.896,64,1.768,75,0.177,83,0.964,99,0.648,104,1.832,106,1.525,111,1.101,113,1.207,118,0.133,119,2.688,152,2.822,165,0.985,166,2.602,172,0.186,176,0.006,177,0.006,178,0.304,180,0.176,182,0.871,187,0.299,189,1.221,200,2.877,201,2.544,202,2.334,218,1.335,224,0.176,226,2.009,227,0.915,228,2.359,330,1.414,395,4.003,402,0.921,582,4.77,714,1.983,717,1.768,834,4.178,850,2.359,854,3.043,865,2.488,929,3.265,936,1.976,966,3.863,1068,2.923,1119,1.976,1139,2.359,1192,4.358,1215,2.272,1244,5.388,1251,3.345,1350,3.747,1383,2.923,1384,4.323,1385,3.043,1386,3.043,1643,4.727,1753,2.057,1756,2.488,1824,5.782,1825,5.782,1826,3.043,1827,5.028,2099,3.345,2100,6.284,2101,6.284,2102,4.752,2103,4.752,2104,6.033,2105,5.403,2106,5.403,2107,3.803,2108,3.803,2109,5.403,2110,6.315,2111,3.803,2112,3.803,2113,3.803,2114,3.803,2115,4.323,2116,3.803,2117,3.803,2118,3.803,2119,4.752,2120,3.803,2121,3.803,2122,3.803,2123,3.803,2124,3.803,2125,3.803,2126,3.803,2127,6.018,2128,3.803,2129,3.803,2130,2.818,2131,3.345,2132,3.803,2133,3.803,2134,3.803,2135,5.403,2136,5.403,2137,6.284,2138,3.803,2139,3.803,2140,3.803,2141,3.803,2142,3.803,2143,3.803,2144,3.803,2145,5.403,2146,3.803,2147,3.803,2148,3.803,2149,3.803,2150,3.803,2151,3.803,2152,3.803,2153,3.803,2154,6.842,2155,3.803,2156,6.284,2157,3.803,2158,3.803,2159,3.803,2160,3.803,2161,3.803,2162,5.403,2163,6.284,2164,3.345,2165,3.345,2166,3.345,2167,3.345,2168,3.803,2169,3.803,2170,3.803,2171,5.403,2172,3.803,2173,3.803,2174,3.803,2175,3.803,2176,3.803,2177,3.803,2178,3.803,2179,3.803,2180,3.803,2181,3.803,2182,5.403,2183,3.803,2184,3.803,2185,3.803,2186,5.403,2187,3.803,2188,3.803,2189,3.803]],["title/classes/ODataPathSegmentsHandler.html",[178,0.343,2190,3.425]],["body/classes/ODataPathSegmentsHandler.html",[3,0.098,4,0.084,5,0.098,6,0.111,10,0.071,12,0.174,23,0.097,24,0.01,28,0.504,33,0.106,49,2.568,52,2.874,53,3.698,54,2.183,55,4.133,57,1.166,59,1.319,60,2.639,75,0.14,83,1.002,99,1.182,113,1.222,118,0.115,166,3.342,172,0.157,176,0.008,177,0.008,178,0.555,180,0.255,182,1.119,187,0.304,189,1.258,224,0.255,226,2.054,368,1.995,402,0.941,714,1.904,1119,2.87,1192,5.518,1244,4.962,1303,4.812,1643,5.472,1753,2.988,2103,4.859,2104,5.14,2110,4.42,2115,5.552,2130,4.093,2190,5.552,2191,4.859,2192,5.524,2193,5.524,2194,5.524,2195,5.524,2196,5.524,2197,5.524,2198,5.524,2199,5.524,2200,4.42,2201,4.859,2202,4.859,2203,6.102,2204,4.859,2205,6.102,2206,4.859,2207,6.672,2208,4.859,2209,4.859,2210,4.859,2211,4.859,2212,6.672,2213,4.859,2214,4.859,2215,4.859,2216,4.859,2217,4.859,2218,4.859,2219,4.859,2220,4.859,2221,4.859,2222,4.859]],["title/classes/ODataPropertyAnnotations.html",[178,0.343,987,2.8]],["body/classes/ODataPropertyAnnotations.html",[3,0.083,4,0.072,5,0.083,6,0.06,8,0.791,10,0.06,11,0.669,12,0.157,15,1.983,22,2.003,23,0.108,24,0.011,26,3.366,28,0.397,29,3.654,30,3.366,33,0.114,45,1.166,46,2.207,51,3.151,52,1.703,58,2.118,68,2.118,69,2.118,70,2.192,75,0.174,83,1.019,99,1.277,113,1.154,118,0.13,135,1.655,165,1.013,172,0.159,176,0.007,177,0.007,178,0.6,180,0.218,182,1.01,187,0.265,189,1.042,217,1.831,224,0.218,225,1.966,392,2.198,465,2.63,471,2.778,714,1.294,766,3.886,934,2.357,937,3.727,943,4.363,964,5.891,965,3.494,966,4.62,967,4.649,969,2.786,970,4.098,973,4.641,976,5.779,982,3.494,983,3.494,984,3.494,985,3.494,986,2.357,987,5.102,988,5.211,989,4.878,990,3.494,991,4.601,992,3.494,993,3.085,994,3.494,995,3.494,996,3.494,997,3.494,998,3.494,999,3.494,1000,4.641,1001,4.641,1002,3.494,1003,3.494,1004,3.494,1005,3.494,1006,3.494,1007,3.494,1008,3.494,1009,3.494,1010,3.494,1011,5.211,1012,3.494,1013,3.494,1014,3.494,1015,4.641,1016,5.941,1017,4.641,1018,4.641,1019,4.641,1020,4.601,1021,3.494,1022,3.494,1023,3.494,1024,3.494,1025,3.494,1026,3.494,1027,5.211,1028,3.494,1029,4.641,1030,3.494,1031,3.494,1032,3.494,1562,3.774,1566,3.774,2223,4.716,2224,4.716]],["title/classes/ODataQueryOptionHandler.html",[178,0.343,2225,3.425]],["body/classes/ODataQueryOptionHandler.html",[3,0.061,4,0.053,5,0.061,6,0.109,9,1.589,10,0.065,12,0.203,22,1.864,23,0.109,24,0.011,25,3.161,27,0.489,28,0.442,33,0.077,46,2.418,57,1.138,61,2.947,62,2.947,63,2.739,64,3.05,65,1.88,66,3.409,67,3.28,68,2.947,69,2.947,70,3.05,71,1.805,74,1.679,75,0.175,82,0.914,83,0.987,102,2.877,103,1.674,110,4.79,111,2.019,113,1.164,114,2.682,118,0.131,134,1.29,165,0.5,172,0.183,175,2.776,176,0.006,177,0.006,178,0.405,180,0.161,182,0.816,187,0.299,189,1.242,195,1.292,202,2.238,218,1.219,224,0.234,226,1.883,368,1.255,402,0.863,508,2.858,582,4.349,714,1.389,858,3.056,865,2.273,869,1.727,888,5.253,1039,1.962,1065,4.779,1215,2.129,1303,2.41,1403,3.511,1616,3.231,1753,1.88,1759,2.574,1805,4.293,1896,2.78,1948,6.66,2225,6.972,2226,3.475,2227,6.563,2228,5.063,2229,5.063,2230,5.772,2231,6.563,2232,5.063,2233,5.063,2234,3.475,2235,3.475,2236,4.453,2237,3.475,2238,5.063,2239,3.475,2240,5.063,2241,3.475,2242,5.063,2243,3.475,2244,3.475,2245,3.475,2246,5.063,2247,6.563,2248,3.475,2249,5.063,2250,3.475,2251,5.063,2252,3.475,2253,5.063,2254,3.475,2255,5.063,2256,3.475,2257,3.475,2258,5.063,2259,3.475,2260,5.063,2261,3.475,2262,3.056,2263,3.475,2264,7.703,2265,2.78,2266,4.051,2267,4.051,2268,3.475,2269,8.256,2270,3.475,2271,3.475,2272,5.973,2273,3.475,2274,3.475,2275,3.475,2276,3.475,2277,5.063,2278,5.063,2279,3.475,2280,3.475,2281,3.475,2282,3.475,2283,3.475,2284,7.856,2285,3.475,2286,3.475,2287,5.973,2288,3.475,2289,5.063,2290,3.475,2291,3.475,2292,3.475,2293,3.475,2294,3.475,2295,3.475,2296,3.475,2297,5.973,2298,5.973,2299,5.973,2300,5.973,2301,3.475,2302,5.063,2303,5.063,2304,3.475,2305,5.063,2306,3.475,2307,3.475,2308,3.475,2309,5.063,2310,5.973,2311,5.973,2312,3.056,2313,5.973,2314,5.973,2315,5.973,2316,5.973,2317,3.475,2318,3.475,2319,5.063,2320,3.475,2321,5.063,2322,3.475,2323,5.063,2324,3.475,2325,5.063,2326,3.056,2327,3.475,2328,5.063,2329,3.056,2330,3.475,2331,5.063,2332,3.475,2333,5.063,2334,3.475,2335,5.063,2336,3.475,2337,3.475,2338,3.475,2339,3.475,2340,3.475,2341,3.475,2342,3.475,2343,3.475,2344,3.475,2345,3.475,2346,3.475,2347,3.475,2348,3.475,2349,3.475,2350,3.475,2351,3.475,2352,3.475,2353,3.475,2354,3.475,2355,3.475,2356,3.475,2357,3.475,2358,3.475]],["title/classes/ODataQueryOptions.html",[178,0.343,2267,3.425]],["body/classes/ODataQueryOptions.html",[3,0.077,4,0.066,5,0.077,6,0.111,9,2.598,10,0.056,11,0.565,12,0.201,18,1.394,22,1.808,23,0.111,24,0.011,25,4.21,27,0.595,28,0.482,33,0.091,57,1.156,61,3.037,62,3.037,63,2.361,64,3.375,65,2.361,66,3.513,67,3.38,68,1.96,69,1.96,70,2.029,75,0.168,82,0.692,83,0.953,104,2.102,106,1.129,110,4.29,111,1.957,113,0.856,118,0.131,119,1.623,134,0.807,152,2.529,165,0.856,172,0.187,176,0.007,177,0.007,178,0.349,180,0.202,182,0.959,187,0.304,189,1.241,195,1.623,196,2.278,199,2.278,200,2.278,201,2.701,202,2.477,224,0.202,228,1.816,330,1.623,402,1.013,508,2.464,582,3.357,714,1.632,865,2.855,966,4.1,1215,1.835,1346,3.089,1403,4.124,1409,3.889,1753,2.361,1911,3.492,1928,4.405,1929,5.38,2102,5.23,2119,5.23,2127,5.23,2131,3.839,2164,3.839,2165,3.839,2166,3.839,2167,3.839,2225,3.492,2230,6.683,2236,6.683,2264,7.365,2265,3.492,2266,5.811,2267,5.412,2312,5.23,2326,5.23,2329,5.23,2359,3.839,2360,5.947,2361,6.763,2362,7.262,2363,5.947,2364,5.947,2365,4.365,2366,4.365,2367,5.947,2368,7.262,2369,4.365,2370,5.947,2371,4.365,2372,4.365,2373,4.365,2374,5.947,2375,4.365,2376,4.365,2377,4.365,2378,4.365,2379,4.365,2380,4.365,2381,4.365,2382,5.947,2383,5.947,2384,5.947,2385,5.947,2386,5.947,2387,5.947,2388,5.947,2389,5.947,2390,5.948,2391,4.365,2392,4.365,2393,6.763,2394,6.763,2395,4.365,2396,5.947,2397,4.365,2398,4.365,2399,4.365,2400,4.365,2401,4.365,2402,4.365,2403,4.365,2404,4.365,2405,4.365,2406,4.365,2407,4.365,2408,4.365,2409,4.365,2410,6.763,2411,4.365,2412,4.365,2413,4.365,2414,4.365,2415,4.365,2416,4.365,2417,4.365,2418,4.365,2419,4.365,2420,4.365,2421,4.365]],["title/classes/ODataReferential.html",[178,0.343,1767,3.425]],["body/classes/ODataReferential.html",[3,0.042,4,0.037,5,0.042,6,0.07,8,0.404,9,2.698,10,0.031,11,0.453,12,0.06,22,1.022,23,0.105,24,0.011,27,0.605,28,0.419,33,0.09,46,1.702,48,1.422,54,1.73,57,1.148,61,1.08,62,1.718,74,0.798,75,0.175,82,0.689,83,0.971,87,3.069,91,2.935,92,2.091,93,2.576,94,3.151,95,1.718,99,1.301,100,1.718,101,1.718,105,1.718,106,1.548,107,2.473,113,1.26,114,2.436,118,0.124,119,0.895,121,1.987,129,1.381,133,1.771,134,1.222,139,2.069,149,3.532,151,0.776,152,0.776,153,1.25,154,0.755,155,1.924,156,0.776,157,0.776,158,1.358,159,2.831,160,1.358,162,1.661,163,1.302,165,1.064,166,1.159,167,2.831,168,2.074,172,0.054,175,2.522,176,0.004,177,0.004,178,0.434,180,0.111,187,0.169,189,0.356,202,0.821,217,1.641,218,1.904,220,1.824,223,1.137,224,0.274,227,0.579,228,1.657,230,1.713,468,2.613,469,1.159,549,1.045,562,3.364,690,3.061,713,3.807,714,1.05,717,1.118,739,1.669,834,3.576,850,2.373,852,1.925,865,1.574,866,1.925,918,2.473,924,2.213,927,1.302,929,1.25,932,1.778,936,1.987,937,2.522,945,1.778,949,3.905,986,3.695,993,1.574,1068,2.576,1106,1.358,1196,1.421,1199,1.782,1206,1.574,1214,2.38,1215,2.65,1338,1.669,1346,1.25,1383,3.41,1409,1.574,1437,2.159,1451,2.688,1460,1.358,1464,2.688,1474,1.302,1481,4.995,1492,3.872,1495,1.574,1496,1.574,1497,1.574,1517,3.205,1518,6.04,1519,5.082,1521,3.527,1523,3.527,1525,5.259,1526,4.123,1527,4.487,1528,3.527,1529,2.834,1532,1.782,1533,2.834,1534,1.782,1535,1.782,1536,2.834,1537,2.834,1538,1.782,1539,2.834,1540,1.782,1541,1.492,1542,2.953,1548,2.502,1549,1.574,1550,1.492,1614,1.492,1616,3.41,1617,1.492,1618,1.492,1619,2.813,1620,1.492,1621,1.492,1622,1.421,1623,1.492,1624,1.492,1625,1.492,1629,1.421,1633,1.492,1634,1.492,1672,3.114,1674,2.373,1685,1.782,1726,1.782,1749,3.061,1750,4.341,1753,1.302,1754,4.771,1755,2.116,1756,1.574,1757,1.782,1758,3.061,1759,2.834,1760,3.061,1761,5.544,1762,3.061,1763,4.341,1764,3.061,1765,2.116,1766,3.364,1767,3.81,1768,2.116,1769,2.116,1770,4.187,1771,1.782,1772,2.116,1773,3.364,1774,2.116,1775,2.116,1776,2.116,1777,5.207,1778,2.116,1779,5.207,1780,2.116,1781,3.364,1782,2.116,1783,3.364,1784,2.116,1785,2.116,1786,2.116,1787,2.116,1788,2.116,1789,2.834,1790,6.033,1791,2.116,1792,2.116,1793,2.116,1794,2.116,1795,2.116,1796,2.116,1797,2.116,1798,3.364,1799,3.364,1800,3.364,1801,3.364,1802,3.061,1803,2.116,1804,3.364,1805,4.487,1806,2.116,1807,2.116,1808,3.364,1809,2.116,1810,2.116,1811,2.116,1812,3.364,1813,2.116,1814,3.364,1815,3.364,1816,3.364,1817,3.364,1818,3.364,1819,3.364,1820,2.116,1821,5.544,1822,4.187,1823,2.116,1824,4.737,1825,4.737,1826,1.925,1827,3.81,1828,2.116,1829,2.116,1830,2.116,1831,2.116,1832,2.116,1833,2.116,1834,2.116,1835,2.116,1836,2.116,1837,2.116,1838,2.116,1839,2.116,1840,2.116,1841,2.116,1842,2.116,1843,2.116,1844,2.116,1845,2.116,1846,2.116,1847,2.116,1848,2.116,1849,2.116,1850,4.187,1851,3.364,1852,2.116,1853,2.116,1854,2.116,1855,2.116,1856,3.364,1857,2.116,1858,2.116,1859,1.782,1860,2.116,1861,2.116,1862,2.116,1863,2.116,1864,2.116,1865,5.296,1866,4.771,1867,2.116,1868,2.116,1869,2.116,1870,2.116,1871,2.116,1872,2.116,1873,3.061,1874,2.116,1875,2.116,1876,2.116,1877,4.771,1878,5.082,1879,3.364,1880,3.364,1881,2.116,1882,2.116,1883,4.771,1884,2.116,1885,2.116,1886,2.116,1887,2.116,1888,2.116,1889,2.116,1890,2.116,1891,2.116,1892,2.116,1893,2.116,1894,2.116,1895,2.116,1896,1.925,1897,2.116,1898,2.116,1899,2.116,1900,2.116,1901,2.116,1902,2.116,1903,2.116,1904,2.116,1905,2.116,1906,2.116,1907,3.364,1908,3.364,1909,2.116,1910,2.116,1911,1.925,1912,2.116,1913,2.116,1914,2.116,1915,2.116,1916,2.116,1917,2.116,1918,3.364,1919,5.207,1920,2.116,1921,2.116,1922,3.364,1923,2.116,1924,3.364,1925,2.116,1926,3.364,1927,2.116,1928,1.782,1929,1.782,1930,3.364,1931,2.116,1932,3.364,1933,2.116,1934,2.116,1935,2.116,1936,2.116,1937,2.116,1938,4.187,1939,2.116,1940,2.116,2422,2.406]],["title/classes/ODataRequest.html",[178,0.343,1159,2.417]],["body/classes/ODataRequest.html",[3,0.059,4,0.051,5,0.059,6,0.112,10,0.043,11,0.469,12,0.187,13,2.564,14,3.492,15,1.411,16,3.227,17,3.197,18,1.789,19,3.167,21,3.354,22,1.319,23,0.109,24,0.011,25,3.109,27,0.648,28,0.456,33,0.051,38,3.207,39,2.82,40,3.737,46,2.698,50,1.816,51,1.411,54,1.771,57,0.876,58,1.507,61,1.507,62,1.507,64,1.56,67,1.678,68,1.507,69,1.507,74,1.113,75,0.172,76,1.816,78,1.744,81,1.816,83,0.946,98,3.197,102,2.82,104,1.617,106,1.366,113,1.121,114,2.217,118,0.105,123,1.816,135,1.178,138,2.82,172,0.076,175,2.295,176,0.006,177,0.006,178,0.269,180,0.155,182,0.796,187,0.31,189,0.867,217,1.68,218,1.178,224,0.155,227,0.808,408,4.005,493,3.089,582,4.198,714,0.921,717,1.56,723,7.159,834,3.492,869,1.684,986,3.227,1038,2.487,1054,4.477,1057,2.328,1068,3.721,1091,2.686,1095,2.686,1097,2.686,1112,3.574,1119,3.737,1121,4.223,1159,2.787,1177,2.686,1186,5.165,1188,2.328,1190,4.783,1193,4.783,1205,5.678,1206,3.229,1215,3.415,1228,6.05,1260,2.487,1264,5.15,1267,5.678,1277,2.952,1753,1.816,2423,3.357,2424,5.855,2425,5.855,2426,5.855,2427,5.855,2428,5.855,2429,5.855,2430,5.855,2431,6.456,2432,6.456,2433,6.456,2434,6.456,2435,5.855,2436,5.855,2437,4.342,2438,4.937,2439,2.952,2440,3.357,2441,3.357,2442,3.357,2443,6.456,2444,3.357,2445,3.357,2446,6.456,2447,6.456,2448,3.357,2449,3.357,2450,3.357,2451,3.357,2452,3.357,2453,3.357,2454,3.357,2455,3.357,2456,3.357,2457,3.357,2458,3.357,2459,3.357,2460,3.357,2461,3.357,2462,3.357,2463,3.357,2464,3.357,2465,3.357,2466,3.357,2467,3.357,2468,3.357,2469,3.357,2470,3.357,2471,3.357,2472,3.357,2473,3.357,2474,3.357,2475,3.357,2476,3.357,2477,3.357,2478,3.357,2479,4.937,2480,5.855,2481,3.357,2482,2.952,2483,2.952,2484,2.952,2485,3.357,2486,3.357,2487,3.357,2488,3.357,2489,6.879,2490,3.357,2491,6.456,2492,4.937,2493,3.357,2494,4.937,2495,3.357,2496,3.357,2497,3.357,2498,3.357,2499,3.357,2500,4.937,2501,6.456,2502,3.357,2503,5.855,2504,4.937,2505,5.855,2506,3.357,2507,4.937,2508,3.357,2509,3.357,2510,6.879,2511,3.357,2512,3.357,2513,3.357,2514,3.357,2515,3.357,2516,4.937,2517,3.357,2518,3.357,2519,3.357,2520,3.357,2521,3.357,2522,3.357,2523,3.357,2524,3.357,2525,3.357,2526,3.357,2527,4.937,2528,3.357,2529,3.357,2530,3.357,2531,3.357,2532,3.357,2533,3.357,2534,3.357,2535,3.357,2536,4.937,2537,3.357,2538,3.357,2539,3.357,2540,4.937,2541,3.357,2542,3.357,2543,4.937,2544,3.357,2545,3.357,2546,3.357,2547,3.357,2548,3.357,2549,3.357,2550,3.357,2551,3.357,2552,6.456,2553,3.357,2554,7.194,2555,3.357,2556,3.357,2557,3.357,2558,3.357,2559,3.357,2560,3.357,2561,4.937,2562,4.937,2563,3.357,2564,4.937,2565,3.357,2566,3.357,2567,3.357,2568,3.357,2569,3.357,2570,3.357]],["title/classes/ODataResponse.html",[178,0.343,1194,2.529]],["body/classes/ODataResponse.html",[3,0.062,4,0.053,5,0.062,6,0.11,8,0.536,9,2.593,10,0.045,11,0.483,12,0.203,15,2.518,17,3.39,22,1.758,23,0.108,24,0.011,28,0.513,30,1.568,33,0.053,35,2.868,36,1.971,37,1.971,46,2.569,54,2.192,57,1.085,72,1.681,75,0.158,82,0.591,83,0.912,97,1.516,98,3.872,99,1.42,102,3.513,106,1.646,109,4.091,113,1.05,118,0.111,135,2.308,138,3.848,152,2.121,165,1.084,166,1.681,172,0.158,176,0.006,177,0.006,178,0.279,180,0.161,182,0.819,187,0.302,189,1.199,202,2.243,217,2.221,224,0.161,493,3.588,714,1.394,715,3.07,717,1.623,722,5.403,723,5.836,869,1.733,932,1.623,943,3.715,967,4.524,969,3.538,970,3.323,987,3.323,989,4.153,991,3.323,1020,3.323,1038,4.873,1039,2.868,1054,5.541,1057,2.421,1068,3.24,1089,2.793,1112,3.911,1119,3.911,1144,4.437,1145,4.153,1146,4.792,1159,4.25,1163,5.403,1170,3.07,1177,2.793,1186,4.065,1187,6.415,1188,2.421,1189,3.07,1190,4.873,1193,4.873,1194,4.309,1202,3.381,1215,1.468,1218,5.403,1258,3.917,1259,4.468,1260,2.586,1309,5.267,1431,4.065,1928,2.586,1929,2.586,2390,6.147,2437,4.468,2439,3.07,2482,3.07,2483,3.07,2484,3.07,2571,3.491,2572,5.989,2573,5.989,2574,5.989,2575,5.989,2576,5.08,2577,5.989,2578,5.08,2579,3.491,2580,3.491,2581,5.263,2582,3.491,2583,3.491,2584,3.491,2585,3.491,2586,7.714,2587,3.491,2588,5.08,2589,3.491,2590,3.491,2591,3.491,2592,3.491,2593,3.491,2594,3.491,2595,3.491,2596,3.491,2597,3.491,2598,3.491,2599,3.491,2600,3.491,2601,3.491,2602,3.491,2603,5.08,2604,3.491,2605,3.491,2606,5.08,2607,5.08,2608,3.491,2609,3.491,2610,3.491,2611,3.491,2612,3.491,2613,3.491,2614,3.491,2615,3.491,2616,3.491,2617,3.491,2618,3.491,2619,5.989,2620,3.491,2621,3.491,2622,3.491,2623,3.491,2624,3.491,2625,5.989,2626,3.491,2627,3.491,2628,3.491,2629,3.07,2630,3.491,2631,3.491,2632,3.491,2633,3.491,2634,5.989,2635,3.491,2636,3.491,2637,3.491,2638,4.065,2639,3.491,2640,3.491,2641,4.468,2642,3.491,2643,3.491,2644,5.989,2645,3.491,2646,3.491,2647,5.989,2648,3.491,2649,3.491,2650,6.989,2651,5.989,2652,3.491,2653,5.08,2654,3.491,2655,5.989,2656,3.491,2657,6.415,2658,5.989,2659,5.989,2660,5.08,2661,5.08,2662,5.989,2663,3.491,2664,3.491,2665,3.491,2666,3.491,2667,3.491,2668,3.491]],["title/classes/ODataResponseOptions.html",[178,0.343,2581,3.425]],["body/classes/ODataResponseOptions.html",[3,0.087,4,0.075,5,0.087,6,0.113,9,2.393,10,0.063,11,0.613,12,0.224,23,0.112,24,0.01,26,3.424,27,0.665,28,0.456,30,3.424,33,0.075,34,3.811,38,3.011,44,3.641,45,1.192,46,2.256,47,2.896,51,3.022,57,0.875,72,3.673,73,3.888,75,0.176,77,4.125,78,3.734,82,0.751,83,0.727,88,4.058,89,4.247,90,4.675,106,0.936,111,2.207,118,0.12,165,0.709,172,0.179,176,0.007,177,0.007,178,0.395,180,0.228,182,1.04,187,0.312,189,1.172,223,1.917,224,0.228,227,1.552,415,5.751,714,1.352,716,3.943,717,2.291,816,4.777,869,2.199,922,2.997,924,2.291,966,4.305,1039,2.782,1059,3.943,1063,5.16,1064,3.943,1084,3.943,1085,3.943,1086,3.943,1105,3.943,1199,3.651,1215,2.711,1257,4.335,1409,3.224,1805,4.987,1873,5.751,2581,5.751,2629,4.335,2638,6.618,2641,4.335,2669,4.928,2670,6.449,2671,6.449,2672,6.449,2673,6.449,2674,6.449,2675,4.928,2676,4.928,2677,4.928,2678,4.928,2679,4.928,2680,4.928,2681,4.928,2682,4.928,2683,6.449,2684,4.928,2685,6.449,2686,4.928,2687,6.449,2688,4.928,2689,6.449,2690,4.928,2691,4.928,2692,4.928,2693,6.449,2694,6.449,2695,4.928,2696,4.928,2697,4.928,2698,4.928,2699,4.928,2700,4.928,2701,4.928,2702,4.928,2703,4.928,2704,4.928,2705,4.335,2706,4.928,2707,4.928,2708,4.928,2709,4.928,2710,4.928,2711,4.928,2712,4.928,2713,4.928,2714,4.928,2715,4.928,2716,4.928]],["title/classes/ODataSchema.html",[178,0.343,1439,2.8]],["body/classes/ODataSchema.html",[3,0.076,4,0.065,5,0.076,6,0.111,8,0.62,10,0.055,11,0.559,12,0.212,22,1.571,23,0.115,24,0.011,28,0.523,33,0.065,45,1.408,48,1.595,57,0.798,59,0.974,75,0.179,83,0.9,94,2.394,99,1.287,111,1.701,113,1.087,114,1.927,118,0.126,127,4.071,129,2.122,133,2.493,134,1.239,135,2.062,136,3.9,138,3.473,140,4.26,142,3.96,144,3.626,162,1.863,165,1.038,172,0.193,175,1.994,176,0.007,177,0.007,178,0.343,180,0.198,182,0.948,187,0.31,189,1.222,224,0.198,227,1.032,402,0.731,465,2.352,468,2.066,493,2.639,508,2.422,549,3.388,646,4.702,714,1.177,869,2.004,918,4.052,920,3.646,921,3.646,922,2.732,924,3.511,925,3.784,926,2.535,927,3.179,929,3.746,930,3.472,931,3.472,932,2.732,933,2.535,934,2.144,936,3.053,937,1.994,938,2.535,945,3.351,1039,2.422,1112,4.225,1190,5.778,1260,3.178,1383,3.179,1435,5.769,1437,4.403,1439,3.844,1448,3.178,1449,2.975,1492,4.716,1541,2.661,1542,3.646,1609,5.363,1612,4.354,1613,2.806,1626,2.806,1627,2.806,1629,2.535,1679,3.433,1802,3.433,1941,5.769,2717,4.29,2718,5.877,2719,5.877,2720,5.877,2721,5.877,2722,5.877,2723,5.877,2724,4.29,2725,4.29,2726,4.29,2727,7.21,2728,4.29,2729,4.29,2730,4.29,2731,4.29,2732,5.877,2733,7.553,2734,4.29,2735,5.877,2736,4.29,2737,5.877,2738,4.29,2739,5.877,2740,4.29,2741,5.877,2742,4.29,2743,4.29,2744,4.29,2745,4.29,2746,4.29,2747,4.29,2748,4.29,2749,4.29,2750,4.29,2751,4.29,2752,4.29,2753,4.29,2754,4.29,2755,4.29,2756,4.29,2757,4.29,2758,4.29,2759,4.29,2760,4.29,2761,4.29,2762,4.29,2763,4.29,2764,4.29,2765,6.703,2766,4.29,2767,4.29,2768,4.29,2769,4.29,2770,6.703,2771,4.29,2772,4.29,2773,4.29,2774,4.29,2775,4.29,2776,4.29]],["title/injectables/ODataServiceFactory.html",[2061,3.171,2777,3.765]],["body/injectables/ODataServiceFactory.html",[3,0.101,4,0.087,5,0.101,6,0.103,8,0.747,10,0.073,12,0.193,23,0.112,24,0.01,28,0.51,33,0.087,52,2.779,53,4.016,74,2.669,75,0.178,83,0.798,99,1.206,118,0.134,165,1.019,172,0.187,174,4.022,176,0.008,177,0.008,178,0.616,182,1.141,187,0.273,189,1.048,224,0.263,368,2.059,402,1.206,493,3.912,508,4.671,932,3.289,986,4.022,1112,4.18,1113,5.015,1114,5.962,1115,7.712,1117,6.157,1242,6.439,1616,4.353,1665,6.439,2061,5.243,2067,4.224,2777,6.224,2778,5.015,2779,5.702,2780,5.702,2781,5.702,2782,5.702,2783,8.047,2784,5.702,2785,5.702,2786,8.047,2787,6.439,2788,7.077]],["title/classes/ODataSingletonService.html",[178,0.343,2787,3.425]],["body/classes/ODataSingletonService.html",[3,0.084,4,0.072,5,0.084,6,0.096,8,0.665,9,2.793,10,0.061,12,0.202,15,3.381,18,1.478,23,0.111,24,0.01,28,0.477,31,3.617,32,2.213,33,0.072,45,1.432,53,3.871,74,2.762,75,0.127,83,0.848,97,3.267,106,1.197,111,1.378,118,0.122,152,2.033,164,4.539,167,3.611,172,0.192,174,4.019,176,0.007,177,0.007,178,0.381,180,0.22,182,1.017,187,0.295,189,1.215,217,1.958,225,2.523,402,1.334,465,2.746,493,3.976,713,3.036,766,4.666,869,2.15,932,3.497,1039,3.559,1107,4.901,1109,4.67,1110,4.67,1111,4.67,1118,3.527,1119,4.261,1120,4.67,1121,5.259,1122,5.576,1124,3.724,1129,3.527,1130,4.67,1136,3.527,1137,4.372,1139,2.953,1145,3.302,1147,2.576,1191,5.236,1202,3.559,1206,5.118,1234,5.544,1635,5.797,1637,5.957,1640,6.019,1645,3.809,1646,3.809,1647,3.809,1650,3.809,1651,3.809,1653,3.809,1674,4.854,1676,4.187,1678,5.544,1683,7.072,1685,5.957,1713,4.187,1717,4.187,1727,4.187,1728,4.187,2787,5.044,2789,4.761,2790,6.304,2791,6.304,2792,7.067,2793,4.761,2794,4.761,2795,6.216,2796,4.761,2797,4.761,2798,4.761,2799,4.761,2800,4.761,2801,4.761,2802,4.761,2803,4.761,2804,6.304]],["title/classes/Operator.html",[178,0.343,206,1.69]],["body/classes/Operator.html",[0,1.348,3,0.05,4,0.043,5,0.05,6,0.082,8,0.623,10,0.036,12,0.108,18,0.658,22,1.154,23,0.099,24,0.011,27,0.724,28,0.274,33,0.131,57,1.213,59,1.115,75,0.173,82,0.612,83,1.019,92,2.177,99,1.502,106,0.998,113,0.849,118,0.102,134,0.519,155,1.369,165,1.292,168,0.881,172,0.098,176,0.005,177,0.005,178,0.669,179,2.076,180,0.13,181,1.109,182,0.696,186,1.144,187,0.209,189,0.64,190,1.144,192,1.144,194,1.144,195,1.605,196,2.769,197,2.766,198,3.083,199,3.28,200,3.269,201,1.044,202,2.465,203,1.705,204,1.144,205,2.594,206,2.656,207,2.076,208,1.144,209,1.144,210,1.144,211,1.144,212,1.144,213,1.144,214,1.144,215,1.144,216,3.675,217,1.124,218,1.515,219,1.144,220,1.076,221,1.144,222,1.144,223,1.893,224,0.273,225,2.417,226,2.906,227,1.265,228,0.858,229,2.594,230,0.813,231,2.594,232,2.594,233,1.144,234,1.144,235,1.758,236,1.144,237,2.076,238,1.144,239,1.144,240,1.144,241,1.144,242,1.144,243,1.144,244,1.144,245,1.144,246,1.144,247,1.144,248,1.144,249,1.144,250,1.144,251,1.758,252,1.758,253,1.144,254,1.144,255,2.076,256,1.144,257,2.404,258,1.144,259,1.758,260,1.144,261,1.144,262,2.076,263,1.144,264,1.758,265,1.144,266,1.144,267,1.144,268,1.144,269,1.144,270,1.144,271,1.144,272,2.076,273,1.144,274,1.144,275,1.144,276,1.144,277,1.144,278,1.144,279,1.144,280,1.144,281,1.144,282,1.144,283,1.144,284,1.144,285,1.144,286,1.144,287,1.144,288,1.144,289,1.144,290,1.144,291,1.144,292,1.144,293,1.144,294,1.144,295,1.144,296,1.144,297,1.144,298,1.144,299,1.144,300,1.144,301,1.144,302,1.144,303,1.144,304,2.076,305,1.144,306,1.144,307,1.144,308,1.144,309,2.076,310,1.144,311,1.758,312,1.144,313,1.144,314,1.758,315,1.144,316,1.144,317,1.144,318,1.144,319,2.076,320,1.144,321,1.144,322,1.144,323,2.594,324,1.758,325,3.404,326,3.569,327,1.758,328,1.144,329,1.144,330,1.044,331,1.144,332,1.144,333,2.076,334,1.144,335,1.144,336,1.144,337,1.144,338,1.144,339,1.144,340,1.144,341,1.144,342,1.144,343,1.144,344,1.144,345,1.144,346,1.144,347,1.144,348,1.144,349,1.144,350,1.144,351,1.144,352,1.144,353,1.144,354,1.144,355,1.144,356,2.076,357,1.144,358,1.144,359,1.144,360,1.144,361,1.144,362,1.144,363,1.144,364,1.144,365,1.144,366,1.144,367,1.144,368,1.559,369,1.758,370,1.144,371,1.144,372,1.144,373,1.076,374,1.144,375,2.076,376,1.758,377,1.758,378,1.705,379,1.144,380,1.144,381,1.144,382,2.076,383,1.144,384,1.144,385,1.144,386,1.144,387,2.739,388,1.144,389,1.144,390,2.739,391,1.144,392,0.985,393,1.144,394,1.144,869,1.472,871,1.837,889,2.47,2805,2.808,2806,2.808,2807,2.808,2808,2.808]],["title/interfaces/Options.html",[0,0.978,9,1.343]],["body/interfaces/Options.html",[0,1.807,1,3.105,2,2.154,3,0.073,4,0.063,5,0.073,6,0.053,7,2.341,8,0.75,9,2.531,10,0.053,11,0.626,12,0.178,13,2.154,14,2.243,15,1.743,16,3.291,17,2.668,18,1.666,19,2.243,20,2.341,21,2.154,23,0.113,24,0.011,25,2.765,26,3.191,27,0.729,28,0.364,29,2.982,30,2.578,31,2.859,32,1.927,33,0.135,34,3.729,35,2.341,36,2.341,37,2.341,38,3.185,39,1.997,40,2.982,41,3.105,42,2.154,43,2.341,44,3.241,45,0.687,46,1.301,47,1.862,48,2.135,49,1.927,50,3.105,51,2.988,52,2.073,53,2.668,54,1.807,55,2.982,56,3.241,57,1.146,58,3.191,59,0.952,60,1.903,61,2.578,62,2.578,63,3.105,64,2.668,65,3.105,66,2.982,67,2.869,68,2.578,69,2.578,70,2.668,71,2.982,72,3.594,73,3.844,74,1.903,75,0.182,76,3.105,77,3.105,78,2.982,79,2.341,80,2.341,81,2.243,82,0.953,83,0.647,84,2.072,85,2.341,86,2.072,87,3.352,88,2.341,89,2.449,90,2.449,91,3.844,92,1.108,93,3.561,94,2.682,95,2.957,96,4.084,97,2.493,98,2.668,99,1.211,100,2.957,101,2.578,102,1.997,103,3.171,104,1.997,105,1.862,106,0.787,107,2.154,108,2.572,109,2.072,110,3.241,111,1.2,112,2.572,113,0.597,114,1.862,115,2.449,116,2.341,117,2.449,118,0.125,119,2.135,120,2.572,121,2.154,122,2.572,123,2.243,124,2.572,125,2.341,126,2.449,127,3.241,128,4.363,129,1.497,130,2.341,131,2.341,132,2.341,133,1.542,134,1.061,135,2.777,136,2.243,137,2.982,138,1.997,139,3.105,140,2.449,141,2.982,142,2.449,143,3.241,144,2.243,145,3.241,146,3.105,147,2.341,148,2.072,149,2.869,150,2.243,151,1.337,152,1.337,153,3.691,154,1.801,155,1.079,156,1.337,157,1.337,158,2.341,159,1.862,160,2.341,161,2.572,162,1.801,163,2.243,164,2.341,165,0.948,166,1.997,167,1.862,168,1.301,169,1.862,170,2.341,171,2.449,172,0.094,173,2.243,174,2.072,175,1.927,176,0.007,177,0.007]],["title/interfaces/OptionsHelper.html",[0,0.978,87,1.859]],["body/interfaces/OptionsHelper.html",[0,1.798,1,3.066,2,2.114,3,0.072,4,0.062,5,0.072,6,0.052,7,2.298,8,0.782,9,2.52,10,0.052,11,0.62,12,0.202,13,2.114,14,2.202,15,1.711,16,3.259,17,2.634,18,1.653,19,2.202,20,2.298,21,2.114,23,0.114,24,0.011,25,2.73,26,3.446,27,0.732,28,0.359,29,3.662,30,3.328,31,2.832,32,1.892,33,0.135,34,3.259,35,2.298,36,2.298,37,2.298,38,3.171,39,1.96,40,2.944,41,3.066,42,2.114,43,2.298,44,3.199,45,0.675,46,1.277,47,1.828,48,2.107,49,1.892,50,3.066,51,3.31,52,2.047,53,2.634,54,1.789,55,2.944,56,3.199,57,1.143,58,3.166,59,0.94,60,1.879,61,2.545,62,2.545,63,3.066,64,2.634,65,3.066,66,2.944,67,2.833,68,2.545,69,2.545,70,2.634,71,2.944,72,2.73,73,2.202,74,1.879,75,0.182,76,4.009,77,4.009,78,3.85,79,2.298,80,2.298,81,2.202,82,0.949,83,0.639,84,2.034,85,2.298,86,2.034,87,3.42,88,2.298,89,2.405,90,2.405,91,3.814,92,1.088,93,3.527,94,2.656,95,2.928,96,4.044,97,2.461,98,2.634,99,1.201,100,2.928,101,2.545,102,1.96,103,3.14,104,1.96,105,1.828,106,0.773,107,2.114,108,2.525,109,2.034,110,3.199,111,1.178,112,2.525,113,0.586,114,1.828,115,2.405,116,2.298,117,2.405,118,0.124,119,2.107,120,2.525,121,2.114,122,2.525,123,2.202,124,2.525,125,2.298,126,2.405,127,3.199,128,4.344,129,1.47,130,2.298,131,2.298,132,2.298,133,1.514,134,1.048,135,2.763,136,2.202,137,2.944,138,1.96,139,3.066,140,2.405,141,2.944,142,2.405,143,3.199,144,2.202,145,3.199,146,3.066,147,2.298,148,2.034,149,2.833,150,2.202,151,1.313,152,1.313,153,3.662,154,1.778,155,1.06,156,1.313,157,1.313,158,2.298,159,1.828,160,2.298,161,2.525,162,1.768,163,2.202,164,2.298,165,0.938,166,1.96,167,1.828,168,1.277,169,1.828,170,2.298,171,2.405,172,0.092,173,2.202,174,2.034,175,1.892,176,0.006,177,0.006]],["title/interfaces/Parser.html",[0,0.978,94,1.744]],["body/interfaces/Parser.html",[0,1.79,1,3.03,2,2.079,3,0.071,4,0.061,5,0.071,6,0.09,7,2.26,8,0.738,9,2.655,10,0.051,11,0.381,12,0.162,13,2.079,14,2.165,15,1.683,16,3.23,17,2.603,18,1.641,19,2.165,20,2.26,21,2.079,23,0.113,24,0.011,25,2.698,26,3.143,27,0.724,28,0.355,29,2.91,30,2.515,31,2.806,32,1.86,33,0.135,34,3.23,35,2.26,36,2.26,37,2.26,38,3.158,39,1.928,40,2.91,41,3.03,42,2.079,43,2.26,44,3.162,45,0.664,46,1.256,47,1.798,48,2.083,49,1.86,50,3.03,51,2.943,52,2.023,53,2.603,54,1.773,55,2.91,56,3.162,57,1.163,58,3.143,59,0.929,60,1.858,61,2.515,62,2.515,63,3.03,64,2.603,65,3.03,66,2.91,67,2.8,68,2.515,69,2.515,70,2.603,71,2.91,72,2.698,73,2.165,74,1.858,75,0.182,76,3.03,77,3.03,78,2.91,79,2.26,80,2.26,81,2.165,82,0.946,83,0.631,84,2.001,85,2.26,86,2.001,87,3.646,88,2.26,89,2.365,90,2.365,91,4.453,92,1.07,93,3.495,94,2.851,95,3.308,96,4.008,97,2.433,98,2.603,99,1.255,100,3.308,101,3.143,102,1.928,103,3.112,104,1.928,105,2.515,106,0.76,107,2.079,108,2.483,109,2.001,110,3.162,111,1.158,112,2.483,113,0.576,114,1.798,115,2.365,116,2.26,117,2.365,118,0.128,119,2.083,120,2.483,121,2.079,122,2.483,123,2.165,124,2.483,125,2.26,126,2.365,127,3.162,128,4.326,129,1.446,130,2.26,131,2.26,132,2.26,133,1.489,134,1.036,135,2.75,136,2.165,137,2.91,138,1.928,139,3.03,140,2.365,141,2.91,142,2.365,143,3.162,144,2.165,145,3.162,146,3.03,147,2.26,148,2.001,149,2.8,150,2.165,151,1.291,152,1.291,153,3.636,154,1.758,155,1.042,156,1.291,157,1.291,158,2.26,159,1.798,160,2.26,161,2.483,162,1.738,163,2.165,164,2.26,165,0.93,166,1.928,167,1.798,168,1.256,169,1.798,170,2.26,171,2.365,172,0.158,173,2.165,174,2.001,175,1.86,176,0.006,177,0.006,182,0.903,187,0.229,189,0.957,402,1.101,1451,2.26,1464,2.26,2809,4.003,2810,4.003,2811,4.003]],["title/interfaces/Renderable.html",[0,0.978,197,1.69]],["body/interfaces/Renderable.html",[0,1.357,2,1.477,3,0.05,4,0.043,5,0.05,6,0.076,8,0.627,10,0.036,12,0.071,18,0.667,22,1.165,23,0.097,24,0.011,27,0.721,28,0.276,33,0.132,57,1.214,59,1.121,75,0.172,82,0.617,83,1.02,92,2.182,99,1.504,106,1.006,113,0.627,118,0.098,134,0.526,155,1.38,165,1.293,168,0.892,172,0.064,176,0.005,177,0.005,178,0.67,179,2.093,181,1.123,182,0.703,186,1.158,187,0.188,189,0.785,190,1.158,192,1.158,194,1.158,195,1.621,196,2.781,197,2.778,198,3.094,199,3.285,200,3.274,201,2.209,202,2.475,203,1.721,204,1.158,205,2.609,206,2.53,207,2.093,208,1.158,209,1.158,210,1.158,211,1.158,212,1.158,213,1.158,214,1.158,215,1.158,216,3.672,217,1.135,218,1.529,219,1.158,220,1.09,221,1.158,222,1.158,223,1.766,224,0.245,225,2.424,226,2.767,227,1.275,228,0.868,229,2.609,230,0.823,231,2.609,232,2.609,233,1.158,234,1.158,235,1.775,236,1.158,237,2.093,238,1.158,239,1.158,240,1.158,241,1.158,242,1.158,243,1.158,244,1.158,245,1.158,246,1.158,247,1.158,248,1.158,249,1.158,250,1.158,251,1.775,252,1.775,253,1.158,254,1.158,255,2.093,256,1.158,257,2.42,258,1.158,259,1.775,260,1.158,261,1.158,262,2.093,263,1.158,264,1.775,265,1.158,266,1.158,267,1.158,268,1.158,269,1.158,270,1.158,271,1.158,272,2.093,273,1.158,274,1.158,275,1.158,276,1.158,277,1.158,278,1.158,279,1.158,280,1.158,281,1.158,282,1.158,283,1.158,284,1.158,285,1.158,286,1.158,287,1.158,288,1.158,289,1.158,290,1.158,291,1.158,292,1.158,293,1.158,294,1.158,295,1.158,296,1.158,297,1.158,298,1.158,299,1.158,300,1.158,301,1.158,302,1.158,303,1.158,304,2.093,305,1.158,306,1.158,307,1.158,308,1.158,309,2.093,310,1.158,311,1.775,312,1.158,313,1.158,314,1.775,315,1.158,316,1.158,317,1.158,318,1.158,319,2.093,320,1.158,321,1.158,322,1.158,323,2.159,324,1.775,325,3.41,326,3.572,327,1.775,328,1.158,329,1.158,330,1.058,331,1.158,332,1.158,333,2.093,334,1.158,335,1.158,336,1.158,337,1.158,338,1.158,339,1.158,340,1.158,341,1.158,342,1.158,343,1.158,344,1.158,345,1.158,346,1.158,347,1.158,348,1.158,349,1.158,350,1.158,351,1.158,352,1.158,353,1.158,354,1.158,355,1.158,356,2.093,357,1.158,358,1.158,359,1.158,360,1.158,361,1.158,362,1.158,363,1.158,364,1.158,365,1.158,366,1.158,367,1.158,368,1.574,369,1.775,370,1.158,371,1.158,372,1.158,373,1.09,374,1.158,375,2.093,376,1.775,377,1.775,378,1.721,379,1.158,380,1.158,381,1.158,382,2.093,383,1.158,384,1.158,385,1.158,386,1.158,387,2.753,388,1.158,389,1.158,390,2.753,391,1.158,392,0.998,393,1.158,394,1.158,871,1.86,2812,2.844,2813,2.844,2814,2.844]],["title/interfaces/ResponseJson.html",[0,0.978,2044,3.425]],["body/interfaces/ResponseJson.html",[0,1.312,2,2.985,3,0.101,4,0.087,5,0.101,6,0.074,8,0.606,10,0.074,11,0.676,17,3.75,22,1.9,23,0.11,24,0.01,28,0.451,33,0.087,38,2.269,47,2.58,75,0.178,82,0.939,83,0.648,98,3.75,102,3.886,106,1.532,113,1.111,118,0.126,165,0.827,176,0.008,177,0.008,178,0.46,217,2.199,224,0.265,230,2.058,721,4.411,945,2.67,967,4.79,1147,3.108,1159,4.359,1163,5.977,1194,4.562,1198,4.256,1202,4.014,1218,5.977,1273,4.597,1323,4.651,1326,5.595,1329,3.984,1337,5.595,1343,3.758,1352,3.984,1365,3.984,1379,4.256,2030,5.689,2031,4.597,2032,4.597,2033,4.597,2034,4.597,2035,4.597,2036,5.053,2037,7.43,2044,5.689,2045,5.053,2046,5.053,2047,5.053,2048,5.053,2049,6.253,2050,5.053,2051,5.053,2052,5.053,2053,5.053,2054,5.053,2055,5.053]],["title/interfaces/ResponseOptions.html",[0,0.978,88,2.417]],["body/interfaces/ResponseOptions.html",[0,1.807,1,3.102,2,2.151,3,0.073,4,0.063,5,0.073,6,0.053,7,2.337,8,0.787,9,2.482,10,0.053,11,0.626,12,0.178,13,2.151,14,2.24,15,1.741,16,3.288,17,2.665,18,1.665,19,2.24,20,2.337,21,2.151,23,0.113,24,0.011,25,2.762,26,3.189,27,0.726,28,0.363,29,2.979,30,2.575,31,2.857,32,1.924,33,0.135,34,3.288,35,2.337,36,2.337,37,2.337,38,3.184,39,1.994,40,2.979,41,3.102,42,2.151,43,2.337,44,4.009,45,0.686,46,1.299,47,1.859,48,2.133,49,1.924,50,3.102,51,2.986,52,2.071,53,2.665,54,1.805,55,2.979,56,3.237,57,1.146,58,3.189,59,0.951,60,1.902,61,2.575,62,2.575,63,3.102,64,2.665,65,3.102,66,2.979,67,2.866,68,2.575,69,2.575,70,2.665,71,2.979,72,2.762,73,2.24,74,1.902,75,0.182,76,3.102,77,3.102,78,2.979,79,2.337,80,2.337,81,2.24,82,0.974,83,0.646,84,2.069,85,2.337,86,2.069,87,3.436,88,3.237,89,4.196,90,4.196,91,3.842,92,1.106,93,3.559,94,2.68,95,2.954,96,4.081,97,2.491,98,2.665,99,1.21,100,2.954,101,2.575,102,1.994,103,3.169,104,1.994,105,1.859,106,0.786,107,2.151,108,2.568,109,2.069,110,3.237,111,1.198,112,2.568,113,0.596,114,1.859,115,2.446,116,2.337,117,2.446,118,0.125,119,2.133,120,2.568,121,2.151,122,2.568,123,2.24,124,2.568,125,2.337,126,2.446,127,3.237,128,4.362,129,1.495,130,2.337,131,2.337,132,2.337,133,1.54,134,1.06,135,2.776,136,2.24,137,2.979,138,1.994,139,3.102,140,2.446,141,2.979,142,2.446,143,3.237,144,2.24,145,3.237,146,3.102,147,2.337,148,2.069,149,2.866,150,2.24,151,1.335,152,1.335,153,3.689,154,1.8,155,1.078,156,1.335,157,1.335,158,2.337,159,1.859,160,2.337,161,2.568,162,1.798,163,2.24,164,2.337,165,0.947,166,1.994,167,1.859,168,1.299,169,1.859,170,2.337,171,2.446,172,0.094,173,2.24,174,2.069,175,1.924,176,0.007,177,0.007]],["title/classes/SegmentHandler.html",[178,0.343,2130,3.171]],["body/classes/SegmentHandler.html",[3,0.093,4,0.08,5,0.093,6,0.112,10,0.068,12,0.203,23,0.111,24,0.01,27,0.552,28,0.496,33,0.103,49,2.451,52,1.904,53,2.451,54,1.447,55,2.739,57,1.19,59,0.874,60,1.749,75,0.166,83,0.996,99,1.432,111,1.95,113,1.164,118,0.13,152,2.173,172,0.194,176,0.008,177,0.008,178,0.539,180,0.244,182,1.086,187,0.307,189,1.261,224,0.244,368,1.904,402,1.333,582,3.803,714,1.849,869,2.298,1119,2.739,1192,4.672,1244,4.406,1303,4.672,1643,5.407,1753,2.852,2104,5.795,2110,5.39,2115,4.219,2130,4.991,2190,4.219,2191,4.638,2200,4.219,2201,4.638,2202,5.925,2203,5.925,2204,5.925,2205,5.925,2206,5.925,2207,6.529,2208,6.88,2209,4.638,2210,6.88,2211,5.925,2212,6.529,2213,6.88,2214,4.638,2215,6.88,2216,4.638,2217,4.638,2218,4.638,2219,4.638,2220,4.638,2221,4.638,2222,4.638,2262,4.638,2815,5.273,2816,5.273,2817,5.273,2818,5.273,2819,5.273,2820,5.273,2821,5.273,2822,5.273,2823,5.273,2824,5.273,2825,5.273]],["title/classes/StringAndCollectionFunctions.html",[178,0.343,237,1.69]],["body/classes/StringAndCollectionFunctions.html",[0,1.314,3,0.047,4,0.041,5,0.047,6,0.091,8,0.607,10,0.034,12,0.173,18,0.627,23,0.102,24,0.011,27,0.728,28,0.264,33,0.131,57,1.218,59,1.298,75,0.169,82,0.801,83,1.017,92,2.239,99,1.519,106,0.969,113,0.599,118,0.116,134,0.495,155,1.328,165,1.289,168,0.84,172,0.156,176,0.005,177,0.005,178,0.664,179,2.014,180,0.124,181,1.057,182,0.671,186,1.09,187,0.244,189,1.02,190,1.09,192,1.09,194,1.09,195,1.547,196,2.726,197,2.604,198,2.898,199,3.261,200,3.25,201,0.995,202,2.125,203,1.642,204,1.09,205,2.538,206,2.46,207,2.014,208,1.09,209,1.09,210,1.09,211,1.09,212,1.09,213,1.09,214,1.09,215,1.09,216,3.681,217,1.083,218,1.459,219,1.09,220,1.025,221,1.09,222,1.09,223,1.71,224,0.236,225,2.387,226,2.718,227,1.227,228,0.817,229,2.538,230,0.774,231,2.538,232,2.538,233,1.09,234,1.09,235,1.694,236,1.09,237,2.272,238,1.694,239,1.09,240,1.694,241,1.09,242,1.694,243,1.09,244,1.694,245,1.09,246,1.694,247,1.09,248,1.694,249,1.09,250,1.694,251,2.343,252,2.686,253,1.09,254,1.09,255,2.014,256,1.09,257,2.343,258,1.09,259,1.694,260,1.09,261,1.09,262,2.014,263,1.09,264,1.694,265,1.09,266,1.09,267,1.09,268,1.09,269,1.09,270,1.09,271,1.09,272,2.014,273,1.09,274,1.09,275,1.09,276,1.09,277,1.09,278,1.09,279,1.09,280,1.09,281,1.09,282,1.09,283,1.09,284,1.09,285,1.09,286,1.09,287,1.09,288,1.09,289,1.09,290,1.09,291,1.09,292,1.09,293,1.09,294,1.09,295,1.09,296,1.09,297,1.09,298,1.09,299,1.09,300,1.09,301,1.09,302,1.09,303,1.09,304,2.014,305,1.09,306,1.09,307,1.09,308,1.09,309,2.014,310,1.09,311,1.694,312,1.09,313,1.09,314,1.694,315,1.09,316,1.09,317,1.09,318,1.09,319,2.014,320,1.09,321,1.09,322,1.09,323,2.078,324,1.694,325,3.379,326,3.553,327,1.694,328,1.09,329,1.09,330,0.995,331,1.09,332,1.09,333,2.014,334,1.09,335,1.09,336,1.09,337,1.09,338,1.09,339,1.09,340,1.09,341,1.09,342,1.09,343,1.09,344,1.09,345,1.09,346,1.09,347,1.09,348,1.09,349,1.09,350,1.09,351,1.09,352,1.09,353,1.09,354,1.09,355,1.09,356,2.014,357,1.09,358,1.09,359,1.09,360,1.09,361,1.09,362,1.09,363,1.09,364,1.09,365,1.09,366,1.09,367,1.09,368,1.502,369,1.694,370,1.09,371,1.09,372,1.09,373,1.025,374,1.09,375,2.014,376,1.694,377,1.694,378,1.642,379,1.09,380,1.09,381,1.09,382,2.014,383,1.09,384,1.09,385,1.09,386,1.09,387,2.686,388,1.09,389,1.09,390,2.686,391,1.09,392,0.939,393,1.09,394,1.09,402,1.173,2826,4.159,2827,4.159,2828,4.159,2829,4.159,2830,4.159,2831,4.159,2832,2.676,2833,2.676,2834,2.676,2835,2.676,2836,2.676,2837,2.676,2838,2.676]],["title/classes/StringFunctions.html",[178,0.343,262,1.69]],["body/classes/StringFunctions.html",[0,1.343,3,0.049,4,0.042,5,0.049,6,0.081,8,0.62,10,0.036,12,0.148,18,0.654,23,0.099,24,0.011,27,0.72,28,0.272,33,0.131,57,1.216,59,1.253,75,0.173,82,0.609,83,1.019,92,2.174,99,1.515,106,0.994,113,0.618,118,0.11,134,0.516,155,1.363,165,1.292,168,0.876,172,0.133,176,0.005,177,0.005,178,0.668,179,2.068,180,0.129,181,1.102,182,0.693,186,1.136,187,0.208,189,0.871,190,1.136,192,1.136,194,1.136,195,1.597,196,2.764,197,2.649,198,2.938,199,3.277,200,3.267,201,1.038,202,2.166,203,1.696,204,1.136,205,2.587,206,2.508,207,2.068,208,1.136,209,1.136,210,1.136,211,1.136,212,1.136,213,1.136,214,1.136,215,1.136,216,3.668,217,1.118,218,1.507,219,1.136,220,1.069,221,1.136,222,1.136,223,1.748,224,0.242,225,2.413,226,2.752,227,1.26,228,0.852,229,2.587,230,0.807,231,2.587,232,2.587,233,1.136,234,1.136,235,1.749,236,1.136,237,2.068,238,1.136,239,1.136,240,1.136,241,1.136,242,1.136,243,1.136,244,1.136,245,1.136,246,1.136,247,1.136,248,1.136,249,1.136,250,1.136,251,1.749,252,1.749,253,1.136,254,1.136,255,2.068,256,1.136,257,2.396,258,1.136,259,1.749,260,1.136,261,1.136,262,2.323,263,1.749,264,2.396,265,1.136,266,1.749,267,1.136,268,1.749,269,1.136,270,1.749,271,1.136,272,2.068,273,1.136,274,1.136,275,1.136,276,1.136,277,1.136,278,1.136,279,1.136,280,1.136,281,1.136,282,1.136,283,1.136,284,1.136,285,1.136,286,1.136,287,1.136,288,1.136,289,1.136,290,1.136,291,1.136,292,1.136,293,1.136,294,1.136,295,1.136,296,1.136,297,1.136,298,1.136,299,1.136,300,1.136,301,1.136,302,1.136,303,1.136,304,2.068,305,1.136,306,1.136,307,1.136,308,1.136,309,2.068,310,1.136,311,1.749,312,1.136,313,1.136,314,1.749,315,1.136,316,1.136,317,1.136,318,1.136,319,2.068,320,1.136,321,1.136,322,1.136,323,2.133,324,1.749,325,3.4,326,3.566,327,1.749,328,1.136,329,1.136,330,1.038,331,1.136,332,1.136,333,2.068,334,1.136,335,1.136,336,1.136,337,1.136,338,1.136,339,1.136,340,1.136,341,1.136,342,1.136,343,1.136,344,1.136,345,1.136,346,1.136,347,1.136,348,1.136,349,1.136,350,1.136,351,1.136,352,1.136,353,1.136,354,1.136,355,1.136,356,2.068,357,1.136,358,1.136,359,1.136,360,1.136,361,1.136,362,1.136,363,1.136,364,1.136,365,1.136,366,1.136,367,1.136,368,1.551,369,1.749,370,1.136,371,1.136,372,1.136,373,1.069,374,1.136,375,2.068,376,1.749,377,1.749,378,1.696,379,1.136,380,1.136,381,1.136,382,2.068,383,1.136,384,1.136,385,1.136,386,1.136,387,2.732,388,1.136,389,1.136,390,2.732,391,1.136,392,0.979,393,1.136,394,1.136,2705,3.777,2839,4.295,2840,4.295,2841,4.295,2842,2.79,2843,2.79,2844,2.79,2845,2.79]],["title/interfaces/StructuredTypeFieldOptions.html",[0,0.978,91,2.315]],["body/interfaces/StructuredTypeFieldOptions.html",[0,1.81,1,3.118,2,2.167,3,0.074,4,0.064,5,0.074,6,0.053,7,2.355,8,0.789,9,2.487,10,0.053,11,0.628,13,2.167,14,2.257,15,1.754,16,3.301,17,2.679,18,1.67,19,2.257,20,2.355,21,2.167,23,0.113,24,0.011,25,2.777,26,3.2,27,0.726,28,0.365,29,2.995,30,2.589,31,2.869,32,1.939,33,0.135,34,3.301,35,2.355,36,2.355,37,2.355,38,3.19,39,2.009,40,2.995,41,3.118,42,2.167,43,2.355,44,3.254,45,0.692,46,1.309,47,1.873,48,2.144,49,1.939,50,3.118,51,2.996,52,2.082,53,2.679,54,1.813,55,2.995,56,3.254,57,1.148,58,3.2,59,0.956,60,1.912,61,2.589,62,2.589,63,3.118,64,2.679,65,3.118,66,2.995,67,2.881,68,2.589,69,2.589,70,2.679,71,2.995,72,2.777,73,2.257,74,1.912,75,0.182,76,3.118,77,3.118,78,2.995,79,2.355,80,2.355,81,2.257,82,0.954,83,0.65,84,2.085,85,2.355,86,2.085,87,3.443,88,2.355,89,2.465,90,2.465,91,4.045,92,1.904,93,4.045,94,2.691,95,2.966,96,4.097,97,2.504,98,2.679,99,1.214,100,2.966,101,2.589,102,2.009,103,3.182,104,2.009,105,1.873,106,0.792,107,2.167,108,2.588,109,2.085,110,3.254,111,1.207,112,2.588,113,0.6,114,1.873,115,2.465,116,2.355,117,2.465,118,0.125,119,2.144,120,2.588,121,2.167,122,2.588,123,2.257,124,2.588,125,2.355,126,2.465,127,3.254,128,4.37,129,1.507,130,2.355,131,2.355,132,2.355,133,1.551,134,1.066,135,2.781,136,2.257,137,2.995,138,2.009,139,3.118,140,2.465,141,2.995,142,2.465,143,3.254,144,2.257,145,3.254,146,3.118,147,2.355,148,2.085,149,2.881,150,2.257,151,1.346,152,1.346,153,3.701,154,1.809,155,1.086,156,1.346,157,1.346,158,2.355,159,1.873,160,2.355,161,2.588,162,1.812,163,2.257,164,2.355,165,0.951,166,2.009,167,1.873,168,1.309,169,1.873,170,2.355,171,2.465,172,0.094,173,2.257,174,2.085,175,1.939,176,0.007,177,0.007]],["title/classes/TypeFunctions.html",[178,0.343,304,1.69]],["body/classes/TypeFunctions.html",[0,1.351,3,0.05,4,0.043,5,0.05,6,0.068,8,0.624,10,0.036,12,0.109,18,0.661,23,0.102,24,0.011,27,0.721,28,0.275,33,0.132,57,1.215,59,1.2,75,0.175,82,0.614,83,1.02,92,2.178,99,1.51,106,1.001,113,0.624,118,0.103,134,0.522,155,1.373,165,1.293,168,0.885,172,0.098,176,0.005,177,0.005,178,0.669,179,2.082,180,0.13,181,1.114,182,0.699,186,1.149,187,0.153,189,0.642,190,1.149,192,1.149,194,1.149,195,1.611,196,2.773,197,2.66,198,2.949,199,3.282,200,3.271,201,1.049,202,2.177,203,1.711,204,1.149,205,2.6,206,2.521,207,2.082,208,1.149,209,1.149,210,1.149,211,1.149,212,1.149,213,1.149,214,1.149,215,1.149,216,3.67,217,1.128,218,1.52,219,1.149,220,1.081,221,1.149,222,1.149,223,1.758,224,0.244,225,2.419,226,2.761,227,1.269,228,0.862,229,2.6,230,0.816,231,2.6,232,2.6,233,1.149,234,1.149,235,1.765,236,1.149,237,2.082,238,1.149,239,1.149,240,1.149,241,1.149,242,1.149,243,1.149,244,1.149,245,1.149,246,1.149,247,1.149,248,1.149,249,1.149,250,1.149,251,1.765,252,1.765,253,1.149,254,1.149,255,2.082,256,1.149,257,2.41,258,1.149,259,1.765,260,1.149,261,1.149,262,2.082,263,1.149,264,1.765,265,1.149,266,1.149,267,1.149,268,1.149,269,1.149,270,1.149,271,1.149,272,2.082,273,1.149,274,1.149,275,1.149,276,1.149,277,1.149,278,1.149,279,1.149,280,1.149,281,1.149,282,1.149,283,1.149,284,1.149,285,1.149,286,1.149,287,1.149,288,1.149,289,1.149,290,1.149,291,1.149,292,1.149,293,1.149,294,1.149,295,1.149,296,1.149,297,1.149,298,1.149,299,1.149,300,1.149,301,1.149,302,1.149,303,1.149,304,2.336,305,1.765,306,1.149,307,1.765,308,1.149,309,2.082,310,1.149,311,1.765,312,1.149,313,1.149,314,1.765,315,1.149,316,1.149,317,1.149,318,1.149,319,2.082,320,1.149,321,1.149,322,1.149,323,2.148,324,1.765,325,3.406,326,3.57,327,1.765,328,1.149,329,1.149,330,1.049,331,1.149,332,1.149,333,2.082,334,1.149,335,1.149,336,1.149,337,1.149,338,1.149,339,1.149,340,1.149,341,1.149,342,1.149,343,1.149,344,1.149,345,1.149,346,1.149,347,1.149,348,1.149,349,1.149,350,1.149,351,1.149,352,1.149,353,1.149,354,1.149,355,1.149,356,2.082,357,1.149,358,1.149,359,1.149,360,1.149,361,1.149,362,1.149,363,1.149,364,1.149,365,1.149,366,1.149,367,1.149,368,1.564,369,1.765,370,1.149,371,1.149,372,1.149,373,1.081,374,1.149,375,2.082,376,1.765,377,1.765,378,1.711,379,1.149,380,1.149,381,1.149,382,2.082,383,1.149,384,1.149,385,1.149,386,1.149,387,2.744,388,1.149,389,1.149,390,2.744,391,1.149,392,0.99,393,1.149,394,1.149,402,0.738,2846,4.332,2847,4.332,2848,2.821,2849,2.821]],["title/dependencies.html",[2850,3.562,2851,4.534]],["body/dependencies.html",[24,0.01,32,3.172,176,0.009,177,0.009,2067,5.056,2851,6.002,2852,6.825,2853,8.917,2854,6.825,2855,6.825,2856,6.825,2857,7.881,2858,7.881,2859,6.825,2860,6.825,2861,6.825,2862,6.825,2863,6.825,2864,6.825,2865,6.825]],["title/miscellaneous/enumerations.html",[2866,2.639,2867,4.534]],["body/miscellaneous/enumerations.html",[6,0.107,7,3.369,10,0.076,23,0.093,24,0.01,25,3.505,49,3.383,50,3.937,51,3.06,52,2.628,53,3.383,54,1.997,55,3.781,56,4.109,57,1.245,58,3.671,59,1.207,60,2.413,61,3.268,62,3.268,63,3.937,64,3.383,65,3.937,66,3.781,67,3.637,68,3.268,69,3.268,70,3.383,71,3.781,134,1.103,176,0.008,177,0.008,708,5.248,709,6.401,718,5.248,719,5.248,1172,5.248,1756,3.903,2866,4.421,2867,5.248,2868,7.278,2869,5.967,2870,5.967,2871,7.278,2872,5.248,2873,6.401,2874,7.278,2875,6.401,2876,7.278,2877,5.967,2878,5.248,2879,5.967,2880,5.967,2881,5.967,2882,5.967,2883,5.248,2884,5.248,2885,7.278,2886,7.278,2887,7.278,2888,7.278,2889,7.278]],["title/index.html",[10,0.046,2890,3.133,2891,3.133]],["body/index.html",[4,0.067,16,2.202,24,0.011,28,0.519,33,0.103,38,2.684,39,2.122,42,2.289,47,1.979,58,1.979,61,2.688,62,2.688,64,3.389,72,3.274,104,3.874,114,1.979,117,2.603,118,0.067,135,2.822,138,4.16,152,1.421,165,0.634,174,2.991,176,0.007,177,0.007,178,0.544,195,2.835,227,1.635,395,3.264,493,2.688,645,4.789,721,2.733,854,3.526,924,2.048,966,4.439,1039,4.921,1044,6.945,1068,2.384,1112,3.109,1114,3.264,1119,4.251,1147,2.384,1214,2.202,1242,4.789,1252,3.875,1487,5.056,1619,2.603,1622,2.603,1668,3.875,1689,3.526,1719,5.977,1732,3.875,1948,3.526,2056,4.789,2057,4.434,2061,4.434,2066,6.412,2067,5.035,2076,5.264,2200,3.526,2265,3.526,2638,4.789,2657,7.596,2892,8.297,2893,4.406,2894,4.406,2895,4.406,2896,4.406,2897,4.406,2898,4.406,2899,5.985,2900,7.291,2901,4.406,2902,4.406,2903,7.291,2904,4.406,2905,4.406,2906,4.406,2907,5.985,2908,4.406,2909,6.412,2910,4.406,2911,5.985,2912,4.406,2913,4.406,2914,4.406,2915,5.985,2916,4.406,2917,5.985,2918,4.406,2919,4.406,2920,4.406,2921,4.406,2922,4.406,2923,4.406,2924,4.406,2925,4.406,2926,4.406,2927,5.985,2928,4.406,2929,4.406,2930,4.406,2931,5.985,2932,8.875,2933,4.406,2934,4.406,2935,4.406,2936,6.796,2937,8.184,2938,4.406,2939,4.406,2940,4.406,2941,6.796,2942,4.406,2943,4.406,2944,4.406,2945,4.406,2946,6.796,2947,5.985,2948,5.985,2949,4.406,2950,5.985,2951,5.985,2952,7.291,2953,5.264,2954,5.985,2955,4.406,2956,5.985,2957,4.406,2958,4.406,2959,4.406,2960,4.406,2961,4.406,2962,8.297,2963,4.406,2964,4.406,2965,4.406,2966,7.291,2967,4.406,2968,6.796,2969,4.406,2970,4.406,2971,4.406,2972,4.406,2973,4.406,2974,4.406,2975,4.406,2976,4.406,2977,5.985,2978,4.406,2979,5.985,2980,4.406,2981,4.406,2982,4.406,2983,4.406,2984,4.406,2985,4.406,2986,4.406,2987,4.406,2988,4.406,2989,3.875,2990,4.406,2991,4.406,2992,4.406,2993,4.406,2994,4.406,2995,4.406,2996,5.985,2997,5.985,2998,4.406,2999,4.406,3000,4.406,3001,4.406,3002,4.406]],["title/license.html",[2890,3.133,2891,3.133,3003,3.133]],["body/license.html",[24,0.009,60,2.126,176,0.009,177,0.009,1155,5.638,1470,6.08,1487,5.269,1672,4.193,1679,5.13,1726,6,2909,5.638,3003,5.638,3004,6.411,3005,8.098,3006,6.411,3007,6.411,3008,6.411,3009,6.411,3010,7.598,3011,6.411,3012,6.411,3013,6.411,3014,6.411,3015,6.411,3016,6.411,3017,7.598,3018,8.877,3019,6.411,3020,6.411,3021,6.411,3022,6.411,3023,6.411,3024,6.411,3025,6.411,3026,6.411,3027,6.411,3028,6.411,3029,6.411,3030,6.411,3031,7.598,3032,6.411,3033,6.411,3034,6.411,3035,6.411,3036,6.411,3037,6.411,3038,7.598,3039,7.598,3040,6.411,3041,6.411,3042,6.411,3043,6.411,3044,6.411,3045,6.411,3046,6.411,3047,6.411,3048,6.411,3049,6.411,3050,6.411,3051,6.411,3052,6.411,3053,6.411,3054,6.411,3055,6.411,3056,6.411,3057,6.411,3058,6.411,3059,6.411,3060,6.411,3061,6.411,3062,6.411,3063,6.411,3064,6.411,3065,6.411,3066,6.411,3067,6.411,3068,6.411,3069,6.411]],["title/modules.html",[2058,4.695]],["body/modules.html",[24,0.009,176,0.009,177,0.009,2057,5.258,2058,5.679,3070,7.098]],["title/overview.html",[3071,5.161]],["body/overview.html",[2,3.661,24,0.009,176,0.009,177,0.009,180,0.326,1215,2.963,2056,5.639,2778,6.199,2989,6.199,3071,6.199,3072,7.048,3073,7.048]],["title/miscellaneous/typealiases.html",[2866,2.639,3074,5.155]],["body/miscellaneous/typealiases.html",[6,0.111,7,2.758,10,0.063,16,3.204,22,2.419,23,0.116,24,0.01,26,2.879,27,0.4,34,3.204,35,2.758,36,2.758,37,2.758,38,3.116,39,2.353,40,3.33,41,2.642,42,2.537,43,2.758,44,3.619,45,0.81,46,1.533,47,2.193,57,0.87,59,0.81,61,2.879,62,2.879,64,2.98,66,3.33,67,3.204,75,0.166,82,0.746,92,1.713,93,3.468,97,2.121,103,3.088,116,3.619,121,2.537,127,3.619,128,3.468,137,3.33,139,3.468,141,3.33,143,3.619,145,3.619,146,3.468,176,0.007,177,0.007,181,1.929,196,2.911,199,1.871,203,2.826,395,3.619,469,3.901,970,4.193,1122,4.446,1137,4.446,1144,4.75,1145,4.446,1146,5.13,1191,4.75,1403,3.387,1637,3.619,1643,4.193,1667,4.296,1674,3.03,1689,3.908,1691,4.296,1750,3.908,1758,5.13,1759,3.619,1760,5.13,1762,5.13,1763,5.13,1764,5.13,2099,4.296,2104,4.75,2266,5.13,2359,4.296,2795,4.296,2866,3.619,2872,7.733,2873,7.807,2875,7.827,2878,4.296,2883,4.296,2884,5.639,2953,4.296,3075,6.411,3076,4.885,3077,4.885,3078,7.157,3079,6.411,3080,7.598,3081,6.411,3082,7.598,3083,6.411,3084,7.891,3085,6.411,3086,6.411,3087,7.157,3088,6.411,3089,4.885,3090,6.411,3091,6.411,3092,6.411,3093,6.411,3094,6.411,3095,6.411,3096,6.411,3097,6.411,3098,6.411,3099,4.885,3100,7.157,3101,7.598,3102,6.411,3103,7.598,3104,6.411,3105,4.885,3106,4.885,3107,6.411,3108,4.885,3109,4.885,3110,4.885,3111,4.885,3112,4.885,3113,4.885]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":834,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{}}}],["0.11.4",{"_index":2865,"title":{},"body":{"dependencies.html":{}}}],["07/schema",{"_index":1915,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["1",{"_index":1215,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"overview.html":{}}}],["11",{"_index":3073,"title":{},"body":{"overview.html":{}}}],["111",{"_index":3072,"title":{},"body":{"overview.html":{}}}],["12.2.0",{"_index":2853,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":2989,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0",{"_index":35,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["2.3.0",{"_index":2863,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1216,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["2019",{"_index":3006,"title":{},"body":{"license.html":{}}}],["3",{"_index":2988,"title":{},"body":{"index.html":{}}}],["3.0",{"_index":36,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["4",{"_index":2983,"title":{},"body":{"index.html":{}}}],["4.0",{"_index":37,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["404",{"_index":1735,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["6.6.0",{"_index":2861,"title":{},"body":{"dependencies.html":{}}}],["9a",{"_index":1824,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{}}}],["_annotations",{"_index":2572,"title":{},"body":{"classes/ODataResponse.html":{}}}],["_body",{"_index":2424,"title":{},"body":{"classes/ODataRequest.html":{}}}],["_context",{"_index":2573,"title":{},"body":{"classes/ODataResponse.html":{}}}],["_functions",{"_index":1015,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["_headers",{"_index":2425,"title":{},"body":{"classes/ODataRequest.html":{}}}],["_method",{"_index":2426,"title":{},"body":{"classes/ODataRequest.html":{}}}],["_options",{"_index":2574,"title":{},"body":{"classes/ODataResponse.html":{}}}],["_params",{"_index":2427,"title":{},"body":{"classes/ODataRequest.html":{}}}],["_path",{"_index":2428,"title":{},"body":{"classes/ODataRequest.html":{}}}],["_payload",{"_index":2575,"title":{},"body":{"classes/ODataResponse.html":{}}}],["_properties",{"_index":1010,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["_querybody",{"_index":2429,"title":{},"body":{"classes/ODataRequest.html":{}}}],["_requests",{"_index":1238,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["_responsetype",{"_index":2430,"title":{},"body":{"classes/ODataRequest.html":{}}}],["_segments",{"_index":2100,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["above",{"_index":3037,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1201,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["abstract",{"_index":471,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["acc",{"_index":1383,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["acc.params",{"_index":2149,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["acc.paths.push(path",{"_index":2148,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["accept",{"_index":13,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["accept.length",{"_index":2522,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push",{"_index":2516,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`odata.metadata=${this.api.options.accept?.metadata",{"_index":2513,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`streaming=${this.api.options.accept?.streaming",{"_index":2519,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accessors",{"_index":869,"title":{},"body":{"classes/Function.html":{},"classes/Grouping.html":{},"classes/Lambda.html":{},"classes/Navigation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataCallable.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataParserOptions.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"classes/SegmentHandler.html":{}}}],["action",{"_index":60,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataPathSegmentsHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["action.ts",{"_index":419,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["action.ts:1",{"_index":532,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:12",{"_index":425,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:14",{"_index":428,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:15",{"_index":430,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:16",{"_index":427,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:17",{"_index":426,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:18",{"_index":429,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:22",{"_index":539,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:24",{"_index":543,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:25",{"_index":541,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:26",{"_index":540,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:27",{"_index":542,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:3",{"_index":536,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:31",{"_index":438,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:33",{"_index":441,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:34",{"_index":439,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:35",{"_index":440,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:39",{"_index":589,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:4",{"_index":538,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:41",{"_index":591,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:42",{"_index":596,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:43",{"_index":592,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:44",{"_index":590,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:45",{"_index":593,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:46",{"_index":594,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:47",{"_index":595,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:5",{"_index":534,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:51",{"_index":615,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:53",{"_index":621,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:54",{"_index":617,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:55",{"_index":616,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:56",{"_index":618,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:57",{"_index":619,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:58",{"_index":620,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:6",{"_index":533,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:7",{"_index":535,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:8",{"_index":537,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["actionimport",{"_index":762,"title":{},"body":{"classes/Field.html":{}}}],["actionimports",{"_index":495,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["actions",{"_index":624,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["add",{"_index":395,"title":{},"body":{"classes/ArithmeticOperators.html":{},"classes/ODataPathSegments.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["add(left",{"_index":357,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["add(name",{"_index":2106,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["added",{"_index":2879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["additionalitems",{"_index":1844,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["addressinfo",{"_index":2967,"title":{},"body":{"index.html":{}}}],["again",{"_index":2941,"title":{},"body":{"index.html":{}}}],["aggregate",{"_index":3075,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["airport",{"_index":2940,"title":{},"body":{"index.html":{}}}],["airports",{"_index":2932,"title":{},"body":{"index.html":{}}}],["airports.entity(\"cyyz\").fetch",{"_index":2944,"title":{},"body":{"index.html":{}}}],["airports.fetch",{"_index":2975,"title":{},"body":{"index.html":{}}}],["airports.fetch().subscribe",{"_index":2935,"title":{},"body":{"index.html":{}}}],["airports.query((q",{"_index":2954,"title":{},"body":{"index.html":{}}}],["airports.tojson",{"_index":2957,"title":{},"body":{"index.html":{}}}],["airportsservice",{"_index":2930,"title":{},"body":{"index.html":{}}}],["airportsservice.entities",{"_index":2934,"title":{},"body":{"index.html":{}}}],["alias",{"_index":134,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/enumerations.html":{}}}],["alias(value",{"_index":2302,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["aliases",{"_index":199,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataQueryOptions.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/typealiases.html":{}}}],["all(field",{"_index":385,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["allows",{"_index":1266,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["and(left",{"_index":346,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["and/or",{"_index":3029,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2892,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2852,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2854,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":1188,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitySetService.html":{},"modules/ODataModule.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["angular/compiler",{"_index":2855,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":2067,"title":{},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":2856,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2857,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2860,"title":{},"body":{"dependencies.html":{}}}],["angularodataentity",{"_index":2904,"title":{},"body":{"index.html":{}}}],["annot",{"_index":934,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataSchema.html":{}}}],["annot.bool",{"_index":954,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["annot.int",{"_index":955,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["annot.permissions",{"_index":956,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["annot.properties",{"_index":957,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["annot.string",{"_index":953,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["annot.term",{"_index":941,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["annotatable",{"_index":931,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["annotatedvalue",{"_index":920,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["annotatedvalue(term",{"_index":926,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["annotation",{"_index":549,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["annotation.ts",{"_index":443,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{}}}],["annotation.ts:1",{"_index":447,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:15",{"_index":459,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:16",{"_index":460,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:19",{"_index":661,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:2",{"_index":448,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:21",{"_index":666,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:22",{"_index":671,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:23",{"_index":663,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:24",{"_index":664,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:25",{"_index":662,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:26",{"_index":667,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:27",{"_index":665,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:28",{"_index":668,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:29",{"_index":669,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:30",{"_index":670,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:5",{"_index":462,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:7",{"_index":464,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:9",{"_index":463,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotationconfig",{"_index":128,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["annotationlist",{"_index":444,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["annotations",{"_index":135,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["annotations=${this.api.options.prefer?.includeannotations",{"_index":2534,"title":{},"body":{"classes/ODataRequest.html":{}}}],["annotationslist",{"_index":625,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["annots",{"_index":2657,"title":{},"body":{"classes/ODataResponse.html":{},"index.html":{}}}],["annots.data(payload",{"_index":2659,"title":{},"body":{"classes/ODataResponse.html":{}}}],["any(field",{"_index":383,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["any)[f.name",{"_index":1883,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["any[]).map((v",{"_index":1807,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["api",{"_index":1112,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["apiconfig",{"_index":116,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"modules/ODataModule.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apinameorentitytype",{"_index":1115,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataServiceFactory.html":{}}}],["apioptions",{"_index":1,"title":{"interfaces/ApiOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["app",{"_index":2920,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":2925,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":2923,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2926,"title":{},"body":{"index.html":{}}}],["application/json;${accept.join",{"_index":2524,"title":{},"body":{"classes/ODataRequest.html":{}}}],["application_http",{"_index":1169,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["application_json",{"_index":1170,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["appliesto",{"_index":457,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["apply(query",{"_index":2345,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["applymixins(derivedctor",{"_index":208,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["applymixins(odatafunctions",{"_index":391,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["applymixins(odataoperators",{"_index":388,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["applymixins(odatasyntax",{"_index":393,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["appmodule",{"_index":2915,"title":{},"body":{"index.html":{}}}],["arising",{"_index":3066,"title":{},"body":{"license.html":{}}}],["arithmeticfunctions",{"_index":179,"title":{"classes/ArithmeticFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["arithmeticoperators",{"_index":356,"title":{"classes/ArithmeticOperators.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["arr",{"_index":2282,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["arr.find((v",{"_index":2285,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["arr.push(obj",{"_index":2286,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["array",{"_index":1759,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(config.keys",{"_index":1855,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["array.isarray(right",{"_index":328,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["array.isarray(this.keys",{"_index":1892,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["array.isarray(value",{"_index":1528,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["arraybuffer",{"_index":2446,"title":{},"body":{"classes/ODataRequest.html":{}}}],["assertarray",{"_index":2227,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["assertobject",{"_index":2228,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["assertobject(create",{"_index":2238,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["assign",{"_index":2229,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["assign(values",{"_index":2240,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["associated",{"_index":3019,"title":{},"body":{"license.html":{}}}],["at(index",{"_index":2242,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["attach",{"_index":1637,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"miscellaneous/typealiases.html":{}}}],["attach(model",{"_index":1676,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["attach(value",{"_index":1639,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["attach>(model",{"_index":1713,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>(value",{"_index":1652,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["attach>>(model",{"_index":1714,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["attr",{"_index":858,"title":{},"body":{"classes/Field.html":{},"classes/ODataQueryOptionHandler.html":{}}}],["attr?.nodevalue",{"_index":860,"title":{},"body":{"classes/Field.html":{}}}],["attribute",{"_index":718,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["attribute_abstract",{"_index":802,"title":{},"body":{"classes/Field.html":{}}}],["attribute_action",{"_index":799,"title":{},"body":{"classes/Field.html":{}}}],["attribute_alias",{"_index":769,"title":{},"body":{"classes/Field.html":{}}}],["attribute_applies_to",{"_index":807,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_term",{"_index":806,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_type",{"_index":777,"title":{},"body":{"classes/Field.html":{}}}],["attribute_contains_target",{"_index":791,"title":{},"body":{"classes/Field.html":{}}}],["attribute_default_value",{"_index":786,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set",{"_index":800,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set_path",{"_index":793,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_type",{"_index":795,"title":{},"body":{"classes/Field.html":{}}}],["attribute_extends",{"_index":805,"title":{},"body":{"classes/Field.html":{}}}],["attribute_function",{"_index":798,"title":{},"body":{"classes/Field.html":{}}}],["attribute_has_stream",{"_index":790,"title":{},"body":{"classes/Field.html":{}}}],["attribute_include_in_service_document",{"_index":801,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_bound",{"_index":792,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_composable",{"_index":794,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_flags",{"_index":804,"title":{},"body":{"classes/Field.html":{}}}],["attribute_max_length",{"_index":781,"title":{},"body":{"classes/Field.html":{}}}],["attribute_name",{"_index":775,"title":{},"body":{"classes/Field.html":{}}}],["attribute_namespace",{"_index":770,"title":{},"body":{"classes/Field.html":{}}}],["attribute_nullable",{"_index":780,"title":{},"body":{"classes/Field.html":{}}}],["attribute_open_type",{"_index":778,"title":{},"body":{"classes/Field.html":{}}}],["attribute_partner",{"_index":787,"title":{},"body":{"classes/Field.html":{}}}],["attribute_path",{"_index":796,"title":{},"body":{"classes/Field.html":{}}}],["attribute_precision",{"_index":782,"title":{},"body":{"classes/Field.html":{}}}],["attribute_property",{"_index":788,"title":{},"body":{"classes/Field.html":{}}}],["attribute_qualifier",{"_index":772,"title":{},"body":{"classes/Field.html":{}}}],["attribute_referenced_property",{"_index":789,"title":{},"body":{"classes/Field.html":{}}}],["attribute_scale",{"_index":783,"title":{},"body":{"classes/Field.html":{}}}],["attribute_srid",{"_index":785,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target",{"_index":797,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target_namespace",{"_index":773,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term",{"_index":774,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term_namespace",{"_index":771,"title":{},"body":{"classes/Field.html":{}}}],["attribute_type",{"_index":779,"title":{},"body":{"classes/Field.html":{}}}],["attribute_underlying_type",{"_index":803,"title":{},"body":{"classes/Field.html":{}}}],["attribute_unicode",{"_index":784,"title":{},"body":{"classes/Field.html":{}}}],["attribute_uri",{"_index":768,"title":{},"body":{"classes/Field.html":{}}}],["attribute_value",{"_index":776,"title":{},"body":{"classes/Field.html":{}}}],["attribute_version",{"_index":767,"title":{},"body":{"classes/Field.html":{}}}],["attributes",{"_index":766,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataSingletonService.html":{}}}],["attributes(data",{"_index":973,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["attributes.getnameditem('version",{"_index":859,"title":{},"body":{"classes/Field.html":{}}}],["attrs",{"_index":1685,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataSingletonService.html":{}}}],["attrs[field.name",{"_index":1937,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["authors",{"_index":3056,"title":{},"body":{"license.html":{}}}],["average",{"_index":2888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backward",{"_index":2175,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["base",{"_index":162,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["base64",{"_index":1830,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["baseterm",{"_index":455,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["basetype",{"_index":472,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["basic",{"_index":2985,"title":{},"body":{"index.html":{}}}],["batch",{"_index":50,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["batch(\"trippin",{"_index":2973,"title":{},"body":{"index.html":{}}}],["batch.request.method",{"_index":1292,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batch_prefix",{"_index":1171,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batchboundary",{"_index":1286,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["binary",{"_index":1172,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["binding",{"_index":517,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["binding.ts",{"_index":581,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:1",{"_index":584,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:2",{"_index":585,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["bindingtype",{"_index":2733,"title":{},"body":{"classes/ODataSchema.html":{}}}],["blob",{"_index":2447,"title":{},"body":{"classes/ODataRequest.html":{}}}],["body",{"_index":98,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["bodyparams",{"_index":2560,"title":{},"body":{"classes/ODataRequest.html":{}}}],["bodyparams.tostring",{"_index":2563,"title":{},"body":{"classes/ODataRequest.html":{}}}],["bodyqueryoptions",{"_index":14,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["bool",{"_index":130,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boolean",{"_index":27,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/typealiases.html":{}}}],["boolean(field.collection",{"_index":1782,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["boolean(field.navigation",{"_index":1784,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["bound",{"_index":170,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boundary",{"_index":1290,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix",{"_index":1173,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix}${batchboundary}${boundary_prefix_suffix",{"_index":1306,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix}${changesetboundary}${boundary_prefix_suffix",{"_index":1294,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["break",{"_index":1873,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{}}}],["browse",{"_index":3070,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2858,"title":{},"body":{"dependencies.html":{}}}],["buildbody",{"_index":1285,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["buildentry",{"_index":1327,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["buildentry(payload",{"_index":1341,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["builder",{"_index":195,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{},"index.html":{}}}],["builders",{"_index":2992,"title":{},"body":{"index.html":{}}}],["buildkey",{"_index":1328,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["buildkey(names",{"_index":1344,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["buildpathandquery",{"_index":2127,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{}}}],["c",{"_index":1679,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSchema.html":{},"license.html":{}}}],["c.binding()?.type",{"_index":2768,"title":{},"body":{"classes/ODataSchema.html":{}}}],["c.istypeof(type",{"_index":1802,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["cache",{"_index":38,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cache_control",{"_index":2604,"title":{},"body":{"classes/ODataResponse.html":{}}}],["cache_key_separator",{"_index":1371,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["cacheability",{"_index":89,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["cachecacheability",{"_index":44,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["cachecontrol",{"_index":2641,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["cachecontrol.split(',').foreach((directive",{"_index":2709,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["cached",{"_index":1421,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["california",{"_index":2956,"title":{},"body":{"index.html":{}}}],["callable",{"_index":1448,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{}}}],["callable.configure",{"_index":2776,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callable_binding_parameter",{"_index":1516,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["callableconfig",{"_index":141,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callables",{"_index":140,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["callaction",{"_index":1109,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["callaction(params",{"_index":1118,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["callfunction",{"_index":1110,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["callfunction(params",{"_index":1129,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["case",{"_index":415,"title":{},"body":{"classes/ConditionalFunctions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataResponseOptions.html":{}}}],["case(condition",{"_index":320,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["cast",{"_index":2846,"title":{},"body":{"classes/TypeFunctions.html":{}}}],["cast(value",{"_index":305,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["catch",{"_index":849,"title":{},"body":{"classes/Field.html":{}}}],["catcherror",{"_index":1710,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["catcherror((error",{"_index":1733,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["caught",{"_index":124,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ceiling",{"_index":183,"title":{},"body":{"classes/ArithmeticFunctions.html":{}}}],["ceiling(value",{"_index":186,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["ch",{"_index":1870,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["ch.findchildparser(predicate",{"_index":1872,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["change",{"_index":2953,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["changed",{"_index":2881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changeset",{"_index":1289,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changeset_prefix",{"_index":1174,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetboundary",{"_index":1287,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetendline",{"_index":1318,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetid",{"_index":1288,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetresponses",{"_index":1316,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["channel",{"_index":1225,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["charge",{"_index":3014,"title":{},"body":{"license.html":{}}}],["check",{"_index":854,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"index.html":{}}}],["checkversion(document",{"_index":853,"title":{},"body":{"classes/Field.html":{}}}],["childparser",{"_index":1874,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["childparser((c",{"_index":1801,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["children",{"_index":866,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["chunks",{"_index":1308,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["city",{"_index":2948,"title":{},"body":{"index.html":{}}}],["claim",{"_index":3059,"title":{},"body":{"license.html":{}}}],["class",{"_index":178,"title":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{},"index.html":{}}}],["classes",{"_index":180,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{},"overview.html":{}}}],["clear",{"_index":2230,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{}}}],["clearkey",{"_index":2210,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["clearpaging",{"_index":2341,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["clearparameters",{"_index":2215,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["client",{"_index":1117,"title":{},"body":{"classes/ODataBaseService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{}}}],["clone",{"_index":966,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"index.html":{}}}],["close",{"_index":1291,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["code",{"_index":1212,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["collection",{"_index":153,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["collectionfunctions",{"_index":255,"title":{"classes/CollectionFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["complete.html#_toc406398229",{"_index":1078,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["complete.html#_toc406398230",{"_index":1079,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["complete.html#_toc406398236",{"_index":1082,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["complete.html#_toc406398237",{"_index":1083,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["complete.html#_toc406398238",{"_index":1080,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["complete.html#_toc406398240",{"_index":1081,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["complextype",{"_index":742,"title":{},"body":{"classes/Field.html":{}}}],["complextypes",{"_index":626,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["compodoc",{"_index":2995,"title":{},"body":{"index.html":{}}}],["component",{"_index":2917,"title":{},"body":{"index.html":{}}}],["composable",{"_index":171,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["composite",{"_index":1740,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["compute",{"_index":63,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["compute(opts",{"_index":2309,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["computed",{"_index":1754,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["concat",{"_index":2826,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["concat(field",{"_index":238,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["condition",{"_index":322,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["conditionalfunctions",{"_index":319,"title":{"classes/ConditionalFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["conditions",{"_index":3036,"title":{},"body":{"license.html":{}}}],["config",{"_index":924,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"index.html":{}}}],["config.accept",{"_index":1100,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["config.alias",{"_index":2747,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.annotations",{"_index":944,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["config.base",{"_index":1852,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["config.bodyqueryoptions",{"_index":1098,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["config.bound",{"_index":1478,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.composable",{"_index":1480,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.configure",{"_index":2774,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.containers",{"_index":2758,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entities",{"_index":2752,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entitysetpath",{"_index":1476,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.entitysets",{"_index":1631,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["config.entitytype",{"_index":1661,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["config.enums",{"_index":2749,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.etag",{"_index":1102,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["config.fetchpolicy",{"_index":1096,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["config.fields",{"_index":1861,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["config.flags",{"_index":1978,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["config.headers",{"_index":1090,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["config.keys.map((key",{"_index":1857,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["config.members",{"_index":1966,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["config.name",{"_index":1474,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["config.namespace",{"_index":2746,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.open",{"_index":1854,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["config.params",{"_index":1088,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["config.prefer",{"_index":1104,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["config.return",{"_index":1544,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["config.service",{"_index":1663,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["config.stringasenum",{"_index":1086,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.stripmetadata",{"_index":1094,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["config.version",{"_index":1084,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.withcredentials",{"_index":1092,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["configs",{"_index":115,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"modules/ODataModule.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["configure",{"_index":1437,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["configure(undefined",{"_index":1449,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{}}}],["connection",{"_index":3068,"title":{},"body":{"license.html":{}}}],["connector",{"_index":2868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log",{"_index":2952,"title":{},"body":{"index.html":{}}}],["console.log(\"airport",{"_index":2945,"title":{},"body":{"index.html":{}}}],["console.log(\"airports",{"_index":2936,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":2939,"title":{},"body":{"index.html":{}}}],["const",{"_index":106,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["constants",{"_index":717,"title":{},"body":{"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["constructor",{"_index":224,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["constructor(action",{"_index":586,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["constructor(annot",{"_index":939,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["constructor(annotationlist",{"_index":445,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["constructor(client",{"_index":1113,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataServiceFactory.html":{}}}],["constructor(config",{"_index":922,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{}}}],["constructor(field",{"_index":913,"title":{},"body":{"classes/Navigation.html":{}}}],["constructor(group",{"_index":881,"title":{},"body":{"classes/Grouping.html":{}}}],["constructor(helper",{"_index":968,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["constructor(init",{"_index":2437,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["constructor(name",{"_index":422,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{}}}],["constructor(namespace",{"_index":546,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlSchema.html":{}}}],["constructor(o",{"_index":2234,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["constructor(op",{"_index":889,"title":{},"body":{"classes/Lambda.html":{},"classes/Operator.html":{}}}],["constructor(options",{"_index":2363,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["constructor(path",{"_index":583,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["constructor(private",{"_index":2200,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor(property",{"_index":611,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["constructor(propertyrefs",{"_index":561,"title":{},"body":{"classes/CsdlKey.html":{}}}],["constructor(protected",{"_index":368,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataQueryOptionHandler.html":{},"injectables/ODataServiceFactory.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["constructor(public",{"_index":449,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["constructor(request",{"_index":1158,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["constructor(segment",{"_index":2815,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["constructor(segments",{"_index":2103,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{}}}],["constructor(target",{"_index":461,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["constructor(term",{"_index":458,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["constructor(termnamespace",{"_index":556,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["constructor(type",{"_index":614,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["constructor(undefined",{"_index":1338,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataReferential.html":{}}}],["constructor(uri",{"_index":606,"title":{},"body":{"classes/CsdlReference.html":{}}}],["constructor(xml",{"_index":809,"title":{},"body":{"classes/Field.html":{}}}],["constructors",{"_index":209,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["constructors.foreach((basector",{"_index":210,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["container",{"_index":646,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{}}}],["container.entitysets",{"_index":2763,"title":{},"body":{"classes/ODataSchema.html":{}}}],["container.ts",{"_index":494,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:10",{"_index":507,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:11",{"_index":505,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:12",{"_index":502,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:21",{"_index":1628,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:31",{"_index":1615,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:5",{"_index":501,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:7",{"_index":506,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:8",{"_index":504,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:9",{"_index":503,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["containers",{"_index":142,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["contains",{"_index":2827,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["contains(field",{"_index":240,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["containstarget",{"_index":566,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["content",{"_index":1165,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content.join(newline",{"_index":1229,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_id",{"_index":1175,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_transfer_encoding",{"_index":1176,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_type",{"_index":1177,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["contentid",{"_index":1317,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contents",{"_index":2906,"title":{},"body":{"index.html":{}}}],["contenttype",{"_index":1309,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["contenttype.indexof(application_json",{"_index":2628,"title":{},"body":{"classes/ODataResponse.html":{}}}],["context",{"_index":969,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["context.entityset",{"_index":1388,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["context.entityset}(${context.key",{"_index":1391,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["context.key",{"_index":1390,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["context.type",{"_index":1392,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["continueonerror",{"_index":85,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["contract",{"_index":3063,"title":{},"body":{"license.html":{}}}],["conventions.html#sec_parameteraliases",{"_index":2301,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["conventions.html#sec_systemqueryoptioncompute",{"_index":2307,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["conventions.html#sec_systemqueryoptionformat",{"_index":2318,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["copies",{"_index":3031,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3017,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3005,"title":{},"body":{"license.html":{}}}],["count",{"_index":58,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["countdistinct",{"_index":2889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countryregion",{"_index":2949,"title":{},"body":{"index.html":{}}}],["create",{"_index":1616,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{},"injectables/ODataServiceFactory.html":{}}}],["create(attrs",{"_index":1682,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["create/update/patch",{"_index":1743,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["createsettings",{"_index":2080,"title":{},"body":{"modules/ODataModule.html":{}}}],["createsettings(configs",{"_index":2074,"title":{},"body":{"modules/ODataModule.html":{}}}],["creating",{"_index":1622,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"index.html":{}}}],["creation",{"_index":120,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["credentials",{"_index":1058,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["csdl",{"_index":484,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdl/csdl",{"_index":712,"title":{},"body":{"classes/Field.html":{}}}],["csdlaction",{"_index":417,"title":{"classes/CsdlAction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlactionimport",{"_index":436,"title":{"classes/CsdlActionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlannotable",{"_index":442,"title":{"classes/CsdlAnnotable.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotable:2",{"_index":466,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotation",{"_index":446,"title":{"classes/CsdlAnnotation.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["csdlannotations",{"_index":450,"title":{"classes/CsdlAnnotations.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdlcomplextype",{"_index":467,"title":{"classes/CsdlComplexType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlentitycontainer",{"_index":492,"title":{"classes/CsdlEntityContainer.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlentityset",{"_index":499,"title":{"classes/CsdlEntitySet.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["csdlentitytype",{"_index":487,"title":{"classes/CsdlEntityType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlenummember",{"_index":521,"title":{"classes/CsdlEnumMember.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["csdlenumtype",{"_index":524,"title":{"classes/CsdlEnumType.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunction",{"_index":431,"title":{"classes/CsdlFunction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunctionimport",{"_index":433,"title":{"classes/CsdlFunctionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlinclude",{"_index":544,"title":{"classes/CsdlInclude.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlincludeannotations",{"_index":553,"title":{"classes/CsdlIncludeAnnotations.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlkey",{"_index":488,"title":{"classes/CsdlKey.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationproperty",{"_index":476,"title":{"classes/CsdlNavigationProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationpropertybinding",{"_index":511,"title":{"classes/CsdlNavigationPropertyBinding.html":{}},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlondelete",{"_index":571,"title":{"classes/CsdlOnDelete.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlparameter",{"_index":424,"title":{"classes/CsdlParameter.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlproperty",{"_index":475,"title":{"classes/CsdlProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlpropertyref",{"_index":491,"title":{"classes/CsdlPropertyRef.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlreference",{"_index":550,"title":{"classes/CsdlReference.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlreferentialconstraint",{"_index":570,"title":{"classes/CsdlReferentialConstraint.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlreturntype",{"_index":423,"title":{"classes/CsdlReturnType.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlschema",{"_index":622,"title":{"classes/CsdlSchema.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlsingleton",{"_index":500,"title":{"classes/CsdlSingleton.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlstructuralproperty",{"_index":565,"title":{"classes/CsdlStructuralProperty.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["csdlstructuralproperty:3",{"_index":577,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:4",{"_index":579,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:5",{"_index":578,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuredtype",{"_index":470,"title":{"classes/CsdlStructuredType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["csdlstructuredtype:10",{"_index":481,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:11",{"_index":479,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:12",{"_index":482,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:13",{"_index":478,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:8",{"_index":480,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:9",{"_index":483,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlterm",{"_index":454,"title":{"classes/CsdlTerm.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdltypedefinition",{"_index":632,"title":{"classes/CsdlTypeDefinition.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["ctx",{"_index":1250,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["ctx(this",{"_index":1272,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["current",{"_index":1255,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["custom",{"_index":1765,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["customheaders",{"_index":2504,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[accept",{"_index":2523,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_match_header",{"_index":2508,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_none_match_header",{"_index":2511,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[prefer",{"_index":2539,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customizations",{"_index":2991,"title":{},"body":{"index.html":{}}}],["customize",{"_index":1037,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["customparams",{"_index":2543,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customparams['$expand",{"_index":2546,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customparams['$select",{"_index":2544,"title":{},"body":{"classes/ODataRequest.html":{}}}],["damages",{"_index":3060,"title":{},"body":{"license.html":{}}}],["data",{"_index":967,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{},"interfaces/ResponseJson.html":{}}}],["data(data",{"_index":976,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["dataservices",{"_index":830,"title":{},"body":{"classes/Field.html":{}}}],["date",{"_index":121,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/DateAndTimeFunctions.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["date(value",{"_index":273,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["date.now",{"_index":1394,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["dateandtimefunctions",{"_index":272,"title":{"classes/DateAndTimeFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["dates",{"_index":2128,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["day",{"_index":682,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["day(value",{"_index":275,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["deal",{"_index":3021,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3069,"title":{},"body":{"license.html":{}}}],["deep",{"_index":2990,"title":{},"body":{"index.html":{}}}],["def",{"_index":2247,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["default",{"_index":119,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["default_fetch_policy",{"_index":1061,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["default_strip_metadata",{"_index":1062,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["default_timeout",{"_index":1372,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["default_version",{"_index":1063,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["defaults",{"_index":1905,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["defaultvalue",{"_index":456,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["defined",{"_index":187,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["definition",{"_index":645,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"index.html":{}}}],["definition.ts",{"_index":672,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:10",{"_index":681,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:11",{"_index":679,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:3",{"_index":674,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:5",{"_index":676,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:6",{"_index":680,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:7",{"_index":675,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:8",{"_index":677,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:9",{"_index":678,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["delete",{"_index":1303,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["delete'].indexof(this._method",{"_index":2507,"title":{},"body":{"classes/ODataRequest.html":{}}}],["deleting",{"_index":2896,"title":{},"body":{"index.html":{}}}],["delivered",{"_index":1224,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["deltalink",{"_index":1025,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["demo",{"_index":2901,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":2851,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":2081,"title":{},"body":{"modules/ODataModule.html":{}}}],["derivedctor.prototype",{"_index":213,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["description",{"_index":932,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["deseialize",{"_index":1453,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["deserialization",{"_index":1455,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["deserialize",{"_index":95,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["deserialize(value",{"_index":1451,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Parser.html":{}}}],["deserialized",{"_index":1456,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["destroy",{"_index":1667,"title":{},"body":{"classes/ODataEntitySetService.html":{},"miscellaneous/typealiases.html":{}}}],["destroy(key",{"_index":1686,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["diego",{"_index":3007,"title":{},"body":{"license.html":{}}}],["directive",{"_index":2716,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directive.startswith(max_age",{"_index":2710,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["distribute",{"_index":3027,"title":{},"body":{"license.html":{}}}],["div",{"_index":396,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["div(left",{"_index":363,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["document",{"_index":812,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement",{"_index":823,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.attributes",{"_index":820,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.getelementsbytagname",{"_index":832,"title":{},"body":{"classes/Field.html":{}}}],["documentation",{"_index":2909,"title":{},"body":{"index.html":{},"license.html":{}}}],["domparser",{"_index":811,"title":{},"body":{"classes/Field.html":{}}}],["down",{"_index":2276,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["duration",{"_index":2884,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dynamic",{"_index":2859,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1948,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataQueryOptionHandler.html":{},"index.html":{}}}],["e().eq(\"emails",{"_index":2969,"title":{},"body":{"index.html":{}}}],["e.istypeof(type",{"_index":2765,"title":{},"body":{"classes/ODataSchema.html":{}}}],["editlink",{"_index":1002,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["edm.binary",{"_index":1819,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.boolean'].indexof(this.type",{"_index":1841,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.byte",{"_index":1835,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.date",{"_index":1815,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.datetimeoffset",{"_index":1817,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.decimal",{"_index":1839,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.double'].indexof(this.type",{"_index":1840,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.guid",{"_index":1818,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.int16",{"_index":1834,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.int32",{"_index":1833,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.int64",{"_index":1832,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.sbyte'].indexof",{"_index":1836,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.string",{"_index":1814,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edm.timeofday",{"_index":1816,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["edmx:dataservices",{"_index":727,"title":{},"body":{"classes/Field.html":{}}}],["edmx:edmx",{"_index":725,"title":{},"body":{"classes/Field.html":{}}}],["edmx:include",{"_index":731,"title":{},"body":{"classes/Field.html":{}}}],["edmx:includeannotations",{"_index":733,"title":{},"body":{"classes/Field.html":{}}}],["edmx:reference",{"_index":729,"title":{},"body":{"classes/Field.html":{}}}],["element",{"_index":831,"title":{},"body":{"classes/Field.html":{}}}],["empty",{"_index":2231,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["encode",{"_index":101,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["encode(params",{"_index":1511,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["encode(value",{"_index":105,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["encoded",{"_index":1459,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["encoding",{"_index":1458,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["endline",{"_index":1312,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["endregion",{"_index":175,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["endswith",{"_index":2828,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["endswith(field",{"_index":242,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["entities",{"_index":138,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entities'].indexof(this._responsetype",{"_index":2558,"title":{},"body":{"classes/ODataRequest.html":{}}}],["entity",{"_index":493,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"index.html":{}}}],["entity(\"cyyz",{"_index":2942,"title":{},"body":{"index.html":{}}}],["entity(key",{"_index":1642,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{}}}],["entitycontainer",{"_index":627,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["entitycontainerconfig",{"_index":143,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityContainer.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entityid",{"_index":2655,"title":{},"body":{"classes/ODataResponse.html":{}}}],["entitykey",{"_index":1643,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["entityset",{"_index":52,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["entityset(entitysetname",{"_index":2781,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["entitysetconfig",{"_index":145,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitysetname",{"_index":2783,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["entitysetpath",{"_index":169,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitysets",{"_index":144,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitysetschema",{"_index":1675,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["entitytype",{"_index":173,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitytypes",{"_index":628,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["entries",{"_index":1325,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry",{"_index":1362,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry.lastread",{"_index":1415,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["entry.payload",{"_index":1402,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["entry.tags.indexof(t",{"_index":1413,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["enu.configure",{"_index":2772,"title":{},"body":{"classes/ODataSchema.html":{}}}],["enum",{"_index":48,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumerations",{"_index":2867,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":136,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enums.toname(this.members",{"_index":1988,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enums.tonames(this.members",{"_index":1984,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enums.tovalue(this.members",{"_index":1983,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enums.tovalues(this.members",{"_index":1981,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumtype",{"_index":739,"title":{},"body":{"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["enumtypeconfig",{"_index":137,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["enumtypefieldconfig",{"_index":146,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["enumtypes",{"_index":629,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["eq",{"_index":896,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["eq(left",{"_index":334,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["errata02",{"_index":1074,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["error",{"_index":123,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["error(\"batch",{"_index":1265,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["error('batch",{"_index":1261,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["error('field",{"_index":1537,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["error('odata",{"_index":856,"title":{},"body":{"classes/Field.html":{}}}],["error('unable",{"_index":851,"title":{},"body":{"classes/Field.html":{}}}],["error(`no",{"_index":2188,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["error.status",{"_index":1734,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["errorhandler",{"_index":122,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["errors",{"_index":1790,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["errors.push(`maxlength",{"_index":1797,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["errors.push(`required",{"_index":1795,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["errors[field.name",{"_index":1940,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["errs",{"_index":1938,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["escape",{"_index":200,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["etag",{"_index":15,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["etag_headers",{"_index":2606,"title":{},"body":{"classes/ODataResponse.html":{}}}],["event",{"_index":3055,"title":{},"body":{"license.html":{}}}],["events",{"_index":1264,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["examples",{"_index":2902,"title":{},"body":{"index.html":{}}}],["exec",{"_index":1252,"title":{},"body":{"classes/ODataBatchRequest.html":{},"index.html":{}}}],["execute",{"_index":1249,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["existing",{"_index":1678,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["exp",{"_index":2368,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["expand",{"_index":62,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["expand(opts",{"_index":2305,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["expandobject",{"_index":3078,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expandoptions",{"_index":3079,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expandtype",{"_index":3080,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expired",{"_index":1404,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["exponentialdecimals",{"_index":76,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["exponentialdecimals=${this.api.options.accept?.exponentialdecimals",{"_index":2521,"title":{},"body":{"classes/ODataRequest.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"index.html":{}}}],["express",{"_index":3046,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2264,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{}}}],["expression(name",{"_index":2367,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["expression.and",{"_index":2314,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["expression.e",{"_index":2313,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["expression.not",{"_index":2308,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["expression.not(e",{"_index":2316,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["expression.or",{"_index":2315,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["expressions",{"_index":2265,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"index.html":{}}}],["extend",{"_index":496,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["extends",{"_index":8,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["extra",{"_index":1047,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["f",{"_index":1878,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["f.configure",{"_index":1889,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.default",{"_index":1907,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.deserialize(value[f.name",{"_index":1881,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.isstructuredtype",{"_index":1908,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.name",{"_index":1865,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["f.navigation",{"_index":1918,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.nullable",{"_index":1934,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.serialize((value",{"_index":1884,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.structured().defaults",{"_index":1910,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.tojsonschema(expand",{"_index":1925,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f.value",{"_index":1969,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["f]{12",{"_index":1828,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["f]{12}$/.test",{"_index":2143,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["f]{4",{"_index":1827,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{}}}],["f]{8",{"_index":1826,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{}}}],["fa",{"_index":1825,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{}}}],["factory",{"_index":1242,"title":{},"body":{"classes/ODataBatchRequest.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["factory(api",{"_index":1243,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["false",{"_index":228,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["features",{"_index":2629,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["features.split(';').foreach((o",{"_index":2696,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["fetch",{"_index":1044,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"index.html":{}}}],["fetchall",{"_index":1668,"title":{},"body":{"classes/ODataEntitySetService.html":{},"index.html":{}}}],["fetchall(options",{"_index":1692,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchmany",{"_index":1669,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchmany(options",{"_index":1694,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchnavigationproperty",{"_index":1111,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["fetchnavigationproperty(resource",{"_index":1136,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["fetchone",{"_index":1670,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchone(key",{"_index":1696,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchorcreate",{"_index":1671,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchorcreate(key",{"_index":1698,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchpolicy",{"_index":16,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":92,"title":{"classes/Field.html":{}},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/typealiases.html":{}}}],["field(odatametadata.attribute_alias",{"_index":839,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_namespace",{"_index":838,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_uri",{"_index":825,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_version",{"_index":818,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_action",{"_index":844,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotation",{"_index":829,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotations",{"_index":848,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_complex_type",{"_index":841,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_container",{"_index":845,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_type",{"_index":842,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_enum_type",{"_index":840,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_function",{"_index":843,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include",{"_index":826,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include_annotations",{"_index":828,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_term",{"_index":847,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_type_definition",{"_index":846,"title":{},"body":{"classes/Field.html":{}}}],["field.default",{"_index":1778,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.encode(v",{"_index":1902,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.isstructuredtype",{"_index":1898,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.maxlength",{"_index":1780,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.name",{"_index":1901,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.nullable",{"_index":1781,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.precision",{"_index":1786,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.referentials",{"_index":1775,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.scale",{"_index":1788,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.structured",{"_index":1899,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.type",{"_index":1773,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.validate(value",{"_index":1939,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["field.value",{"_index":1976,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["fieldnames",{"_index":864,"title":{},"body":{"classes/Field.html":{}}}],["fields",{"_index":149,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fields.reduce",{"_index":1880,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["fields.reduce((acc",{"_index":1909,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["fieldtype",{"_index":709,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtype.attribute",{"_index":819,"title":{},"body":{"classes/Field.html":{}}}],["fieldtype.tag",{"_index":827,"title":{},"body":{"classes/Field.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["files",{"_index":3020,"title":{},"body":{"license.html":{}}}],["filter",{"_index":64,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filter((f",{"_index":1931,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["filter((k",{"_index":2419,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["filter((key",{"_index":2391,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["filter((p",{"_index":1551,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["filter((r",{"_index":1432,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["filter((t",{"_index":2157,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["filter(opts",{"_index":2325,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["filtertype",{"_index":3082,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["find",{"_index":929,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["find((p",{"_index":2631,"title":{},"body":{"classes/ODataResponse.html":{}}}],["find(predicate",{"_index":2109,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["findannotation",{"_index":921,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["findannotation(predicate",{"_index":933,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["findcallablefortype",{"_index":2718,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findcallablefortype(type",{"_index":2732,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findchildparser",{"_index":1868,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["findentitysetfortype",{"_index":2719,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findentitysetfortype(type",{"_index":2735,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findenumtypefortype",{"_index":2720,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findenumtypefortype(type",{"_index":2737,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findfieldbyname",{"_index":1943,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyname(name",{"_index":1952,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue",{"_index":1944,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue(value",{"_index":1954,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findoptionsfortype",{"_index":2770,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findstructuredtypefortype",{"_index":2721,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findstructuredtypefortype(type",{"_index":2739,"title":{},"body":{"classes/ODataSchema.html":{}}}],["first",{"_index":39,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["first(undefined",{"_index":2112,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["fitness",{"_index":3051,"title":{},"body":{"license.html":{}}}],["flags",{"_index":147,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["floor",{"_index":184,"title":{},"body":{"classes/ArithmeticFunctions.html":{}}}],["floor(value",{"_index":190,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["fluent",{"_index":2893,"title":{},"body":{"index.html":{}}}],["flush",{"_index":1329,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["following",{"_index":3035,"title":{},"body":{"license.html":{}}}],["forget",{"_index":1330,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["forget(undefined",{"_index":1348,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["forkjoin",{"_index":2974,"title":{},"body":{"index.html":{}}}],["format",{"_index":71,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataQueryOptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["format(opts",{"_index":2319,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["format/v4.01/odata",{"_index":1069,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["forroot",{"_index":2062,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(configs",{"_index":2063,"title":{},"body":{"modules/ODataModule.html":{}}}],["found",{"_index":2189,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["fractionalseconds",{"_index":683,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["fractionalseconds(value",{"_index":277,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["free",{"_index":3013,"title":{},"body":{"license.html":{}}}],["friends",{"_index":2966,"title":{},"body":{"index.html":{}}}],["fromhttpresponse",{"_index":2576,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromhttpresponse(req",{"_index":2588,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson",{"_index":2577,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson(req",{"_index":2590,"title":{},"body":{"classes/ODataResponse.html":{}}}],["full",{"_index":42,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["func",{"_index":2136,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["funcs",{"_index":203,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/typealiases.html":{}}}],["function",{"_index":59,"title":{"classes/Function.html":{}},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"modules/ODataModule.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataSchema.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["function('case",{"_index":321,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('cast",{"_index":306,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('ceiling",{"_index":301,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('concat",{"_index":239,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('contains",{"_index":241,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('date",{"_index":274,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('day",{"_index":276,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('endswith",{"_index":243,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('floor",{"_index":302,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('fractionalseconds",{"_index":278,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('geo.distance",{"_index":312,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('geo.intersects",{"_index":315,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('geo.length",{"_index":317,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('hassubsequence",{"_index":261,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('hassubset",{"_index":258,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('hour",{"_index":280,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('indexof",{"_index":245,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('isof",{"_index":308,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('length",{"_index":247,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('matchespattern",{"_index":265,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('maxdatetime",{"_index":282,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('mindatetime",{"_index":284,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('minute",{"_index":286,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('month",{"_index":288,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('now",{"_index":290,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('round",{"_index":303,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('second",{"_index":292,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('startswith",{"_index":249,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('substring",{"_index":254,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('time",{"_index":294,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('tolower",{"_index":267,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('totaloffsetminutes",{"_index":296,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('totalseconds",{"_index":298,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('toupper",{"_index":269,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('trim",{"_index":271,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function('year",{"_index":300,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["function(name",{"_index":1018,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["functionimport",{"_index":760,"title":{},"body":{"classes/Field.html":{}}}],["functionimports",{"_index":497,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["functionname",{"_index":434,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["functions",{"_index":392,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlSchema.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["furnished",{"_index":3034,"title":{},"body":{"license.html":{}}}],["ge",{"_index":897,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["ge(left",{"_index":340,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["generated",{"_index":2977,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2900,"title":{},"body":{"index.html":{}}}],["geodistance",{"_index":875,"title":{},"body":{"classes/GeoFunctions.html":{}}}],["geodistance(value",{"_index":310,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["geofunctions",{"_index":309,"title":{"classes/GeoFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["geointersects",{"_index":876,"title":{},"body":{"classes/GeoFunctions.html":{}}}],["geointersects(value",{"_index":313,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["geolength",{"_index":877,"title":{},"body":{"classes/GeoFunctions.html":{}}}],["geolength(line",{"_index":316,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["get'].indexof(this._method",{"_index":2510,"title":{},"body":{"classes/ODataRequest.html":{}}}],["get(key",{"_index":112,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["get(name",{"_index":1350,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPathSegments.html":{}}}],["get(path",{"_index":2246,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["getannotations",{"_index":2601,"title":{},"body":{"classes/ODataResponse.html":{}}}],["getapi",{"_index":1142,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{}}}],["getbody",{"_index":2465,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getcontext",{"_index":2599,"title":{},"body":{"classes/ODataResponse.html":{}}}],["getcount",{"_index":1569,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getdeltalink",{"_index":1573,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["geteditlink",{"_index":1598,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getentityset",{"_index":978,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["getentitysets",{"_index":2743,"title":{},"body":{"classes/ODataSchema.html":{}}}],["getentitysetschema",{"_index":1706,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["getetag",{"_index":1591,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getfunctions",{"_index":1581,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{}}}],["getheaders",{"_index":2469,"title":{},"body":{"classes/ODataRequest.html":{}}}],["gethelper",{"_index":1059,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["getid",{"_index":1589,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediacontenttype",{"_index":1604,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediaeditlink",{"_index":1602,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediaetag",{"_index":1593,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediareadlink",{"_index":1600,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmetadataetag",{"_index":1595,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmethod",{"_index":2463,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getname",{"_index":2262,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["getnextlink",{"_index":1571,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getobjects",{"_index":862,"title":{},"body":{"classes/Field.html":{}}}],["getoptions",{"_index":2595,"title":{},"body":{"classes/ODataResponse.html":{}}}],["getparams",{"_index":2467,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getpath",{"_index":2461,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getpathwithparams",{"_index":2471,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getpayload",{"_index":2597,"title":{},"body":{"classes/ODataResponse.html":{}}}],["getproperties",{"_index":1606,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getreadlink",{"_index":1567,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{}}}],["getresponse",{"_index":1331,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["getresponse(req",{"_index":1352,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["getresponsetype",{"_index":2459,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getsingletonschema",{"_index":2800,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["getskip",{"_index":1577,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getskiptoken",{"_index":1579,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getstructuredtypeschema",{"_index":1648,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["getting",{"_index":2890,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettop",{"_index":1575,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["gettype",{"_index":980,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["geturl",{"_index":2473,"title":{},"body":{"classes/ODataRequest.html":{}}}],["geturlwithparams",{"_index":2475,"title":{},"body":{"classes/ODataRequest.html":{}}}],["given",{"_index":1454,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{}}}],["granted",{"_index":3012,"title":{},"body":{"license.html":{}}}],["group",{"_index":369,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["groupby",{"_index":3083,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["grouping",{"_index":207,"title":{"classes/Grouping.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["grouping(value",{"_index":376,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["groupingandnavigationoperators",{"_index":375,"title":{"classes/GroupingAndNavigationOperators.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["gt",{"_index":898,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["gt(left",{"_index":338,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["guid",{"_index":2142,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["haaster",{"_index":3009,"title":{},"body":{"license.html":{}}}],["hack",{"_index":2141,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["handle",{"_index":2586,"title":{},"body":{"classes/ODataResponse.html":{}}}],["handlefetch",{"_index":1332,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlefetch(req",{"_index":1354,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlemutate",{"_index":1333,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlemutate(req",{"_index":1356,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handler",{"_index":2411,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["handlerequest",{"_index":1334,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlerequest(req",{"_index":1358,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handleresponse",{"_index":1307,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["handlers",{"_index":2131,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{}}}],["has(left",{"_index":352,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["has(name",{"_index":2370,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["has(path",{"_index":2249,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["hashmap",{"_index":2280,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["haskey",{"_index":2208,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["hasparameters",{"_index":2213,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["hasreferentials",{"_index":1848,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["hasstream",{"_index":489,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["hassubsequence",{"_index":411,"title":{},"body":{"classes/CollectionFunctions.html":{}}}],["hassubsequence(s1",{"_index":260,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["hassubset",{"_index":412,"title":{},"body":{"classes/CollectionFunctions.html":{}}}],["hassubset(s1",{"_index":256,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["header",{"_index":1038,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["headers",{"_index":17,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["headers.getall(key",{"_index":1210,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["helper",{"_index":30,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["here",{"_index":2997,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":3011,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3057,"title":{},"body":{"license.html":{}}}],["hour",{"_index":684,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["hour(value",{"_index":279,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["htmlcollection",{"_index":867,"title":{},"body":{"classes/Field.html":{}}}],["http",{"_index":1057,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["http.boundarydelimiter(contenttype",{"_index":1311,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["http.boundaryend(batchboundary",{"_index":1313,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["http.mergehttpheaders",{"_index":1277,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["http.mergehttpheaders(this._headers",{"_index":2565,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.mergehttpparams",{"_index":2549,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.parseresponsestatus(chunk[0",{"_index":1321,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["http.resolveheaderkey(this.headers",{"_index":2634,"title":{},"body":{"classes/ODataResponse.html":{}}}],["http.splithttpparams",{"_index":2561,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.withouthttpparams(params",{"_index":2553,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http11",{"_index":1178,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["http://docs.oasis",{"_index":1066,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["http://json",{"_index":1913,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["httpclientmodule",{"_index":2068,"title":{},"body":{"modules/ODataModule.html":{}}}],["httperrorresponse",{"_index":1185,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitySetService.html":{}}}],["httpheaders",{"_index":1186,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["httpheaders(json.headers",{"_index":2615,"title":{},"body":{"classes/ODataResponse.html":{}}}],["httpparams",{"_index":2443,"title":{},"body":{"classes/ODataRequest.html":{}}}],["httpresponse",{"_index":1187,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["https://diegomvh.github.io/angular",{"_index":2998,"title":{},"body":{"index.html":{}}}],["https://docs.oasis",{"_index":2297,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["https://github.com/diegomvh/angular",{"_index":3001,"title":{},"body":{"index.html":{}}}],["https://json",{"_index":1810,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["https://services.odata.org/v4/(s(4m0tuxtnhcfctl4gzem3gr10))/trippinservicerw",{"_index":2914,"title":{},"body":{"index.html":{}}}],["https://www.odata.org/getting",{"_index":1233,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["id",{"_index":993,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{}}}],["ieee754",{"_index":2514,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ieee754compatible",{"_index":77,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ieee754compatible=${this.api.options.accept?.ieee754compatible",{"_index":2517,"title":{},"body":{"classes/ODataRequest.html":{}}}],["if_match_header",{"_index":2477,"title":{},"body":{"classes/ODataRequest.html":{}}}],["if_none_match_header",{"_index":2478,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ifmatch",{"_index":79,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ifnonematch",{"_index":80,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["implements",{"_index":223,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["implied",{"_index":3047,"title":{},"body":{"license.html":{}}}],["import",{"_index":28,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"index.html":{}}}],["imports",{"_index":2076,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["in(left",{"_index":354,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["includeannotations",{"_index":86,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["included",{"_index":3040,"title":{},"body":{"license.html":{}}}],["includeinservicedocument",{"_index":435,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["includes",{"_index":552,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["including",{"_index":1470,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"license.html":{}}}],["incorporates",{"_index":2984,"title":{},"body":{"index.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexof",{"_index":2829,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["indexof(field",{"_index":244,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["indexof(s.name",{"_index":2180,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["indexof(this.type",{"_index":1820,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["indicating",{"_index":1462,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["inherited",{"_index":465,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Lambda.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{}}}],["init",{"_index":2439,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.api",{"_index":2484,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.body",{"_index":2492,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.bodyqueryoptions",{"_index":2498,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.etag",{"_index":2505,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.fetchpolicy",{"_index":2496,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.headers",{"_index":2542,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.method",{"_index":2481,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.observe",{"_index":2488,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.params",{"_index":2551,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.reportprogress",{"_index":2486,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.resource",{"_index":2483,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.responsetype",{"_index":2490,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.withcredentials",{"_index":2494,"title":{},"body":{"classes/ODataRequest.html":{}}}],["inject",{"_index":2916,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":2777,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"injectables/ODataServiceFactory.html":{}}}],["injectables",{"_index":2778,"title":{},"body":{"injectables/ODataServiceFactory.html":{},"overview.html":{}}}],["inside",{"_index":930,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["install",{"_index":2910,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2907,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":949,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["instead",{"_index":1488,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["int",{"_index":131,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["integer",{"_index":1838,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"overview.html":{}}}],["invalid",{"_index":3109,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["isbatch",{"_index":2432,"title":{},"body":{"classes/ODataRequest.html":{}}}],["isbound",{"_index":420,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscomposable",{"_index":432,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["isedmtype",{"_index":1533,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["isenumtype",{"_index":1535,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["isexpired",{"_index":1335,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isexpired(entry",{"_index":1360,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isfetch",{"_index":2433,"title":{},"body":{"classes/ODataRequest.html":{}}}],["isflags",{"_index":526,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["iskey",{"_index":1845,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["ismutate",{"_index":2434,"title":{},"body":{"classes/ODataRequest.html":{}}}],["isnamespaceof",{"_index":2722,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnamespaceof(type",{"_index":2741,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isof",{"_index":2847,"title":{},"body":{"classes/TypeFunctions.html":{}}}],["isof(value",{"_index":307,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["isstructuredtype",{"_index":1538,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["istypeof",{"_index":1438,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["istypeof(type",{"_index":1460,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["items",{"_index":1843,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["john",{"_index":2971,"title":{},"body":{"index.html":{}}}],["john@example.com\").or(e().eq(\"username",{"_index":2970,"title":{},"body":{"index.html":{}}}],["join",{"_index":330,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["json",{"_index":1068,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"index.html":{}}}],["json.body",{"_index":2614,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.key",{"_index":2170,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["json.parameters",{"_index":2172,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["json.parse(this.storage.getitem(this.name",{"_index":2052,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["json.status",{"_index":2616,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.statustext",{"_index":2617,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.stringify(array.from(this.entries.entries",{"_index":2051,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["json.type",{"_index":2169,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["json.url",{"_index":2618,"title":{},"body":{"classes/ODataResponse.html":{}}}],["jsonschemacustom",{"_index":1760,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpand",{"_index":1762,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaoptions",{"_index":1763,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemarequired",{"_index":1764,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaselect",{"_index":1758,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1409,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{}}}],["k.name",{"_index":1847,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["k.name.split",{"_index":1894,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["k.startswith(key",{"_index":1410,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["k.trim",{"_index":2698,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["keep",{"_index":2360,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(...names",{"_index":2417,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(names",{"_index":2372,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["key",{"_index":152,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["key(value",{"_index":2206,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["key[k.alias",{"_index":1900,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["keyof",{"_index":168,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["keys",{"_index":166,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["keys(values",{"_index":2115,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["key}=${value",{"_index":2167,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{}}}],["kind",{"_index":3045,"title":{},"body":{"license.html":{}}}],["lambda",{"_index":378,"title":{"classes/Lambda.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["lambda('all",{"_index":386,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["lambda('any",{"_index":384,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["lambdaoperators",{"_index":382,"title":{"classes/LambdaOperators.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["last",{"_index":2101,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["last(undefined",{"_index":2117,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["lastread",{"_index":1377,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["le",{"_index":899,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["le(left",{"_index":344,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["left",{"_index":325,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["left.split('/').pop().tolowercase",{"_index":380,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["left}/${this.op}(${alias}:${alias}/${render(right",{"_index":381,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["length",{"_index":252,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["length(value",{"_index":246,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["liability",{"_index":3061,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3058,"title":{},"body":{"license.html":{}}}],["library",{"_index":2903,"title":{},"body":{"index.html":{}}}],["license",{"_index":3003,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":3023,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3048,"title":{},"body":{"license.html":{}}}],["line",{"_index":318,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["lines",{"_index":1314,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["link",{"_index":1065,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataQueryOptionHandler.html":{}}}],["literal",{"_index":22,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/Function.html":{},"classes/Grouping.html":{},"classes/Lambda.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":2958,"title":{},"body":{"index.html":{}}}],["location",{"_index":2638,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"index.html":{}}}],["location_header",{"_index":2605,"title":{},"body":{"classes/ODataResponse.html":{}}}],["logicaloperators",{"_index":333,"title":{"classes/LogicalOperators.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["long_description",{"_index":1755,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["looking",{"_index":1618,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["lt",{"_index":900,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["lt(left",{"_index":342,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["m",{"_index":1640,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["mainly",{"_index":2982,"title":{},"body":{"index.html":{}}}],["map",{"_index":945,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"interfaces/ResponseJson.html":{}}}],["map(([key",{"_index":2166,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{}}}],["map((f",{"_index":1924,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["map((key",{"_index":1209,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["map((name",{"_index":2620,"title":{},"body":{"classes/ODataResponse.html":{}}}],["map((s",{"_index":2155,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["map((v",{"_index":329,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["mapfields",{"_index":1945,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapfields(mapper",{"_index":1956,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapped",{"_index":1960,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapper",{"_index":1958,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["maps",{"_index":1959,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["match",{"_index":937,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["match(/[&?]{1}\\$skip=(\\d",{"_index":1030,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["match(/[&?]{1}\\$skiptoken=([\\d\\w\\s",{"_index":1031,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["match(/[&?]{1}\\$top=(\\d",{"_index":1028,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["match[1",{"_index":1032,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["matches",{"_index":938,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["matchespattern",{"_index":2839,"title":{},"body":{"classes/StringFunctions.html":{}}}],["matchespattern(value",{"_index":263,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["matching",{"_index":177,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":2887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["max_age",{"_index":2692,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["maxage",{"_index":90,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxdatetime",{"_index":685,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["maxdatetime(value",{"_index":281,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["maxlength",{"_index":151,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxpagesize",{"_index":81,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["meant",{"_index":1621,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["mediacontenttype",{"_index":1008,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["mediaeditlink",{"_index":1006,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["mediaetag",{"_index":996,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["mediareadlink",{"_index":1004,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["member",{"_index":150,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["members",{"_index":148,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["members.some((member",{"_index":1996,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["merchantability",{"_index":3050,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3025,"title":{},"body":{"license.html":{}}}],["message",{"_index":1213,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["metadata",{"_index":51,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["metadataetag",{"_index":998,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["method",{"_index":986,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"injectables/ODataServiceFactory.html":{}}}],["methods",{"_index":182,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["microsoft.odata.sampleservice.models.trippin.airport",{"_index":2933,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.person",{"_index":2963,"title":{},"body":{"index.html":{}}}],["min",{"_index":2886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mindatetime",{"_index":686,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["mindatetime(value",{"_index":283,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["minimal",{"_index":41,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["minute",{"_index":687,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["minute(value",{"_index":285,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["miscellaneous",{"_index":2866,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mismatch",{"_index":1997,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["mit",{"_index":3004,"title":{},"body":{"license.html":{}}}],["mod",{"_index":397,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["mod(left",{"_index":365,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["model",{"_index":164,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["model.attach(this.entities",{"_index":1716,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["model.attach(this.entities().entity",{"_index":1715,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["model.attach(this.entity",{"_index":2803,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["modelfieldoptions",{"_index":3085,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["modeloptions",{"_index":3086,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["models/collection",{"_index":1709,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["models/model",{"_index":1651,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["modify",{"_index":1672,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"license.html":{}}}],["modify(key",{"_index":1700,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["module",{"_index":2056,"title":{"modules/ODataModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2058,"title":{"modules.html":{}},"body":{"modules/ODataModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":2065,"title":{},"body":{"modules/ODataModule.html":{}}}],["month",{"_index":688,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["month(value",{"_index":287,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["mul",{"_index":398,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["mul(left",{"_index":361,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["multipart_mixed",{"_index":1179,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary",{"_index":1180,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary}${changesetboundary",{"_index":1297,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["n",{"_index":888,"title":{},"body":{"classes/GroupingAndNavigationOperators.html":{},"classes/ODataQueryOptionHandler.html":{}}}],["name",{"_index":118,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"index.html":{}}}],["namednodemap",{"_index":855,"title":{},"body":{"classes/Field.html":{}}}],["names",{"_index":1346,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{}}}],["names.foreach((name",{"_index":2415,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["names.indexof(k",{"_index":2420,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["names.indexof(type",{"_index":1550,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["names.join",{"_index":1987,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["names.join(cache_key_separator",{"_index":1395,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["names.push(`${this.alias}.${this.name",{"_index":1549,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["names.push(`${this.schema.alias}.${this.name",{"_index":1664,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["namespace",{"_index":133,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["namespace/alias",{"_index":1471,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["navigation",{"_index":155,"title":{"classes/Navigation.html":{}},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["navigation(field",{"_index":377,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["navigationproperties",{"_index":473,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["navigationproperty",{"_index":55,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataPathSegmentsHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["navigationpropertybinding",{"_index":510,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["navigationpropertybindings",{"_index":648,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["ne",{"_index":901,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["ne(left",{"_index":336,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["neg",{"_index":399,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["neg(value",{"_index":367,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["nestedexpandoptions",{"_index":3087,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["network",{"_index":40,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":165,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"index.html":{}}}],["newline",{"_index":1181,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["newline_regexp",{"_index":1182,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["nextlink",{"_index":1023,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["ngmodule",{"_index":2066,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["nicer",{"_index":1617,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["none",{"_index":43,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["none_parser",{"_index":107,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["noninfringement",{"_index":3054,"title":{},"body":{"license.html":{}}}],["normalize",{"_index":216,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["normalizevalue",{"_index":194,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["normalizevalue(value",{"_index":222,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["not(value",{"_index":350,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["notice",{"_index":3038,"title":{},"body":{"license.html":{}}}],["now",{"_index":289,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["npm",{"_index":2911,"title":{},"body":{"index.html":{}}}],["null",{"_index":217,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["nullable",{"_index":154,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["number",{"_index":82,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParserOptions.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/typealiases.html":{}}}],["number(directive.split('=')[1",{"_index":2711,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["number(match[1",{"_index":1029,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["number.isnan(maxage",{"_index":2712,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["o",{"_index":2236,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{}}}],["o.split",{"_index":2697,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["obj",{"_index":2284,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["object",{"_index":220,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["object.assign",{"_index":1923,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["object.assign(acc",{"_index":1929,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{}}}],["object.assign(acc.params",{"_index":2150,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["object.assign(customparams",{"_index":2548,"title":{},"body":{"classes/ODataRequest.html":{}}}],["object.assign(this",{"_index":942,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["object.assign(this.etag",{"_index":1101,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["object.create(null",{"_index":215,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["object.defineproperty",{"_index":212,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["object.entries",{"_index":1860,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["object.entries(config.fields).map",{"_index":1979,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["object.entries(config.parameters",{"_index":1546,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.entries(params",{"_index":2165,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{}}}],["object.getownpropertydescriptor(basector.prototype",{"_index":214,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["object.getownpropertynames(basector.prototype).foreach((name",{"_index":211,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["object.keys(this.options",{"_index":2418,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["object.keys(this.options).reduce((acc",{"_index":2396,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["objects",{"_index":865,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{}}}],["objects.clone(this._segments",{"_index":2173,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["objects.clone(value",{"_index":2408,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["objects.get(obj",{"_index":2290,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["objects.has(obj",{"_index":2294,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["objects.merge(obj",{"_index":2295,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["objects.resolvekey(key",{"_index":1904,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["objects.set(obj",{"_index":2288,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["objects.unset(obj",{"_index":2291,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["obs",{"_index":1271,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["observable",{"_index":31,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["observe",{"_index":1267,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["obtaining",{"_index":3016,"title":{},"body":{"license.html":{}}}],["odata",{"_index":1039,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataParserOptions.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"index.html":{}}}],["odata.include",{"_index":2533,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata.mergecallableparameters(config.callables",{"_index":2755,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata.metadata",{"_index":2699,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata.streaming",{"_index":2701,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/docs",{"_index":2999,"title":{},"body":{"index.html":{}}}],["odata/src/lib/cache/cache.ts",{"_index":1324,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["odata/src/lib/cache/cache.ts:108",{"_index":1347,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:113",{"_index":1361,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:117",{"_index":1359,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:128",{"_index":1355,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:15",{"_index":1340,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:16",{"_index":1339,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:163",{"_index":1357,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:23",{"_index":1353,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:24",{"_index":1366,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:26",{"_index":1368,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:38",{"_index":1370,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:50",{"_index":1342,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:62",{"_index":1345,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:66",{"_index":1364,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:81",{"_index":1351,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:89",{"_index":1349,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/memory.ts",{"_index":2012,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:5",{"_index":2013,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/storage.ts",{"_index":2036,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["odata/src/lib/cache/storage.ts:13",{"_index":2039,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:14",{"_index":2038,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:32",{"_index":2043,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:39",{"_index":2042,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/helper.ts",{"_index":3111,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/models/options.ts",{"_index":2878,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/module.ts",{"_index":2059,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/module.ts:19",{"_index":2064,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/options.ts",{"_index":1034,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["odata/src/lib/options.ts:104",{"_index":1060,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:110",{"_index":2097,"title":{},"body":{"classes/ODataParserOptions.html":{}}}],["odata/src/lib/options.ts:111",{"_index":2096,"title":{},"body":{"classes/ODataParserOptions.html":{}}}],["odata/src/lib/options.ts:118",{"_index":2098,"title":{},"body":{"classes/ODataParserOptions.html":{}}}],["odata/src/lib/options.ts:22",{"_index":1055,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:26",{"_index":1051,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:30",{"_index":1052,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:34",{"_index":1043,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:38",{"_index":1049,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:42",{"_index":1046,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:46",{"_index":1056,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:50",{"_index":1040,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:55",{"_index":1036,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:61",{"_index":1042,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:71",{"_index":1050,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:88",{"_index":1035,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/resources/path/handlers.ts",{"_index":2191,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:12",{"_index":2824,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:16",{"_index":2823,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:20",{"_index":2821,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:24",{"_index":2819,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:27",{"_index":2817,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:30",{"_index":2822,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:34",{"_index":2820,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:37",{"_index":2818,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:42",{"_index":2192,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:44",{"_index":2194,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:47",{"_index":2199,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:50",{"_index":2193,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:53",{"_index":2195,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:56",{"_index":2196,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:59",{"_index":2198,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:62",{"_index":2197,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:7",{"_index":2816,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/handlers.ts:9",{"_index":2825,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["odata/src/lib/resources/path/segments.ts",{"_index":2099,"title":{},"body":{"classes/ODataPathSegments.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/path/segments.ts:101",{"_index":2123,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:114",{"_index":2108,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:119",{"_index":2111,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:124",{"_index":2122,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:138",{"_index":2113,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:143",{"_index":2118,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:148",{"_index":2107,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:154",{"_index":2114,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:50",{"_index":2105,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:56",{"_index":2120,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:69",{"_index":2126,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:75",{"_index":2116,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/path/segments.ts:90",{"_index":2124,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odata/src/lib/resources/query/builder.ts",{"_index":2883,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query/expressions.ts",{"_index":2877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/query/handlers.ts",{"_index":2226,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:14",{"_index":2263,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:18",{"_index":2257,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:22",{"_index":2245,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:27",{"_index":2261,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:33",{"_index":2237,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:39",{"_index":2252,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:43",{"_index":2254,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:49",{"_index":2243,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:55",{"_index":2239,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:68",{"_index":2256,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:73",{"_index":2248,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:78",{"_index":2259,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:8",{"_index":2235,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:88",{"_index":2250,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:93",{"_index":2241,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/handlers.ts:99",{"_index":2244,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odata/src/lib/resources/query/options.ts",{"_index":2359,"title":{},"body":{"classes/ODataQueryOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query/options.ts:102",{"_index":2366,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:114",{"_index":2369,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:119",{"_index":2375,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:125",{"_index":2371,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:129",{"_index":2378,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:133",{"_index":2373,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:140",{"_index":2365,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:32",{"_index":2364,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:39",{"_index":2376,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:66",{"_index":2381,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:77",{"_index":2379,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/options.ts:87",{"_index":2380,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odata/src/lib/resources/query/syntax.ts",{"_index":181,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query/syntax.ts:100",{"_index":2832,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:104",{"_index":2833,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:108",{"_index":2834,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:112",{"_index":2835,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:116",{"_index":2836,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:12",{"_index":2814,"title":{},"body":{"interfaces/Renderable.html":{}}}],["odata/src/lib/resources/query/syntax.ts:120",{"_index":2837,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:124",{"_index":2838,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:13",{"_index":2813,"title":{},"body":{"interfaces/Renderable.html":{}}}],["odata/src/lib/resources/query/syntax.ts:134",{"_index":414,"title":{},"body":{"classes/CollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:137",{"_index":413,"title":{},"body":{"classes/CollectionFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:143",{"_index":2842,"title":{},"body":{"classes/StringFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:146",{"_index":2843,"title":{},"body":{"classes/StringFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:149",{"_index":2844,"title":{},"body":{"classes/StringFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:152",{"_index":2845,"title":{},"body":{"classes/StringFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:158",{"_index":694,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:161",{"_index":695,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:164",{"_index":696,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:167",{"_index":697,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:170",{"_index":698,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:173",{"_index":699,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:176",{"_index":700,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:179",{"_index":701,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:182",{"_index":702,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:185",{"_index":703,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:188",{"_index":704,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:191",{"_index":705,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:194",{"_index":706,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:197",{"_index":707,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:203",{"_index":188,"title":{},"body":{"classes/ArithmeticFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:206",{"_index":191,"title":{},"body":{"classes/ArithmeticFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:209",{"_index":193,"title":{},"body":{"classes/ArithmeticFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:215",{"_index":2848,"title":{},"body":{"classes/TypeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:219",{"_index":2849,"title":{},"body":{"classes/TypeFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:225",{"_index":878,"title":{},"body":{"classes/GeoFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:228",{"_index":879,"title":{},"body":{"classes/GeoFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:231",{"_index":880,"title":{},"body":{"classes/GeoFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:237",{"_index":416,"title":{},"body":{"classes/ConditionalFunctions.html":{}}}],["odata/src/lib/resources/query/syntax.ts:242",{"_index":2805,"title":{},"body":{"classes/Operator.html":{}}}],["odata/src/lib/resources/query/syntax.ts:249",{"_index":2808,"title":{},"body":{"classes/Operator.html":{}}}],["odata/src/lib/resources/query/syntax.ts:253",{"_index":2807,"title":{},"body":{"classes/Operator.html":{}}}],["odata/src/lib/resources/query/syntax.ts:261",{"_index":2806,"title":{},"body":{"classes/Operator.html":{}}}],["odata/src/lib/resources/query/syntax.ts:294",{"_index":903,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:297",{"_index":910,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:300",{"_index":905,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:303",{"_index":904,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:306",{"_index":909,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:309",{"_index":908,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:312",{"_index":902,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:315",{"_index":912,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:318",{"_index":911,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:321",{"_index":906,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:324",{"_index":907,"title":{},"body":{"classes/LogicalOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:330",{"_index":401,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:333",{"_index":407,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:336",{"_index":405,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:339",{"_index":403,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:342",{"_index":404,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:345",{"_index":406,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:350",{"_index":882,"title":{},"body":{"classes/Grouping.html":{}}}],["odata/src/lib/resources/query/syntax.ts:353",{"_index":885,"title":{},"body":{"classes/Grouping.html":{}}}],["odata/src/lib/resources/query/syntax.ts:357",{"_index":884,"title":{},"body":{"classes/Grouping.html":{}}}],["odata/src/lib/resources/query/syntax.ts:363",{"_index":883,"title":{},"body":{"classes/Grouping.html":{}}}],["odata/src/lib/resources/query/syntax.ts:374",{"_index":914,"title":{},"body":{"classes/Navigation.html":{}}}],["odata/src/lib/resources/query/syntax.ts:377",{"_index":917,"title":{},"body":{"classes/Navigation.html":{}}}],["odata/src/lib/resources/query/syntax.ts:381",{"_index":916,"title":{},"body":{"classes/Navigation.html":{}}}],["odata/src/lib/resources/query/syntax.ts:388",{"_index":915,"title":{},"body":{"classes/Navigation.html":{}}}],["odata/src/lib/resources/query/syntax.ts:400",{"_index":886,"title":{},"body":{"classes/GroupingAndNavigationOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:404",{"_index":887,"title":{},"body":{"classes/GroupingAndNavigationOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:409",{"_index":890,"title":{},"body":{"classes/Lambda.html":{}}}],["odata/src/lib/resources/query/syntax.ts:418",{"_index":893,"title":{},"body":{"classes/Lambda.html":{}}}],["odata/src/lib/resources/query/syntax.ts:441",{"_index":895,"title":{},"body":{"classes/LambdaOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:445",{"_index":894,"title":{},"body":{"classes/LambdaOperators.html":{}}}],["odata/src/lib/resources/query/syntax.ts:5",{"_index":2812,"title":{},"body":{"interfaces/Renderable.html":{}}}],["odata/src/lib/resources/query/syntax.ts:59",{"_index":870,"title":{},"body":{"classes/Function.html":{}}}],["odata/src/lib/resources/query/syntax.ts:67",{"_index":874,"title":{},"body":{"classes/Function.html":{}}}],["odata/src/lib/resources/query/syntax.ts:71",{"_index":873,"title":{},"body":{"classes/Function.html":{}}}],["odata/src/lib/resources/query/syntax.ts:79",{"_index":872,"title":{},"body":{"classes/Function.html":{}}}],["odata/src/lib/resources/request.ts",{"_index":2423,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:18",{"_index":2449,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:19",{"_index":2452,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:20",{"_index":2453,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:21",{"_index":2455,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:212",{"_index":2460,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:22",{"_index":2450,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:221",{"_index":2462,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:225",{"_index":2464,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:229",{"_index":2466,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:23",{"_index":2451,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:241",{"_index":2468,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:253",{"_index":2470,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:261",{"_index":2472,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:269",{"_index":2474,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:273",{"_index":2476,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:277",{"_index":2456,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:281",{"_index":2457,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:285",{"_index":2458,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:29",{"_index":2454,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:30",{"_index":2448,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:39",{"_index":2442,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:40",{"_index":2440,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:41",{"_index":2441,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:42",{"_index":2444,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:43",{"_index":2445,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:44",{"_index":2438,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/resource.ts",{"_index":3106,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/responses/annotations.ts",{"_index":965,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:100",{"_index":1588,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:104",{"_index":1583,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:105",{"_index":1608,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:112",{"_index":1587,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:12",{"_index":974,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:130",{"_index":1568,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:134",{"_index":1570,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:138",{"_index":1572,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:142",{"_index":1574,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:146",{"_index":1576,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:151",{"_index":1578,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:156",{"_index":1580,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:16",{"_index":979,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:161",{"_index":1561,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:162",{"_index":1582,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:168",{"_index":1565,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:20",{"_index":981,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:25",{"_index":975,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:26",{"_index":977,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:5",{"_index":971,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:56",{"_index":1590,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:60",{"_index":1592,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:64",{"_index":1594,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:68",{"_index":1596,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:7",{"_index":972,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:72",{"_index":1597,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:76",{"_index":1599,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:80",{"_index":1601,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:84",{"_index":1603,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:88",{"_index":1605,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:92",{"_index":1584,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:93",{"_index":1607,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/csdl/csdl",{"_index":418,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["odata/src/lib/resources/responses/metadata.ts",{"_index":708,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:47",{"_index":710,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:48",{"_index":711,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/options.ts",{"_index":2669,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:19",{"_index":2681,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:20",{"_index":2679,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:22",{"_index":2678,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:23",{"_index":2680,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:24",{"_index":2676,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:26",{"_index":2677,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:28",{"_index":2675,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:29",{"_index":2674,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:36",{"_index":2691,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:40",{"_index":2682,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:44",{"_index":2686,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:61",{"_index":2690,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:67",{"_index":2688,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:72",{"_index":2684,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/response.ts",{"_index":2571,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:125",{"_index":2583,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:126",{"_index":2598,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:136",{"_index":2580,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:137",{"_index":2600,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:146",{"_index":2579,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:147",{"_index":2602,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:169",{"_index":2587,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:193",{"_index":2585,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:212",{"_index":2592,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:236",{"_index":2594,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:29",{"_index":2584,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:30",{"_index":2578,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:46",{"_index":2589,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:58",{"_index":2591,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:79",{"_index":2593,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:92",{"_index":2582,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:93",{"_index":2596,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/types.ts",{"_index":3112,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/batch.ts",{"_index":1154,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:137",{"_index":1164,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:39",{"_index":1160,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:40",{"_index":1161,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:44",{"_index":1168,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:70",{"_index":1167,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/options.ts",{"_index":3113,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/schema/base.ts",{"_index":919,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/base.ts:18",{"_index":923,"title":{},"body":{"classes/ODataAnnotatable.html":{}}}],["odata/src/lib/schema/base.ts:30",{"_index":935,"title":{},"body":{"classes/ODataAnnotatable.html":{}}}],["odata/src/lib/schema/base.ts:39",{"_index":928,"title":{},"body":{"classes/ODataAnnotatable.html":{}}}],["odata/src/lib/schema/base.ts:4",{"_index":963,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/base.ts:5",{"_index":962,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/base.ts:6",{"_index":959,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/base.ts:7",{"_index":960,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/base.ts:8",{"_index":961,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/base.ts:9",{"_index":958,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/callable.ts",{"_index":1436,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:10",{"_index":1441,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:103",{"_index":1447,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:11",{"_index":1442,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:12",{"_index":1440,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:27",{"_index":1463,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:44",{"_index":1469,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:53",{"_index":1461,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:57",{"_index":1472,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:61",{"_index":1450,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:7",{"_index":1446,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:75",{"_index":1452,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:8",{"_index":1444,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:85",{"_index":1465,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:9",{"_index":1443,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:95",{"_index":1457,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/entity",{"_index":1610,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{}}}],["odata/src/lib/schema/enum",{"_index":1942,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odata/src/lib/schema/parsers/callable.ts",{"_index":1499,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:107",{"_index":1513,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:114",{"_index":1510,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:123",{"_index":1515,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:141",{"_index":1512,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:158",{"_index":1509,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:16",{"_index":2084,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:17",{"_index":2087,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:171",{"_index":1508,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:18",{"_index":2086,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:19",{"_index":2083,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:20",{"_index":2085,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:21",{"_index":2082,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:31",{"_index":2094,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:42",{"_index":2089,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:52",{"_index":2088,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:63",{"_index":2091,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:67",{"_index":2092,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:71",{"_index":2090,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:76",{"_index":2093,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:80",{"_index":2095,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:88",{"_index":1502,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:89",{"_index":1503,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:90",{"_index":1501,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:91",{"_index":1507,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:92",{"_index":1506,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:93",{"_index":1505,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/callable.ts:94",{"_index":1500,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/schema/parsers/enum",{"_index":1971,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odata/src/lib/schema/parsers/structured",{"_index":1750,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/schema/schema.ts",{"_index":2717,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:13",{"_index":2725,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:14",{"_index":2730,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:15",{"_index":2724,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:16",{"_index":2729,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:17",{"_index":2728,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:18",{"_index":2726,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:19",{"_index":2723,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:40",{"_index":2742,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:47",{"_index":2744,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:55",{"_index":2738,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:61",{"_index":2740,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:67",{"_index":2734,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:75",{"_index":2736,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:80",{"_index":2731,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/services/base.ts",{"_index":1108,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:104",{"_index":1140,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:109",{"_index":1141,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:14",{"_index":1116,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:21",{"_index":1143,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:25",{"_index":1131,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:31",{"_index":1132,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:37",{"_index":1133,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:43",{"_index":1134,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:49",{"_index":1135,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:62",{"_index":1123,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:68",{"_index":1125,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:74",{"_index":1126,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:80",{"_index":1127,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:86",{"_index":1128,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:99",{"_index":1138,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/entity",{"_index":1666,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["odata/src/lib/services/entity.ts",{"_index":1636,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:13",{"_index":1649,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:7",{"_index":1644,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:8",{"_index":1641,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/factory.ts",{"_index":2779,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:15",{"_index":2782,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:30",{"_index":2785,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:7",{"_index":2780,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/singleton.ts",{"_index":2789,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:35",{"_index":2801,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:45",{"_index":2799,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:59",{"_index":2797,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/types.ts",{"_index":7,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts:104",{"_index":2810,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:114",{"_index":410,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/src/lib/types.ts:115",{"_index":409,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/src/lib/types.ts:94",{"_index":2809,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:99",{"_index":2811,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/utils/durations.ts",{"_index":3105,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/wiki",{"_index":3002,"title":{},"body":{"index.html":{}}}],["odata_configurations",{"_index":2069,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata_entityid_headers",{"_index":2607,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata_etag",{"_index":2918,"title":{},"body":{"index.html":{}}}],["odata_version",{"_index":1183,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata_version_headers",{"_index":2603,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataactionresource",{"_index":1120,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odataannotatable",{"_index":918,"title":{"classes/ODataAnnotatable.html":{}},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["odataannotatable:18",{"_index":1613,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["odataannotatable:30",{"_index":1627,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["odataannotatable:39",{"_index":1626,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["odataannotation",{"_index":925,"title":{"classes/ODataAnnotation.html":{}},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{}}}],["odataannotation(annot",{"_index":946,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["odataannotations",{"_index":964,"title":{"classes/ODataAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:118",{"_index":1563,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odataannotations:12",{"_index":1566,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:126",{"_index":1564,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odataannotations:30",{"_index":2223,"title":{},"body":{"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:38",{"_index":2224,"title":{},"body":{"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:44",{"_index":1585,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odataannotations:52",{"_index":1586,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odataannotations:7",{"_index":1562,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataapi",{"_index":1190,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{}}}],["odataapioptions",{"_index":1033,"title":{"classes/ODataApiOptions.html":{}},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["odatabaseservice",{"_index":1107,"title":{"classes/ODataBaseService.html":{}},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odatabaseservice:25",{"_index":1646,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odatabaseservice:62",{"_index":1645,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odatabaseservice:99",{"_index":1647,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odatabatchrequest",{"_index":1153,"title":{"classes/ODataBatchRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchrequest(req",{"_index":1269,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource",{"_index":1236,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["odatabatchresource(api",{"_index":1246,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(this.api",{"_index":1247,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource.buildbody",{"_index":1284,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource.buildbody(bound",{"_index":1279,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource.handleresponse(requests",{"_index":1283,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatacache",{"_index":1323,"title":{"classes/ODataCache.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["odatacache:10",{"_index":2017,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odatacache:108",{"_index":2020,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odatacache:113",{"_index":2026,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:117",{"_index":2025,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:128",{"_index":2023,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:15",{"_index":2015,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:16",{"_index":2014,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:163",{"_index":2024,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:20",{"_index":2016,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odatacache:26",{"_index":2028,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:38",{"_index":2029,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:45",{"_index":2040,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odatacache:50",{"_index":2018,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:60",{"_index":2041,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odatacache:62",{"_index":2019,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:66",{"_index":2027,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:81",{"_index":2022,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:89",{"_index":2021,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacacheentry",{"_index":1343,"title":{"interfaces/ODataCacheEntry.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["odatacallable",{"_index":1435,"title":{"classes/ODataCallable.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataSchema.html":{}}}],["odatacallable(config",{"_index":2756,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatacallableparser",{"_index":1445,"title":{"classes/ODataCallableParser.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataclient",{"_index":1114,"title":{},"body":{"classes/ODataBaseService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatacollection",{"_index":1708,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["odatacollectionresource",{"_index":3088,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatacontext",{"_index":970,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentities",{"_index":1144,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitiesannotations",{"_index":1020,"title":{"classes/ODataEntitiesAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["odataentitiesoptions",{"_index":3090,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odataentity",{"_index":1145,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"miscellaneous/typealiases.html":{}}}],["odataentityannotations",{"_index":991,"title":{"classes/ODataEntityAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["odataentitycontainer",{"_index":1609,"title":{"classes/ODataEntityContainer.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["odataentitycontainer(config",{"_index":2759,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataentityoptions",{"_index":3091,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odataentityresource",{"_index":1691,"title":{},"body":{"classes/ODataEntitySetService.html":{},"miscellaneous/typealiases.html":{}}}],["odataentityservice",{"_index":1635,"title":{"classes/ODataEntityService.html":{}},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odataentityservice:20",{"_index":2794,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odataentityservice:28",{"_index":2793,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odataentityservice:29",{"_index":1690,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["odataentityservice:37",{"_index":1677,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["odataentityset",{"_index":1612,"title":{"classes/ODataEntitySet.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataSchema.html":{}}}],["odataentityset(config",{"_index":1632,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["odataentitysetresource",{"_index":1689,"title":{},"body":{"classes/ODataEntitySetService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitysetservice",{"_index":1665,"title":{"classes/ODataEntitySetService.html":{}},"body":{"classes/ODataEntitySetService.html":{},"injectables/ODataServiceFactory.html":{}}}],["odataentitytypekey",{"_index":1749,"title":{"classes/ODataEntityTypeKey.html":{}},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["odataentitytypekey(key",{"_index":1858,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["odataenumtype",{"_index":1941,"title":{"classes/ODataEnumType.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{}}}],["odataenumtype(config",{"_index":2750,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataenumtypefieldparser",{"_index":1951,"title":{"classes/ODataEnumTypeFieldParser.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odataenumtypefieldparser(name",{"_index":1980,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odataenumtypeparser",{"_index":1517,"title":{"classes/ODataEnumTypeParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["odatafunctionresource",{"_index":1130,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odatafunctions",{"_index":390,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["odatahelper",{"_index":1064,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatahelper[this.version",{"_index":1105,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatainmemorycache",{"_index":2011,"title":{"classes/ODataInMemoryCache.html":{}},"body":{"classes/ODataInMemoryCache.html":{}}}],["odatainstoragecache",{"_index":2035,"title":{"classes/ODataInStorageCache.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["odatametadata",{"_index":720,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_data_services",{"_index":833,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_reference",{"_index":824,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_schema",{"_index":837,"title":{},"body":{"classes/Field.html":{}}}],["odatametadatatype",{"_index":26,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatamodel",{"_index":1650,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odatamodelentry",{"_index":3092,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodeleventtype",{"_index":3093,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodelfieldoptions",{"_index":3094,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodelrelation",{"_index":3095,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodelresource",{"_index":3096,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodelstate",{"_index":2871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["odatamodule",{"_index":2057,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"modules.html":{}}}],["odatamodule.forroot",{"_index":2913,"title":{},"body":{"index.html":{}}}],["odatamodule.forroot(trippinconfig",{"_index":2980,"title":{},"body":{"index.html":{}}}],["odatanavigationpropertyresource",{"_index":1137,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"miscellaneous/typealiases.html":{}}}],["odatanoneoptions",{"_index":3097,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odataoperators",{"_index":387,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["odataoptions",{"_index":1191,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"miscellaneous/typealiases.html":{}}}],["odataparameterparser",{"_index":1504,"title":{"classes/ODataParameterParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataparameterparser(name",{"_index":1547,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataparseroptions",{"_index":1106,"title":{"classes/ODataParserOptions.html":{}},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataReferential.html":{}}}],["odataparseroptions(options",{"_index":1526,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["odatapathsegments",{"_index":1192,"title":{"classes/ODataPathSegments.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["odatapathsegments(segments",{"_index":2174,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["odatapathsegmentshandler",{"_index":2190,"title":{"classes/ODataPathSegmentsHandler.html":{}},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["odataproperty",{"_index":1146,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odatapropertyannotations",{"_index":987,"title":{"classes/ODataPropertyAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["odatapropertyoptions",{"_index":3098,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatapropertyresource",{"_index":3107,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odataqueryarguments",{"_index":2266,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odataqueryargumentsoptions",{"_index":1122,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"miscellaneous/typealiases.html":{}}}],["odataqueryoptionhandler",{"_index":2225,"title":{"classes/ODataQueryOptionHandler.html":{}},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{}}}],["odataqueryoptionhandler(this.options",{"_index":2412,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odataqueryoptions",{"_index":2267,"title":{"classes/ODataQueryOptions.html":{}},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{}}}],["odataqueryoptions(options",{"_index":2409,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["odataqueryoptionshandler",{"_index":2296,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["odatareferential",{"_index":1767,"title":{"classes/ODataReferential.html":{}},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["odatareferential(referential",{"_index":1776,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["odatarequest",{"_index":1159,"title":{"classes/ODataRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/ResponseJson.html":{}}}],["odataresource",{"_index":1193,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["odataresponse",{"_index":1194,"title":{"classes/ODataResponse.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/ResponseJson.html":{}}}],["odataresponse.fromjson(req",{"_index":2055,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["odataresponseoptions",{"_index":2581,"title":{"classes/ODataResponseOptions.html":{}},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this",{"_index":2695,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this.api.options",{"_index":2626,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataschema",{"_index":1439,"title":{"classes/ODataSchema.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{}}}],["odatasegment",{"_index":2104,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["odataservicefactory",{"_index":2061,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatasettings",{"_index":2072,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasettings(...configs",{"_index":2075,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasingletonresource",{"_index":2795,"title":{},"body":{"classes/ODataSingletonService.html":{},"miscellaneous/typealiases.html":{}}}],["odatasingletonservice",{"_index":2787,"title":{"classes/ODataSingletonService.html":{}},"body":{"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["odatastructuredtype",{"_index":2727,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatastructuredtype(config",{"_index":2753,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatastructuredtypefieldparser",{"_index":1761,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["odatastructuredtypefieldparser(name",{"_index":1862,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["odatastructuredtypeparser",{"_index":1518,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["odatasyntax",{"_index":205,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["odatausage",{"_index":2912,"title":{},"body":{"index.html":{}}}],["odataversion",{"_index":34,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odataversionhelper",{"_index":29,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["of(cached",{"_index":1423,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["ondelete",{"_index":567,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["one",{"_index":2275,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["onerror",{"_index":1156,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onerror(content",{"_index":1162,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload",{"_index":1157,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload(content",{"_index":1166,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["op",{"_index":323,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["open",{"_index":163,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["open.org/odata/odata",{"_index":1067,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["open.org/odata/odata/v4.0/errata02/os/complete/part1",{"_index":1071,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["open.org/odata/odata/v4.01/odata",{"_index":2298,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["opentype",{"_index":474,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["operator",{"_index":206,"title":{"classes/Operator.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('add",{"_index":358,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('and",{"_index":347,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('div",{"_index":364,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('eq",{"_index":335,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('ge",{"_index":341,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('gt",{"_index":339,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('has",{"_index":353,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('in",{"_index":355,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('le",{"_index":345,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('lt",{"_index":343,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('mod",{"_index":366,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('mul",{"_index":362,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('ne",{"_index":337,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('not",{"_index":351,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('or",{"_index":349,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator('sub",{"_index":360,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["operator:253",{"_index":892,"title":{},"body":{"classes/Lambda.html":{}}}],["operator:422",{"_index":891,"title":{},"body":{"classes/Lambda.html":{}}}],["operators",{"_index":389,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["option",{"_index":2361,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["option(name",{"_index":2374,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["options",{"_index":9,"title":{"interfaces/Options.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["options.custom",{"_index":1926,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["options.custom[f.name",{"_index":1927,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["options.expand",{"_index":1919,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["options.headers",{"_index":1278,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["options.helper",{"_index":2658,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.helper.annotations(this.payload",{"_index":2652,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.helper.attributes(data",{"_index":2661,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.helper.attributes(payload",{"_index":2667,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.helper.etag(this._annotations",{"_index":2654,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.helper.id(this._annotations",{"_index":2656,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.params",{"_index":1280,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["options.required",{"_index":1932,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["options.required[f.name",{"_index":1933,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["options.select",{"_index":1920,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["options.select).indexof(f.name",{"_index":1921,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["options.withcredentials",{"_index":1281,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["options?.helper.type(value",{"_index":1800,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["optionshelper",{"_index":87,"title":{"interfaces/OptionsHelper.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opts",{"_index":110,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["or(left",{"_index":348,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["orderby",{"_index":67,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["orderby(opts",{"_index":2328,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["orderbyobject",{"_index":3100,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["orderbytype",{"_index":3101,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["original",{"_index":1253,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["os",{"_index":1075,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["otherwise",{"_index":3065,"title":{},"body":{"license.html":{}}}],["out",{"_index":3067,"title":{},"body":{"license.html":{}}}],["output",{"_index":1624,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["overview",{"_index":3071,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":167,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["p.configure",{"_index":1559,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.encode(params[p.name",{"_index":1556,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.name",{"_index":1552,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.serialize(params[p.name",{"_index":1555,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.startswith(application_json",{"_index":2632,"title":{},"body":{"classes/ODataResponse.html":{}}}],["package",{"_index":2850,"title":{"dependencies.html":{}},"body":{}}],["paging",{"_index":2337,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["param",{"_index":74,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parameter",{"_index":103,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["parameter.collection",{"_index":1524,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parameter.nullable",{"_index":1522,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parameter.type",{"_index":1520,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parameters",{"_index":172,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["parameters(value",{"_index":2211,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["parameters.reduce",{"_index":1554,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["params",{"_index":18,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["params[p.name",{"_index":1553,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parent",{"_index":1850,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["parent.children.push(this",{"_index":1887,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["parentelement",{"_index":863,"title":{},"body":{"classes/Field.html":{}}}],["parentelement.children",{"_index":868,"title":{},"body":{"classes/Field.html":{}}}],["parse",{"_index":852,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["parser",{"_index":94,"title":{"interfaces/Parser.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parser.deserialize(value",{"_index":1803,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["parser.parsefromstring(xml",{"_index":813,"title":{},"body":{"classes/Field.html":{}}}],["parser.serialize(value",{"_index":1806,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["parserfortype",{"_index":1492,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["parserfortype(this.base",{"_index":1886,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["parserfortype(this.return.type",{"_index":1557,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parserfortype(this.type",{"_index":1532,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["parseroptions",{"_index":1525,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["parseroptions?.stringasenum",{"_index":1985,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["parsers",{"_index":125,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["part1",{"_index":1076,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["part2",{"_index":2300,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["partial",{"_index":1683,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["particular",{"_index":3052,"title":{},"body":{"license.html":{}}}],["partner",{"_index":568,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["patch",{"_index":1206,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataSingletonService.html":{}}}],["patch'].indexof(this._method",{"_index":2527,"title":{},"body":{"classes/ODataRequest.html":{}}}],["patch(attrs",{"_index":2796,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["path",{"_index":582,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/SegmentHandler.html":{}}}],["path(value",{"_index":2204,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["path.slice(1",{"_index":2139,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["path.startswith(path_separator",{"_index":2138,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["path_separator",{"_index":2129,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["pathandparams",{"_index":2102,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{}}}],["pathandparams(escape",{"_index":2119,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{}}}],["paths",{"_index":2151,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["pathsegmentnames",{"_index":49,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["pathsegmentnames.entityset",{"_index":1385,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataPathSegments.html":{}}}],["pathsegmentnames.function",{"_index":2134,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["pathsegmentnames.navigationproperty",{"_index":2178,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["pathsegmentnames.property",{"_index":2179,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["pathsegmentsbuilder",{"_index":2132,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["pathsegmentsbuilder(segment",{"_index":2147,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["pathwithparams",{"_index":2435,"title":{},"body":{"classes/ODataRequest.html":{}}}],["path}?${this._params",{"_index":2567,"title":{},"body":{"classes/ODataRequest.html":{}}}],["pattern",{"_index":264,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["payload",{"_index":109,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["people",{"_index":2962,"title":{},"body":{"index.html":{}}}],["people.fetch",{"_index":2976,"title":{},"body":{"index.html":{}}}],["peopleservice",{"_index":2961,"title":{},"body":{"index.html":{}}}],["peopleservice.entities",{"_index":2964,"title":{},"body":{"index.html":{}}}],["permission",{"_index":3010,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":132,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["permit",{"_index":3032,"title":{},"body":{"license.html":{}}}],["person",{"_index":3015,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3033,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":1732,"title":{},"body":{"classes/ODataEntitySetService.html":{},"index.html":{}}}],["please",{"_index":2897,"title":{},"body":{"index.html":{}}}],["point",{"_index":311,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["policy",{"_index":1045,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataParserOptions.html":{}}}],["polygon",{"_index":314,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["portions",{"_index":3042,"title":{},"body":{"license.html":{}}}],["post",{"_index":1205,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["post'].indexof(this._method",{"_index":2536,"title":{},"body":{"classes/ODataRequest.html":{}}}],["precision",{"_index":156,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["predicate",{"_index":936,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["predicate(this",{"_index":1869,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["prefer",{"_index":19,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["prefer.length",{"_index":2538,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push",{"_index":2532,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`odata.continue",{"_index":2537,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`odata.maxpagesize=${this.api.options.prefer?.maxpagesize",{"_index":2530,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`return=${this.api.options.prefer?.return",{"_index":2528,"title":{},"body":{"classes/ODataRequest.html":{}}}],["pretty",{"_index":1623,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["primitive",{"_index":2271,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["private",{"_index":46,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["project",{"_index":2899,"title":{},"body":{"index.html":{}}}],["projects/.../builder.ts",{"_index":2875,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../durations.ts",{"_index":3076,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../expressions.ts",{"_index":2869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../helper.ts",{"_index":3089,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../metadata.ts",{"_index":2870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../options.ts",{"_index":2872,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../resource.ts",{"_index":3077,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../segments.ts",{"_index":3099,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../structured",{"_index":3084,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../syntax.ts",{"_index":3081,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../types.ts",{"_index":2873,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property",{"_index":54,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["property(name",{"_index":1013,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["property.enum",{"_index":1994,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["property.ts",{"_index":564,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["property.ts:1",{"_index":653,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:14",{"_index":599,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:15",{"_index":600,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:16",{"_index":601,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:17",{"_index":603,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:18",{"_index":602,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:19",{"_index":598,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:25",{"_index":572,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:3",{"_index":654,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:30",{"_index":575,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:31",{"_index":573,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:32",{"_index":576,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:33",{"_index":574,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:39",{"_index":612,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:4",{"_index":656,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:40",{"_index":613,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:43",{"_index":587,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:44",{"_index":588,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:5",{"_index":655,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:9",{"_index":597,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["propertyref",{"_index":747,"title":{},"body":{"classes/Field.html":{}}}],["propertyrefs",{"_index":490,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["protected",{"_index":225,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["protocol",{"_index":1077,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["protocol/odata",{"_index":1072,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["provide",{"_index":2077,"title":{},"body":{"modules/ODataModule.html":{}}}],["provided",{"_index":3043,"title":{},"body":{"license.html":{}}}],["providers",{"_index":2060,"title":{},"body":{"modules/ODataModule.html":{}}}],["public",{"_index":45,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"modules/ODataModule.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["publish",{"_index":3026,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":3053,"title":{},"body":{"license.html":{}}}],["push",{"_index":2232,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["push(value",{"_index":2251,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["put",{"_index":408,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{}}}],["put(key",{"_index":108,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["put(name",{"_index":1363,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["putresponse",{"_index":1336,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["putresponse(req",{"_index":1365,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["q.apply(options",{"_index":1150,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["q.expand",{"_index":2965,"title":{},"body":{"index.html":{}}}],["q.filter",{"_index":2947,"title":{},"body":{"index.html":{}}}],["q.filter().clear",{"_index":2960,"title":{},"body":{"index.html":{}}}],["q.filter().push",{"_index":2955,"title":{},"body":{"index.html":{}}}],["qualifier",{"_index":452,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["queries",{"_index":2929,"title":{},"body":{"index.html":{}}}],["query",{"_index":104,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["query((q",{"_index":2946,"title":{},"body":{"index.html":{}}}],["query.expand",{"_index":2348,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["query.filter",{"_index":2354,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["query.orderby",{"_index":2356,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["query.search",{"_index":2352,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["query.select",{"_index":2346,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["query.transform",{"_index":2350,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["querycustomtype",{"_index":196,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataQueryOptions.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/typealiases.html":{}}}],["querycustomtypes",{"_index":2874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["querying",{"_index":2894,"title":{},"body":{"index.html":{}}}],["queryoptionnames",{"_index":25,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["queryoptionnames.compute",{"_index":2312,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.expand",{"_index":2388,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.filter",{"_index":2326,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.format",{"_index":2389,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.orderby",{"_index":2329,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.search",{"_index":2383,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.select",{"_index":2382,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.skip",{"_index":2386,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.skiptoken",{"_index":2387,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.top",{"_index":2385,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["queryoptionnames.transform",{"_index":2384,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["queryoptions",{"_index":3102,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["queryparams",{"_index":2564,"title":{},"body":{"classes/ODataRequest.html":{}}}],["r",{"_index":1124,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSingletonService.html":{}}}],["r.ismutate",{"_index":1433,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["r.request",{"_index":1241,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["range",{"_index":1837,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["raw",{"_index":1756,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"miscellaneous/enumerations.html":{}}}],["raw(`'${serialized",{"_index":1991,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["raw(json.stringify(this.serialize(value",{"_index":1885,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["raw(key",{"_index":2144,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["raw(serialized",{"_index":1992,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["readlink",{"_index":1000,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["readonly",{"_index":723,"title":{},"body":{"classes/Field.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["reduce",{"_index":1382,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["reduce((acc",{"_index":1928,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{}}}],["reference",{"_index":56,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["reference.ts",{"_index":545,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["reference.ts:14",{"_index":547,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:15",{"_index":548,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:18",{"_index":557,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:20",{"_index":560,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:21",{"_index":558,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:22",{"_index":559,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:3",{"_index":607,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:5",{"_index":610,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:6",{"_index":609,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:7",{"_index":608,"title":{},"body":{"classes/CsdlReference.html":{}}}],["referenced",{"_index":161,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["referencedproperty",{"_index":159,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["references",{"_index":808,"title":{},"body":{"classes/Field.html":{}}}],["referential",{"_index":160,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["referentialconstraint",{"_index":750,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraints",{"_index":569,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["referentials",{"_index":158,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["reg",{"_index":948,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["reg.test(a.term",{"_index":952,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["regexp",{"_index":927,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["regexp(`^${term",{"_index":950,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["region",{"_index":114,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["related",{"_index":2898,"title":{},"body":{"index.html":{}}}],["relative",{"_index":1200,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["remove",{"_index":1403,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"miscellaneous/typealiases.html":{}}}],["remove(...names",{"_index":2414,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(names",{"_index":2377,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(value",{"_index":2253,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["removed",{"_index":2880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["render",{"_index":198,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["render(field",{"_index":233,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["render(left",{"_index":327,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["render(right",{"_index":331,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["render(this.group",{"_index":371,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["render(undefined",{"_index":871,"title":{},"body":{"classes/Function.html":{},"classes/Grouping.html":{},"classes/Lambda.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{}}}],["render(v",{"_index":235,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["render(value(syntax",{"_index":219,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["render(value.render",{"_index":221,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["renderable",{"_index":197,"title":{"interfaces/Renderable.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["replace(/\\;/g",{"_index":2636,"title":{},"body":{"classes/ODataResponse.html":{}}}],["reportprogress",{"_index":2431,"title":{},"body":{"classes/ODataRequest.html":{}}}],["representation",{"_index":84,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataParserOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["req",{"_index":1258,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{}}}],["req.api",{"_index":1259,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["req.fetchpolicy",{"_index":1420,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.isbatch",{"_index":1430,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.isfetch",{"_index":1416,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.ismutate",{"_index":1418,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.observe",{"_index":1263,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["req.onload(chunk.slice(1",{"_index":1322,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["req.resource",{"_index":1431,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataResponse.html":{}}}],["req.resource.clonesegments",{"_index":1380,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["request",{"_index":97,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["requester",{"_index":1254,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["requests",{"_index":1239,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["requests[index",{"_index":1320,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["require",{"_index":1741,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["required",{"_index":1766,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["res",{"_index":1202,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"interfaces/ResponseJson.html":{}}}],["res$.pipe",{"_index":1425,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res$.pipe(startwith(cached",{"_index":1429,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.body",{"_index":2609,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.context",{"_index":1387,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.destroy(options",{"_index":1729,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["res.haskey",{"_index":1724,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["res.headers",{"_index":2610,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.join(newline",{"_index":1211,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.length",{"_index":1305,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.modify(attrs",{"_index":1728,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["res.options.cacheability",{"_index":1427,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.options.maxage",{"_index":2033,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["res.push",{"_index":1293,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${batch",{"_index":1302,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${batchboundary",{"_index":1295,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary",{"_index":1299,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_id",{"_index":1301,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_transfer_encoding",{"_index":1300,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_type",{"_index":1207,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${newline}${json.stringify(batch.request.body",{"_index":1304,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(newline",{"_index":1298,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.status",{"_index":2611,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.statustext",{"_index":2612,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.tojson",{"_index":2054,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["res.update(attrs",{"_index":1727,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["res.url",{"_index":2613,"title":{},"body":{"classes/ODataResponse.html":{}}}],["reset",{"_index":3108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resolve",{"_index":2707,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["resolvekey(value",{"_index":1890,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["resource",{"_index":1119,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["resource.call(params",{"_index":1151,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["resource.fetch",{"_index":1152,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["resource.query((q",{"_index":1149,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["resourceparams",{"_index":2501,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourceparams['$expand",{"_index":2547,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourceparams['$select",{"_index":2545,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourcepath",{"_index":2500,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resources",{"_index":1147,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataSingletonService.html":{},"interfaces/ResponseJson.html":{},"index.html":{}}}],["resources/query",{"_index":1757,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["response",{"_index":1054,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["response.body.split(newline_regexp",{"_index":1315,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["response.headers.get(content_type",{"_index":1310,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responsejson",{"_index":2044,"title":{"interfaces/ResponseJson.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["responseoptions",{"_index":88,"title":{"interfaces/ResponseOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["responses",{"_index":1195,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responsetype",{"_index":1121,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataRequest.html":{},"classes/ODataSingletonService.html":{}}}],["restore",{"_index":1273,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["restriction",{"_index":3022,"title":{},"body":{"license.html":{}}}],["result",{"_index":1251,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{}}}],["result.params",{"_index":2153,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["result.paths.join(path_separator",{"_index":2152,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["results",{"_index":176,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":83,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["returns",{"_index":189,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["returntype",{"_index":421,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["right",{"_index":326,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["rights",{"_index":3024,"title":{},"body":{"license.html":{}}}],["root",{"_index":2921,"title":{},"body":{"index.html":{}}}],["round",{"_index":185,"title":{},"body":{"classes/ArithmeticFunctions.html":{}}}],["round(value",{"_index":192,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["rxjs",{"_index":32,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1376,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{}}}],["s",{"_index":1139,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSingletonService.html":{}}}],["s.key",{"_index":2163,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["s.name",{"_index":1384,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataPathSegments.html":{}}}],["s.parameters",{"_index":2171,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["s.path",{"_index":1386,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataPathSegments.html":{}}}],["s.type",{"_index":2156,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["s1",{"_index":259,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["s2",{"_index":257,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["same",{"_index":1262,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["save",{"_index":1673,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["save(attrs",{"_index":1702,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["scale",{"_index":157,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schema",{"_index":713,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSingletonService.html":{}}}],["schema.alias",{"_index":1483,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["schema.contentencoding",{"_index":1829,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.default",{"_index":1842,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.format",{"_index":1822,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.iscompoundkey",{"_index":1739,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["schema.maxlength",{"_index":1831,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.namespace",{"_index":1482,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["schema.org",{"_index":1811,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.org/draft",{"_index":1914,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.pattern",{"_index":1823,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.properties",{"_index":1922,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.required",{"_index":1930,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schema.resolvekey(attrs",{"_index":1744,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["schema.ts",{"_index":623,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:13",{"_index":633,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:15",{"_index":642,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:16",{"_index":635,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:17",{"_index":640,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:18",{"_index":637,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:19",{"_index":639,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:20",{"_index":641,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:21",{"_index":634,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:22",{"_index":638,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:23",{"_index":644,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:24",{"_index":643,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:25",{"_index":636,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.type",{"_index":1821,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["schemaconfig",{"_index":127,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["schemas",{"_index":126,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["scope",{"_index":1337,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["scope(req",{"_index":1367,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["scope.length",{"_index":1406,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["scope.push(name",{"_index":1405,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["search",{"_index":65,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["search(opts",{"_index":2323,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["second",{"_index":689,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["second(value",{"_index":291,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["segment",{"_index":2110,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["segment.clearkey",{"_index":2160,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segment.key",{"_index":2140,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segment.key(key",{"_index":2161,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segment.name",{"_index":2133,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segment.parameters",{"_index":2135,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segment.path",{"_index":2137,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segmenthandler",{"_index":2130,"title":{"classes/SegmentHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(s",{"_index":2181,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segmenthandler(segment",{"_index":2186,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments",{"_index":1244,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["segments(undefined",{"_index":2121,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.add(pathsegmentnames.batch",{"_index":1245,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["segments.filter",{"_index":2177,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.foreach((segment",{"_index":2158,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.length",{"_index":2182,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.map((s",{"_index":2162,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.segments",{"_index":1381,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["segments[0",{"_index":2183,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments[segments.length",{"_index":2184,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["select",{"_index":61,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["select(opts",{"_index":2303,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["selector",{"_index":2919,"title":{},"body":{"index.html":{}}}],["selecttype",{"_index":3103,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sell",{"_index":3030,"title":{},"body":{"license.html":{}}}],["send",{"_index":1041,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["sent",{"_index":1048,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["serialization",{"_index":1466,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["serialize",{"_index":100,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["serialize(params",{"_index":1514,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["serialize(value",{"_index":1464,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"interfaces/Parser.html":{}}}],["serialized",{"_index":1467,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["server",{"_index":1227,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["service",{"_index":174,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["servicerooturl",{"_index":117,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["services/index",{"_index":2071,"title":{},"body":{"modules/ODataModule.html":{}}}],["sessionstorage",{"_index":2045,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["set",{"_index":508,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{}}}],["set(path",{"_index":2255,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["set.ts",{"_index":509,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{}}}],["set.ts:10",{"_index":1655,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:105",{"_index":1705,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:122",{"_index":1701,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:138",{"_index":1687,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:155",{"_index":1699,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:175",{"_index":1703,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:21",{"_index":1688,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:25",{"_index":1658,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:3",{"_index":512,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:34",{"_index":1657,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:38",{"_index":1680,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:39",{"_index":1681,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:40",{"_index":1659,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:5",{"_index":515,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:50",{"_index":1707,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:58",{"_index":1693,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:6",{"_index":513,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:67",{"_index":1695,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:7",{"_index":516,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:79",{"_index":1697,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:8",{"_index":514,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:9",{"_index":1656,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:91",{"_index":1684,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["setcache",{"_index":2670,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setcache(cachecontrol",{"_index":2683,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures",{"_index":2671,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures(features",{"_index":2685,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setlocation",{"_index":2672,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setlocation(location",{"_index":2687,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["settings",{"_index":2073,"title":{},"body":{"modules/ODataModule.html":{}}}],["setversion",{"_index":2673,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setversion(version",{"_index":2689,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["shall",{"_index":3039,"title":{},"body":{"license.html":{}}}],["shortcuts",{"_index":1730,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["singleton",{"_index":53,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataPathSegmentsHandler.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["singleton(singletonname",{"_index":2784,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["singleton.ts",{"_index":647,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:3",{"_index":649,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:5",{"_index":650,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:6",{"_index":652,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:7",{"_index":651,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singletonname",{"_index":2786,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["singletons",{"_index":498,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["singletonschema",{"_index":2792,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["skip",{"_index":69,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["skip(opts",{"_index":2333,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["skiptoken",{"_index":70,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["skiptoken(opts",{"_index":2335,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["software",{"_index":3018,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"index.html":{}}}],["specific",{"_index":1742,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["specified",{"_index":857,"title":{},"body":{"classes/Field.html":{}}}],["split",{"_index":2630,"title":{},"body":{"classes/ODataResponse.html":{}}}],["srid",{"_index":437,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["standardaggregatemethods",{"_index":2876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":251,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["started",{"_index":2891,"title":{"index.html":{},"license.html":{}},"body":{}}],["started/advanced",{"_index":1234,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataSingletonService.html":{}}}],["startindex",{"_index":1319,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["startswith",{"_index":2830,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["startswith(field",{"_index":248,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["startwith",{"_index":1374,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["states",{"_index":2951,"title":{},"body":{"index.html":{}}}],["static",{"_index":722,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"modules/ODataModule.html":{},"classes/ODataResponse.html":{}}}],["status",{"_index":1163,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/ResponseJson.html":{}}}],["status.code",{"_index":1217,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["status.message",{"_index":1219,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["status.text",{"_index":1230,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statustext",{"_index":1218,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/ResponseJson.html":{}}}],["storage",{"_index":2037,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["store",{"_index":47,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["store'].indexof(directive",{"_index":2714,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["streaming",{"_index":78,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["string",{"_index":75,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/typealiases.html":{}}}],["stringandcollectionfunctions",{"_index":237,"title":{"classes/StringAndCollectionFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["stringasenum",{"_index":73,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["stringfunctions",{"_index":262,"title":{"classes/StringFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["strings",{"_index":1196,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["strings.titlecase(this.name",{"_index":1634,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["strings.uniqueid(batch_prefix",{"_index":1275,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["strings.uniqueid(changeset_prefix",{"_index":1296,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["strip",{"_index":1053,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["stripmetadata",{"_index":20,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structural",{"_index":485,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["structured",{"_index":468,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["structured.fields.find((f",{"_index":1895,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["structuredtype",{"_index":1770,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["structuredtypeconfig",{"_index":139,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["structuredtypefieldconfig",{"_index":93,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["structuredtypefieldoptions",{"_index":91,"title":{"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypeschema",{"_index":1638,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["strucuturedtype",{"_index":1540,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["styleurls",{"_index":2924,"title":{},"body":{"index.html":{}}}],["sub",{"_index":400,"title":{},"body":{"classes/ArithmeticOperators.html":{}}}],["sub(left",{"_index":359,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["subject",{"_index":1155,"title":{},"body":{"classes/ODataBatchRequest.html":{},"license.html":{}}}],["sublicense",{"_index":3028,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2937,"title":{},"body":{"index.html":{}}}],["subscribe((airports",{"_index":2938,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":3041,"title":{},"body":{"license.html":{}}}],["substring",{"_index":2831,"title":{},"body":{"classes/StringAndCollectionFunctions.html":{}}}],["substring(field",{"_index":250,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["sum",{"_index":2885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":1198,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["super(annotationlist",{"_index":453,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["super(config",{"_index":1629,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["super(field",{"_index":1771,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["super(init",{"_index":2608,"title":{},"body":{"classes/ODataResponse.html":{}}}],["super(name",{"_index":486,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{}}}],["super(op",{"_index":379,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["super.flush",{"_index":2053,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["support",{"_index":2986,"title":{},"body":{"index.html":{}}}],["supported",{"_index":861,"title":{},"body":{"classes/Field.html":{}}}],["switch",{"_index":1257,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponseOptions.html":{}}}],["switchmap",{"_index":2943,"title":{},"body":{"index.html":{}}}],["symbol.tostringtag",{"_index":229,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["sync",{"_index":3110,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["syntax",{"_index":394,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["t",{"_index":99,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["table",{"_index":2905,"title":{},"body":{"index.html":{}}}],["tag",{"_index":719,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["tag_action",{"_index":755,"title":{},"body":{"classes/Field.html":{}}}],["tag_action_import",{"_index":761,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotation",{"_index":736,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotations",{"_index":735,"title":{},"body":{"classes/Field.html":{}}}],["tag_complex_type",{"_index":741,"title":{},"body":{"classes/Field.html":{}}}],["tag_data_services",{"_index":726,"title":{},"body":{"classes/Field.html":{}}}],["tag_edmx",{"_index":724,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_container",{"_index":756,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_set",{"_index":757,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_type",{"_index":743,"title":{},"body":{"classes/Field.html":{}}}],["tag_enum_type",{"_index":738,"title":{},"body":{"classes/Field.html":{}}}],["tag_function",{"_index":752,"title":{},"body":{"classes/Field.html":{}}}],["tag_function_import",{"_index":759,"title":{},"body":{"classes/Field.html":{}}}],["tag_include",{"_index":730,"title":{},"body":{"classes/Field.html":{}}}],["tag_include_annotations",{"_index":732,"title":{},"body":{"classes/Field.html":{}}}],["tag_key",{"_index":745,"title":{},"body":{"classes/Field.html":{}}}],["tag_member",{"_index":740,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property",{"_index":748,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property_binding",{"_index":763,"title":{},"body":{"classes/Field.html":{}}}],["tag_on_delete",{"_index":751,"title":{},"body":{"classes/Field.html":{}}}],["tag_parameter",{"_index":754,"title":{},"body":{"classes/Field.html":{}}}],["tag_property",{"_index":744,"title":{},"body":{"classes/Field.html":{}}}],["tag_property_ref",{"_index":746,"title":{},"body":{"classes/Field.html":{}}}],["tag_reference",{"_index":728,"title":{},"body":{"classes/Field.html":{}}}],["tag_referential_constraint",{"_index":749,"title":{},"body":{"classes/Field.html":{}}}],["tag_return_type",{"_index":753,"title":{},"body":{"classes/Field.html":{}}}],["tag_schema",{"_index":737,"title":{},"body":{"classes/Field.html":{}}}],["tag_singleton",{"_index":758,"title":{},"body":{"classes/Field.html":{}}}],["tag_term",{"_index":734,"title":{},"body":{"classes/Field.html":{}}}],["tag_type_definition",{"_index":764,"title":{},"body":{"classes/Field.html":{}}}],["tags",{"_index":721,"title":{},"body":{"classes/Field.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{},"index.html":{}}}],["tags(req",{"_index":1369,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["tags.length",{"_index":1411,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["tags.push",{"_index":1389,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["tags.push(context.type",{"_index":1393,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["tags.some((t",{"_index":1412,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["tap",{"_index":1375,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["tap((res",{"_index":1426,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["target",{"_index":451,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["targetnamespace",{"_index":555,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["templateurl",{"_index":2922,"title":{},"body":{"index.html":{}}}],["term",{"_index":129,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["termnamespace",{"_index":554,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["terms",{"_index":630,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["text",{"_index":1228,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["text/plain",{"_index":2525,"title":{},"body":{"classes/ODataRequest.html":{}}}],["text/xml",{"_index":814,"title":{},"body":{"classes/Field.html":{}}}],["text_plain",{"_index":2479,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._annotations",{"_index":2651,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._body",{"_index":2491,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._context",{"_index":2647,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._functions",{"_index":1016,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this._headers",{"_index":2540,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._method",{"_index":2480,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._options",{"_index":2625,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setcache(cachecontrol",{"_index":2643,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setfeatures(features",{"_index":2633,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setlocation(location",{"_index":2640,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setversion(version",{"_index":2637,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._params",{"_index":2552,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._params.has(`$${name",{"_index":2557,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._params.keys().length",{"_index":2566,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._path",{"_index":2503,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._path.endswith($batch",{"_index":2570,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._path}/${$query",{"_index":2559,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._payload",{"_index":2644,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._properties",{"_index":1011,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this._querybody",{"_index":2554,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._requests",{"_index":1276,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this._requests.length",{"_index":1274,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this._requests.map((r",{"_index":1240,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this._requests.push(new",{"_index":1268,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this._requests[this._requests.length",{"_index":1270,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this._responsetype",{"_index":2489,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this._segments",{"_index":2145,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["this._segments.map((s",{"_index":2168,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["this._segments.push(segment",{"_index":2185,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["this._segments.reduce",{"_index":2146,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["this._segments].reverse().find(predicate",{"_index":2176,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["this.accept",{"_index":1099,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["this.alias",{"_index":1542,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["this.annotatedvalue(computed",{"_index":1794,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.annotatedvalue(long_description",{"_index":1917,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.annotatedvalue(term",{"_index":1633,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["this.annotations",{"_index":943,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["this.annotations.find(predicate",{"_index":947,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["this.api",{"_index":1260,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{}}}],["this.api.findentitysetbyname(this.name",{"_index":1717,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["this.api.findentitysetfortype(this.parser.return.type)?.name",{"_index":1486,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.api.findstructuredtypefortype(this.apinameorentitytype",{"_index":1654,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.api.options",{"_index":1494,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["this.api.options.accept?.exponentialdecimals",{"_index":2520,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.accept?.ieee754compatible",{"_index":2515,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.accept?.metadata",{"_index":2512,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.accept?.streaming",{"_index":2518,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.bodyqueryoptions",{"_index":2499,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.etag.ifmatch",{"_index":2506,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.etag.ifnonematch",{"_index":2509,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.fetchpolicy",{"_index":2497,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.headers",{"_index":2541,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.params",{"_index":2550,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.continueonerror",{"_index":2535,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.includeannotations",{"_index":2531,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.maxpagesize",{"_index":2529,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.return",{"_index":2526,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.stripmetadata",{"_index":2662,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.api.options.withcredentials",{"_index":2495,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.request",{"_index":1256,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.api.request(request).subscribe((response",{"_index":1282,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.api.servicerooturl}${this._path",{"_index":2568,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.servicerooturl}${this.pathwithparams",{"_index":2569,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.apinameorentitytype",{"_index":1653,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["this.assertarray",{"_index":2283,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.assertarray().filter((v",{"_index":2274,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.assertarray().push(value",{"_index":2273,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.assertarray()[index",{"_index":2279,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.assertobject(false",{"_index":2289,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.assertobject(true",{"_index":2287,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.base",{"_index":1851,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.body",{"_index":2619,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.body)['d",{"_index":2646,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.bodyqueryoptions",{"_index":1097,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{}}}],["this.bodyqueryoptions.length",{"_index":2555,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.bodyqueryoptions.map((name",{"_index":2562,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.bodyqueryoptions.some((name",{"_index":2556,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.bound",{"_index":1477,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.buildentry(payload",{"_index":1396,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.buildkey([...(scope",{"_index":1397,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.buildkey(scope",{"_index":1407,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.cacheability",{"_index":2715,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.callables",{"_index":2754,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.callables.find",{"_index":2767,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.callables.foreach((callable",{"_index":2775,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.checkversion(document",{"_index":815,"title":{},"body":{"classes/Field.html":{}}}],["this.children",{"_index":1871,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.client",{"_index":2788,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["this.client.apifor(this.apinameorentitytype",{"_index":1148,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["this.client.entityset(this.name",{"_index":1711,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.client.singleton(this.name",{"_index":2802,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["this.clonesegments",{"_index":1248,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.collection",{"_index":1523,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.complete",{"_index":1222,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.composable",{"_index":1479,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.containers",{"_index":2757,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.containers.reduce",{"_index":2762,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.context",{"_index":989,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["this.context?.entityset",{"_index":983,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.context?.type",{"_index":985,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.create(attrs",{"_index":1736,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.default",{"_index":1777,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.deserialize(this.default",{"_index":1809,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.entities",{"_index":2751,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entities().create(attrs",{"_index":1722,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entities().entity(key",{"_index":1712,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entities().fetch(options",{"_index":1720,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entities().fetchall(options",{"_index":1718,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entities.find((e",{"_index":2766,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entities.foreach((config",{"_index":2773,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entity",{"_index":2804,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["this.entity(key",{"_index":1723,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entity(key).fetch(options",{"_index":1721,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entitysetpath",{"_index":1475,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.entitysets",{"_index":1630,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["this.entitysets.find((e",{"_index":2769,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entitytype",{"_index":1660,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["this.entries",{"_index":1379,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.entries.delete(k",{"_index":1414,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.foreach((entry",{"_index":1408,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.get(key",{"_index":1400,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.set(key",{"_index":1398,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.enum().validate(value",{"_index":1793,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.enums",{"_index":2748,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.enums.find((e",{"_index":2764,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.enums.foreach((enu",{"_index":2771,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.error",{"_index":1226,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.error(res",{"_index":1232,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.expand(query.expand",{"_index":2349,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.factory.entityset",{"_index":2931,"title":{},"body":{"index.html":{}}}],["this.fetchone(key",{"_index":1731,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.fetchpolicy",{"_index":1095,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{}}}],["this.field",{"_index":372,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.fields",{"_index":1859,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["this.fields().find((f",{"_index":1968,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields().map(mapper",{"_index":1970,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields.filter",{"_index":1877,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.fields.filter((f",{"_index":1936,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.fields.find((f",{"_index":1864,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.fields.foreach((f",{"_index":1888,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.fields.map((f",{"_index":1995,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.field}/${render(this.value",{"_index":374,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.filter(query.filter",{"_index":2355,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.find((s",{"_index":2187,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["this.findannotation((a",{"_index":951,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["this.findchildparser(predicate",{"_index":1875,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.flags",{"_index":1977,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.forget",{"_index":1399,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.functions[name",{"_index":1019,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.get(req.pathwithparams",{"_index":2034,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.getfieldvaluebyattribute",{"_index":817,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects",{"_index":822,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(dataservices",{"_index":836,"title":{},"body":{"classes/Field.html":{}}}],["this.getresponse(req",{"_index":1422,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.group.tojson",{"_index":370,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.handlefetch(req",{"_index":1417,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.handlemutate(req",{"_index":1419,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.headers",{"_index":1089,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponse.html":{}}}],["this.headers.get(cache_control",{"_index":2642,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(content_type",{"_index":2627,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(header",{"_index":2635,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(key",{"_index":2653,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(location_header",{"_index":2639,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.getall(name",{"_index":2621,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.helper",{"_index":988,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.attributes(data",{"_index":982,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.count(this.annotations",{"_index":1022,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.deltalink(this.annotations",{"_index":1026,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.editlink(this.annotations",{"_index":1003,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.entities(data",{"_index":1021,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.entity(data",{"_index":992,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.etag(this.annotations",{"_index":995,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.functions(this.annotations",{"_index":1017,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.id(this.annotations",{"_index":994,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.mediacontenttype(this.annotations",{"_index":1009,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.mediaeditlink(this.annotations",{"_index":1007,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.mediaetag(this.annotations",{"_index":997,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.mediareadlink(this.annotations",{"_index":1005,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.metadataetag(this.annotations",{"_index":999,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.nextlink(this.annotations",{"_index":1024,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.properties(this.annotations",{"_index":1012,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.property(data",{"_index":990,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.readlink(this.annotations",{"_index":1001,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.type(this.annotations",{"_index":984,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.ieee754compatible",{"_index":2703,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.isenumtype",{"_index":1536,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.isexpired(entry",{"_index":1401,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.isstructuredtype",{"_index":1539,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.keys",{"_index":1856,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.keys.length",{"_index":1893,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.location",{"_index":2708,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.maxage",{"_index":2713,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.maxlength",{"_index":1779,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.members",{"_index":1965,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.metadata",{"_index":2700,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.modify(key",{"_index":1747,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.n",{"_index":2268,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.name",{"_index":230,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.namespace",{"_index":1541,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{}}}],["this.namespace}.${this.name",{"_index":1548,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.namespace}.${this.name}'${name",{"_index":1989,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.namespace}.${this.name}'${names.join",{"_index":1986,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.name}(${params.join",{"_index":236,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.navigation",{"_index":1783,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.next(odataresponse.fromhttpresponse(this.request",{"_index":1221,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.nextlink",{"_index":1027,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.normalize",{"_index":232,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.nullable",{"_index":1521,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.o[this.n",{"_index":2269,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.o[this.n].filter((v",{"_index":2292,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.o[this.n].length",{"_index":2277,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.o[this.n][0",{"_index":2278,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.observe",{"_index":2487,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.odata",{"_index":2972,"title":{},"body":{"index.html":{}}}],["this.odata.fromjson(json",{"_index":2959,"title":{},"body":{"index.html":{}}}],["this.op",{"_index":324,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.open",{"_index":1853,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.option(name).clear",{"_index":2416,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options",{"_index":2390,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{}}}],["this.options.expression",{"_index":2311,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.helper.context",{"_index":2648,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options.option(queryoptionnames.compute",{"_index":2317,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option(queryoptionnames.format",{"_index":2320,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option(queryoptionnames.search",{"_index":2324,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option(queryoptionnames.skip",{"_index":2334,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option(queryoptionnames.skiptoken",{"_index":2336,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option(queryoptionnames.top",{"_index":2332,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option>(queryoptionnames.expand",{"_index":2306,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option>(queryoptionnames.filter",{"_index":2327,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option>(queryoptionnames.orderby",{"_index":2330,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option>(queryoptionnames.select",{"_index":2304,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.option>(queryoptionnames.transform",{"_index":2322,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.options.version",{"_index":2645,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options[k",{"_index":2421,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[key",{"_index":2393,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[name",{"_index":2410,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.compute",{"_index":2401,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.expand",{"_index":2399,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.filter",{"_index":2403,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.orderby",{"_index":2404,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.search",{"_index":2402,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.select",{"_index":2398,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.skip",{"_index":2406,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.skiptoken",{"_index":2407,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.top",{"_index":2405,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.options[queryoptionnames.transform",{"_index":2400,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["this.optionshelper",{"_index":1527,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.op}(${left",{"_index":332,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.orderby(query.orderby",{"_index":2357,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.paging(query",{"_index":2358,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.parameters",{"_index":1545,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.find((p",{"_index":1560,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.foreach((p",{"_index":1558,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.params",{"_index":1087,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["this.parent",{"_index":1866,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parent.deserialize(value",{"_index":1876,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parent.serialize(value",{"_index":1882,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parent.typefor(name",{"_index":1867,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parent?.defaults",{"_index":1906,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parent?.resolvekey(value",{"_index":1891,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parent?.tojsonschema(options",{"_index":1912,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parent?.validate(attrs",{"_index":1935,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parse(parser",{"_index":1804,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.parser",{"_index":1481,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.parser.binding",{"_index":1498,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.parser.configure",{"_index":1493,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["this.parser.deserialize(value",{"_index":1495,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.parser.encode(v",{"_index":1531,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.encode(value",{"_index":1497,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.parser.fields",{"_index":1967,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.parser.istypeof(type",{"_index":1490,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["this.parser.return",{"_index":1485,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.parser.serialize(v",{"_index":1530,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.serialize(value",{"_index":1496,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.parser.tojsonschema(options",{"_index":1813,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.pathandparams",{"_index":2164,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{}}}],["this.payload",{"_index":2650,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.precision",{"_index":1785,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.prefer",{"_index":1103,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["this.properties[name",{"_index":1014,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.property",{"_index":1768,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.put(req.pathwithparams",{"_index":2032,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.putresponse(req",{"_index":1428,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.queries",{"_index":2928,"title":{},"body":{"index.html":{}}}],["this.referencedproperty",{"_index":1769,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.references",{"_index":821,"title":{},"body":{"classes/Field.html":{}}}],["this.referentials",{"_index":1774,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.referentials.length",{"_index":1849,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.reportprogress",{"_index":2485,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.request.headers",{"_index":1208,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.method",{"_index":1203,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.pathwithparams",{"_index":1204,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.urlwithparams",{"_index":1220,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.resource",{"_index":2482,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.resource.deserialize(entities",{"_index":2664,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.resource.deserialize(entity",{"_index":2663,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.resource.deserialize(property",{"_index":2665,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.resource.deserialize(value",{"_index":2668,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.resource.pathandparams",{"_index":2502,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.resource.serialize(this._body",{"_index":2493,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.restore",{"_index":2047,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.return",{"_index":1543,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.scale",{"_index":1787,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.schema",{"_index":1473,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{}}}],["this.schema.alias",{"_index":1489,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{}}}],["this.schema.api",{"_index":1491,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{}}}],["this.schema.namespace}.${this.name",{"_index":1484,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{}}}],["this.schemas",{"_index":835,"title":{},"body":{"classes/Field.html":{}}}],["this.scope(r",{"_index":1434,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.scope(req",{"_index":2030,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.search(query.search",{"_index":2353,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.segment.key",{"_index":2207,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.name",{"_index":2201,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.parameters",{"_index":2212,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.path",{"_index":2205,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.type",{"_index":2203,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segments",{"_index":2154,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["this.segments.get(pathsegmentnames.action",{"_index":2218,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.get(pathsegmentnames.entityset",{"_index":2216,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.get(pathsegmentnames.function",{"_index":2219,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.get(pathsegmentnames.navigationproperty",{"_index":2222,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.get(pathsegmentnames.property",{"_index":2221,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.get(pathsegmentnames.singleton",{"_index":2217,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.keys(values",{"_index":2220,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.select(query.select",{"_index":2347,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.serialize(value",{"_index":1990,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.service",{"_index":1662,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["this.skip().clear",{"_index":2342,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.skip(skip",{"_index":2339,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.skiptoken().clear",{"_index":2344,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.skiptoken(skiptoken",{"_index":2338,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.status",{"_index":2622,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.statustext",{"_index":2623,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.storage",{"_index":2046,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.storage.setitem",{"_index":2050,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.store",{"_index":2049,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.streaming",{"_index":2702,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.stringasenum",{"_index":1085,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.stripmetadata",{"_index":1093,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["this.structured().validate(value",{"_index":1792,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.structuredtype",{"_index":1772,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.structuredtype.keys?.find((k",{"_index":1846,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.structuredtypeschema",{"_index":1738,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.tags(req",{"_index":2031,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["this.term",{"_index":940,"title":{},"body":{"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{}}}],["this.timeout",{"_index":1378,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.titelize(description",{"_index":1916,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.tojson(parser",{"_index":1808,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.top().clear",{"_index":2343,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.top(top",{"_index":2340,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.transform(query.transform",{"_index":2351,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["this.type",{"_index":1519,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.type.startswith('edm",{"_index":1534,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["this.update(key",{"_index":1748,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.url",{"_index":2624,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.validate(v",{"_index":1791,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["this.value",{"_index":373,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.values",{"_index":231,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["this.version",{"_index":816,"title":{},"body":{"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.withcredentials",{"_index":1091,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{}}}],["throw",{"_index":850,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{}}}],["throwerror",{"_index":1373,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{}}}],["throwerror(\"can't",{"_index":1745,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["throwerror('no",{"_index":1424,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["throwerror('resource",{"_index":1725,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["throwerror(error",{"_index":1737,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["time",{"_index":690,"title":{},"body":{"classes/DateAndTimeFunctions.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["time(value",{"_index":293,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["timeout",{"_index":1326,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["titelize",{"_index":1611,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["titelize(term",{"_index":1614,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["title",{"_index":1619,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"index.html":{}}}],["titleize",{"_index":1620,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["titleize(term",{"_index":1974,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["titleized",{"_index":1625,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["todo",{"_index":1199,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{}}}],["tojson",{"_index":202,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["tojsonschema",{"_index":1993,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["tojsonschema(options",{"_index":1812,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["tokens",{"_index":2070,"title":{},"body":{"modules/ODataModule.html":{}}}],["tolower",{"_index":2840,"title":{},"body":{"classes/StringFunctions.html":{}}}],["tolower(value",{"_index":266,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["tools",{"_index":2413,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["top",{"_index":68,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["top(opts",{"_index":2331,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["toqueryarguments",{"_index":2362,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["tort",{"_index":3064,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":201,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["totaloffsetminutes",{"_index":691,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["totaloffsetminutes(value",{"_index":295,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["totalseconds",{"_index":692,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["totalseconds(value",{"_index":297,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["toupper",{"_index":2841,"title":{},"body":{"classes/StringFunctions.html":{}}}],["toupper(value",{"_index":268,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["transform",{"_index":66,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transform(opts",{"_index":2321,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["trim",{"_index":2705,"title":{},"body":{"classes/ODataResponseOptions.html":{},"classes/StringFunctions.html":{}}}],["trim(value",{"_index":270,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["trippin",{"_index":2927,"title":{},"body":{"index.html":{}}}],["trippinconfig",{"_index":2978,"title":{},"body":{"index.html":{}}}],["trippinmodule",{"_index":2979,"title":{},"body":{"index.html":{}}}],["trips",{"_index":2968,"title":{},"body":{"index.html":{}}}],["true",{"_index":227,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{},"index.html":{}}}],["try",{"_index":810,"title":{},"body":{"classes/Field.html":{}}}],["tslib",{"_index":2862,"title":{},"body":{"dependencies.html":{}}}],["tutorial/#batch",{"_index":1235,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["tutorial/#singleton",{"_index":2791,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["type",{"_index":23,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["type(undefined",{"_index":1468,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{}}}],["type(value",{"_index":2202,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["type.startswith(this.alias",{"_index":2761,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.startswith(this.namespace",{"_index":2760,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.ts",{"_index":469,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts:1",{"_index":527,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:10",{"_index":522,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:102",{"_index":1947,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:11",{"_index":523,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:111",{"_index":2004,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:112",{"_index":1961,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:12",{"_index":659,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:122",{"_index":1949,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:123",{"_index":2008,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:13",{"_index":657,"title":{},"body":{"classes/CsdlStructuredType.html":{}}}],["type.ts:132",{"_index":2010,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:14",{"_index":1973,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:15",{"_index":1972,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:17",{"_index":477,"title":{},"body":{"classes/CsdlComplexType.html":{}}}],["type.ts:23",{"_index":1975,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:3",{"_index":530,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:30",{"_index":518,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:31",{"_index":1962,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:32",{"_index":2001,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:33",{"_index":520,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:34",{"_index":1999,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:35",{"_index":1752,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:36",{"_index":1751,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:37",{"_index":2000,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:38",{"_index":1998,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:39",{"_index":519,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:4",{"_index":529,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:40",{"_index":1963,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:44",{"_index":2422,"title":{},"body":{"classes/ODataReferential.html":{}}}],["type.ts:45",{"_index":562,"title":{},"body":{"classes/CsdlKey.html":{},"classes/ODataReferential.html":{}}}],["type.ts:46",{"_index":563,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:49",{"_index":604,"title":{},"body":{"classes/CsdlPropertyRef.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:5",{"_index":531,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:50",{"_index":605,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:53",{"_index":1964,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:57",{"_index":1946,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:58",{"_index":2007,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:6",{"_index":528,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:62",{"_index":2002,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:65",{"_index":1950,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:66",{"_index":2005,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:73",{"_index":2003,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:74",{"_index":1953,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:8",{"_index":658,"title":{},"body":{"classes/CsdlStructuredType.html":{}}}],["type.ts:83",{"_index":1955,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:9",{"_index":660,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:90",{"_index":2006,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:92",{"_index":1957,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["typealiases",{"_index":3074,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefinition",{"_index":765,"title":{},"body":{"classes/Field.html":{}}}],["typedefinitions",{"_index":631,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["typefor(name",{"_index":1863,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["typefunctions",{"_index":304,"title":{"classes/TypeFunctions.html":{}},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["typeof",{"_index":218,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["types",{"_index":714,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataParserOptions.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/SegmentHandler.html":{}}}],["types(undefined",{"_index":2125,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["types.isarray(this.o[this.n",{"_index":2272,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["types.isempty(errors",{"_index":1798,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["types.isempty(key",{"_index":1903,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["types.isempty(this.o[this.n",{"_index":2270,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["types.isempty(this.options[key",{"_index":2392,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["types.isempty(this.segment.key",{"_index":2209,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(this.segment.parameters",{"_index":2214,"title":{},"body":{"classes/ODataPathSegmentsHandler.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(v",{"_index":2293,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["types.isempty(value",{"_index":1911,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{}}}],["types.isfunction(opts",{"_index":2310,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["types.isplainobject(data",{"_index":2660,"title":{},"body":{"classes/ODataResponse.html":{}}}],["types.isplainobject(payload",{"_index":2666,"title":{},"body":{"classes/ODataResponse.html":{}}}],["types.isplainobject(this.o[this.n",{"_index":2281,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["types.isplainobject(this.payload",{"_index":2649,"title":{},"body":{"classes/ODataResponse.html":{}}}],["types.isplainobject(v",{"_index":1896,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{}}}],["types.isplainobject(value",{"_index":1799,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["types.rawtype(value",{"_index":2394,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["unchanged",{"_index":2882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":113,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{}}}],["underlayingtype",{"_index":673,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["underlyingtype",{"_index":525,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["unicode",{"_index":580,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["united",{"_index":2950,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1231,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["unpacked",{"_index":3104,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unset",{"_index":2233,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["unset(path",{"_index":2258,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["unsuccessful",{"_index":1223,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["update",{"_index":1674,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSingletonService.html":{},"miscellaneous/typealiases.html":{}}}],["update(attrs",{"_index":2798,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["update(key",{"_index":1704,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["update/patch",{"_index":1746,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["updating",{"_index":2895,"title":{},"body":{"index.html":{}}}],["uri",{"_index":551,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["url",{"_index":102,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseJson.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["urlwithparams",{"_index":2436,"title":{},"body":{"classes/ODataRequest.html":{}}}],["usage",{"_index":2908,"title":{},"body":{"index.html":{}}}],["use",{"_index":1487,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":2079,"title":{},"body":{"modules/ODataModule.html":{}}}],["usevalue",{"_index":2078,"title":{},"body":{"modules/ODataModule.html":{}}}],["using",{"_index":2994,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1753,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/SegmentHandler.html":{}}}],["utils/http",{"_index":1189,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["utils/odata",{"_index":2745,"title":{},"body":{"classes/ODataSchema.html":{}}}],["utils/strings",{"_index":1197,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{}}}],["utils/types",{"_index":715,"title":{},"body":{"classes/Field.html":{},"classes/ODataResponse.html":{}}}],["v",{"_index":1805,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{}}}],["v4",{"_index":2993,"title":{},"body":{"index.html":{}}}],["v4.0",{"_index":1073,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["v4.01",{"_index":2299,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["v4.01.html#sec_requestingthejsonformat",{"_index":1070,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{}}}],["v[field.name",{"_index":1897,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["validate",{"_index":1789,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{}}}],["validate(member",{"_index":2009,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["value",{"_index":57,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"interfaces/Cache.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Field.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/Operator.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/Renderable.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"classes/TypeFunctions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["value(v",{"_index":2260,"title":{},"body":{"classes/ODataQueryOptionHandler.html":{}}}],["value).reduce",{"_index":1982,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["value.length",{"_index":1796,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["value.map((v",{"_index":1529,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{}}}],["value.render(aliases",{"_index":2395,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["value.tojson",{"_index":2397,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["value/s",{"_index":96,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["value[f.name",{"_index":1879,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{}}}],["values",{"_index":226,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["values.map((v",{"_index":234,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["values.push(length",{"_index":253,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["values[index",{"_index":2159,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["van",{"_index":3008,"title":{},"body":{"license.html":{}}}],["var",{"_index":1214,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"index.html":{}}}],["variables",{"_index":1237,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["version",{"_index":72,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataParserOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["version.replace(/\\;/g",{"_index":2704,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_2_0",{"_index":2693,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_3_0",{"_index":2694,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_4_0",{"_index":716,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataResponseOptions.html":{}}}],["version_4_0].indexof(value",{"_index":2706,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["versions",{"_index":2987,"title":{},"body":{"index.html":{}}}],["viewed",{"_index":2996,"title":{},"body":{"index.html":{}}}],["void",{"_index":111,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotatable.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["warranties",{"_index":3049,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3044,"title":{},"body":{"license.html":{}}}],["whether",{"_index":3062,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":3000,"title":{},"body":{"index.html":{}}}],["window.addeventlistener('beforeunload",{"_index":2048,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/ResponseJson.html":{}}}],["withcount",{"_index":1719,"title":{},"body":{"classes/ODataEntitySetService.html":{},"index.html":{}}}],["withcredentials",{"_index":21,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataParserOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["without",{"_index":1726,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"license.html":{}}}],["works",{"_index":2981,"title":{},"body":{"index.html":{}}}],["www.odata.org/getting",{"_index":2790,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["x",{"_index":204,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["xssi_prefix",{"_index":1184,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["year",{"_index":693,"title":{},"body":{"classes/DateAndTimeFunctions.html":{}}}],["year(value",{"_index":299,"title":{},"body":{"classes/ArithmeticFunctions.html":{},"classes/ArithmeticOperators.html":{},"classes/CollectionFunctions.html":{},"classes/ConditionalFunctions.html":{},"classes/DateAndTimeFunctions.html":{},"classes/Function.html":{},"classes/GeoFunctions.html":{},"classes/Grouping.html":{},"classes/GroupingAndNavigationOperators.html":{},"classes/Lambda.html":{},"classes/LambdaOperators.html":{},"classes/LogicalOperators.html":{},"classes/Navigation.html":{},"classes/Operator.html":{},"interfaces/Renderable.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/StringFunctions.html":{},"classes/TypeFunctions.html":{}}}],["yes",{"_index":402,"title":{},"body":{"classes/ArithmeticOperators.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/GeoFunctions.html":{},"classes/LogicalOperators.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPathSegmentsHandler.html":{},"classes/ODataQueryOptionHandler.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"classes/StringAndCollectionFunctions.html":{},"classes/TypeFunctions.html":{}}}],["zone.js",{"_index":2864,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiOptions.html":{"url":"interfaces/ApiOptions.html","title":"interface - ApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accept\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bodyQueryOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            etag\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetchPolicy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stripMetadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accept\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accept:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bodyQueryOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodyQueryOptions:         QueryOptionNames[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QueryOptionNames[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        etag:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPolicy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetchPolicy:         FetchPolicy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchPolicy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefer:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stripMetadata:         ODataMetadataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataMetadataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataVersionHelper } from './helper';\nimport { Observable } from 'rxjs';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport enum QueryOptionNames {\n  select = 'select',\n  expand = 'expand',\n  compute = 'compute',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n  count = 'count',\n}\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    exponentialDecimals?: boolean;\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n    streaming?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n  bodyQueryOptions?: QueryOptionNames[];\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  exponentialDecimals?: boolean;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  // Deserialize value/s from request body.\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  // Serialize value/s for request body.\n  serialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encode value/s for URL parameter or query-string.\n  encode(value: any, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string, ...opts: any[]): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArithmeticFunctions.html":{"url":"classes/ArithmeticFunctions.html","title":"class - ArithmeticFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArithmeticFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ceiling\n                            \n                            \n                                floor\n                            \n                            \n                                round\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ceiling\n                        \n                    \n                \n            \n            \n                \nceiling(value: T | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        floor\n                        \n                    \n                \n            \n            \n                \nfloor(value: T | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        round\n                        \n                    \n                \n            \n            \n                \nround(value: T | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArithmeticOperators.html":{"url":"classes/ArithmeticOperators.html","title":"class - ArithmeticOperators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArithmeticOperators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                div\n                            \n                            \n                                mod\n                            \n                            \n                                mul\n                            \n                            \n                                neg\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:330\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        div\n                        \n                    \n                \n            \n            \n                \ndiv(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:339\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mod\n                        \n                    \n                \n            \n            \n                \nmod(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:342\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mul\n                        \n                    \n                \n            \n            \n                \nmul(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        neg\n                        \n                    \n                \n            \n            \n                \nneg(value: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n            \n                \nsub(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:333\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        put\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string, ...opts: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:115\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, ...opts: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:114\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ODataVersionHelper } from './helper';\nimport { Observable } from 'rxjs';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport enum QueryOptionNames {\n  select = 'select',\n  expand = 'expand',\n  compute = 'compute',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n  count = 'count',\n}\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    exponentialDecimals?: boolean;\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n    streaming?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n  bodyQueryOptions?: QueryOptionNames[];\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  exponentialDecimals?: boolean;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  // Deserialize value/s from request body.\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  // Serialize value/s for request body.\n  serialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encode value/s for URL parameter or query-string.\n  encode(value: any, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string, ...opts: any[]): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CollectionFunctions.html":{"url":"classes/CollectionFunctions.html","title":"class - CollectionFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CollectionFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasSubsequence\n                            \n                            \n                                hasSubset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasSubsequence\n                        \n                    \n                \n            \n            \n                \nhasSubsequence(s1: T, s2: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s1\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasSubset\n                        \n                    \n                \n            \n            \n                \nhasSubset(s1: T, s2: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s1\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    s2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConditionalFunctions.html":{"url":"classes/ConditionalFunctions.html","title":"class - ConditionalFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConditionalFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                case\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        case\n                        \n                    \n                \n            \n            \n                \ncase(condition: T | string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                            T | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAction.html":{"url":"classes/CsdlAction.html","title":"class - CsdlAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                    Optional\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType?: CsdlReturnType, isBound?: boolean, entitySetPath?: string, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        entitySetPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        isBound\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        parameters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlParameter[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        returnType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlReturnType\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlActionImport.html":{"url":"classes/CsdlActionImport.html","title":"class - CsdlActionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlActionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, action: string, entitySet?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        entitySet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotable.html":{"url":"classes/CsdlAnnotable.html","title":"class - CsdlAnnotable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        annotationList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlAnnotation[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n  constructor(public annotationList?: CsdlAnnotation[]) {}\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n  constructor(\n    public target: string,\n    annotationList: CsdlAnnotation[],\n    public qualifier?: string\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlAnnotation {\n  constructor(public term: string, public qualifier?: string) {}\n}\n\nexport class CsdlTerm {\n  constructor(\n    public name: string,\n    public type: string,\n    public baseTerm?: string,\n    public defaultValue?: string,\n    public appliesTo?: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotation.html":{"url":"classes/CsdlAnnotation.html","title":"class - CsdlAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(term: string, qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        qualifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        term\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n  constructor(public annotationList?: CsdlAnnotation[]) {}\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n  constructor(\n    public target: string,\n    annotationList: CsdlAnnotation[],\n    public qualifier?: string\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlAnnotation {\n  constructor(public term: string, public qualifier?: string) {}\n}\n\nexport class CsdlTerm {\n  constructor(\n    public name: string,\n    public type: string,\n    public baseTerm?: string,\n    public defaultValue?: string,\n    public appliesTo?: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotations.html":{"url":"classes/CsdlAnnotations.html","title":"class - CsdlAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: string, annotationList: CsdlAnnotation[], qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        qualifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        annotationList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlAnnotable\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlAnnotable:2\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n  constructor(public annotationList?: CsdlAnnotation[]) {}\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n  constructor(\n    public target: string,\n    annotationList: CsdlAnnotation[],\n    public qualifier?: string\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlAnnotation {\n  constructor(public term: string, public qualifier?: string) {}\n}\n\nexport class CsdlTerm {\n  constructor(\n    public name: string,\n    public type: string,\n    public baseTerm?: string,\n    public defaultValue?: string,\n    public appliesTo?: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlComplexType.html":{"url":"classes/CsdlComplexType.html","title":"class - CsdlComplexType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlComplexType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                    CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        abstract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        baseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        navigationProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlNavigationProperty[]\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        openType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlProperty[]\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityContainer.html":{"url":"classes/CsdlEntityContainer.html","title":"class - CsdlEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actionImports\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySets\n                            \n                            \n                                    Public\n                                    Optional\n                                extend\n                            \n                            \n                                    Public\n                                    Optional\n                                functionImports\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                singletons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, extend?: string, entitySets?: CsdlEntitySet[], singletons?: CsdlSingleton[], functionImports?: CsdlFunctionImport[], actionImports?: CsdlActionImport[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extend\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySets\n                                                  \n                                                        \n                                                                        CsdlEntitySet[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        singletons\n                                                  \n                                                        \n                                                                        CsdlSingleton[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionImports\n                                                  \n                                                        \n                                                                    CsdlFunctionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionImports\n                                                  \n                                                        \n                                                                    CsdlActionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        actionImports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlActionImport[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        entitySets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlEntitySet[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        extend\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        functionImports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlFunctionImport[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        singletons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlSingleton[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n  constructor(\n    public name: string,\n    public extend?: string,\n    public entitySets?: CsdlEntitySet[],\n    public singletons?: CsdlSingleton[],\n    public functionImports?: CsdlFunctionImport[],\n    public actionImports?: CsdlActionImport[]\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntitySet.html":{"url":"classes/CsdlEntitySet.html","title":"class - CsdlEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entityType\n                            \n                            \n                                    Public\n                                    Optional\n                                includeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBinding\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, entityType: string, navigationPropertyBinding?: CsdlNavigationPropertyBinding[], includeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBinding\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        entityType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        includeInServiceDocument\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        navigationPropertyBinding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlNavigationPropertyBinding[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n  constructor(\n    public name: string,\n    public entityType: string,\n    public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n    public includeInServiceDocument?: boolean\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityType.html":{"url":"classes/CsdlEntityType.html","title":"class - CsdlEntityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                hasStream\n                            \n                            \n                                    Public\n                                    Optional\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, key?: CsdlKey, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean, hasStream?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        CsdlKey\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                    CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasStream\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        hasStream\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlKey\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        abstract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        baseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        navigationProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlNavigationProperty[]\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        openType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlProperty[]\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuredType\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuredType:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumMember.html":{"url":"classes/CsdlEnumMember.html","title":"class - CsdlEnumMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n  constructor(\n    public name: string,\n    public members: CsdlEnumMember[],\n    public underlyingType?: string,\n    public isFlags?: boolean\n  ) {}\n}\n\nexport class CsdlEnumMember {\n  constructor(public name: string, public value?: number) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumType.html":{"url":"classes/CsdlEnumType.html","title":"class - CsdlEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                isFlags\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                underlyingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, members: CsdlEnumMember[], underlyingType?: string, isFlags?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        CsdlEnumMember[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlyingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isFlags\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        isFlags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlEnumMember[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        underlyingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n  constructor(\n    public name: string,\n    public members: CsdlEnumMember[],\n    public underlyingType?: string,\n    public isFlags?: boolean\n  ) {}\n}\n\nexport class CsdlEnumMember {\n  constructor(public name: string, public value?: number) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunction.html":{"url":"classes/CsdlFunction.html","title":"class - CsdlFunction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                    Optional\n                                isComposable\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType: CsdlReturnType, isBound?: boolean, entitySetPath?: string, isComposable?: boolean, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isComposable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        entitySetPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        isBound\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        isComposable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        parameters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlParameter[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        returnType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlReturnType\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunctionImport.html":{"url":"classes/CsdlFunctionImport.html","title":"class - CsdlFunctionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunctionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                functionName\n                            \n                            \n                                    Public\n                                    Optional\n                                IncludeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, functionName: string, entitySet?: string, IncludeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        IncludeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        entitySet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        functionName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        IncludeInServiceDocument\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlInclude.html":{"url":"classes/CsdlInclude.html","title":"class - CsdlInclude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlInclude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n  constructor(\n    public uri: string,\n    public includes?: CsdlInclude[],\n    public includeAnnotations?: CsdlIncludeAnnotations[],\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlInclude {\n  constructor(public namespace: string, public alias?: string) {}\n}\n\nexport class CsdlIncludeAnnotations {\n  constructor(\n    public termNamespace: string,\n    public qualifier?: string,\n    public targetNamespace?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlIncludeAnnotations.html":{"url":"classes/CsdlIncludeAnnotations.html","title":"class - CsdlIncludeAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlIncludeAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                    Optional\n                                targetNamespace\n                            \n                            \n                                    Public\n                                termNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termNamespace: string, qualifier?: string, targetNamespace?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        qualifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        targetNamespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        termNamespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n  constructor(\n    public uri: string,\n    public includes?: CsdlInclude[],\n    public includeAnnotations?: CsdlIncludeAnnotations[],\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlInclude {\n  constructor(public namespace: string, public alias?: string) {}\n}\n\nexport class CsdlIncludeAnnotations {\n  constructor(\n    public termNamespace: string,\n    public qualifier?: string,\n    public targetNamespace?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlKey.html":{"url":"classes/CsdlKey.html","title":"class - CsdlKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                propertyRefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyRefs: CsdlPropertyRef[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyRefs\n                                                  \n                                                        \n                                                                    CsdlPropertyRef[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        propertyRefs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlPropertyRef[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationProperty.html":{"url":"classes/CsdlNavigationProperty.html","title":"class - CsdlNavigationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                containsTarget\n                            \n                            \n                                    Public\n                                    Optional\n                                onDelete\n                            \n                            \n                                    Public\n                                    Optional\n                                partner\n                            \n                            \n                                    Public\n                                    Optional\n                                referentialConstraints\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, partner?: string, containsTarget?: boolean, referentialConstraints?: CsdlReferentialConstraint[], onDelete?: CsdlOnDelete)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        partner\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        containsTarget\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        referentialConstraints\n                                                  \n                                                        \n                                                                        CsdlReferentialConstraint[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        onDelete\n                                                  \n                                                        \n                                                                        CsdlOnDelete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        containsTarget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlOnDelete\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        partner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        referentialConstraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlReferentialConstraint[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuralProperty\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuralProperty:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nullable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuralProperty\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuralProperty:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuralProperty\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuralProperty:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationPropertyBinding.html":{"url":"classes/CsdlNavigationPropertyBinding.html","title":"class - CsdlNavigationPropertyBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationPropertyBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string, target: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlNavigationPropertyBinding {\n  constructor(public path: string, public target: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlOnDelete.html":{"url":"classes/CsdlOnDelete.html","title":"class - CsdlOnDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlOnDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlParameter.html":{"url":"classes/CsdlParameter.html","title":"class - CsdlParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nullable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        precision\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        scale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        srid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlProperty.html":{"url":"classes/CsdlProperty.html","title":"class - CsdlProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, defaultValue?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        precision\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        scale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        srid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        unicode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuralProperty\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuralProperty:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nullable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuralProperty\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuralProperty:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlStructuralProperty\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlStructuralProperty:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlPropertyRef.html":{"url":"classes/CsdlPropertyRef.html","title":"class - CsdlPropertyRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlPropertyRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReference.html":{"url":"classes/CsdlReference.html","title":"class - CsdlReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                includeAnnotations\n                            \n                            \n                                    Public\n                                    Optional\n                                includes\n                            \n                            \n                                    Public\n                                uri\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, includes?: CsdlInclude[], includeAnnotations?: CsdlIncludeAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        includes\n                                                  \n                                                        \n                                                                        CsdlInclude[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeAnnotations\n                                                  \n                                                        \n                                                                    CsdlIncludeAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        includeAnnotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlIncludeAnnotations[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        includes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlInclude[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        annotationList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlAnnotable\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlAnnotable:2\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n  constructor(\n    public uri: string,\n    public includes?: CsdlInclude[],\n    public includeAnnotations?: CsdlIncludeAnnotations[],\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlInclude {\n  constructor(public namespace: string, public alias?: string) {}\n}\n\nexport class CsdlIncludeAnnotations {\n  constructor(\n    public termNamespace: string,\n    public qualifier?: string,\n    public targetNamespace?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReferentialConstraint.html":{"url":"classes/CsdlReferentialConstraint.html","title":"class - CsdlReferentialConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReferentialConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, referencedProperty: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencedProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        referencedProperty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReturnType.html":{"url":"classes/CsdlReturnType.html","title":"class - CsdlReturnType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReturnType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nullable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        precision\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        scale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        srid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSchema.html":{"url":"classes/CsdlSchema.html","title":"class - CsdlSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actions\n                            \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationsList\n                            \n                            \n                                    Public\n                                    Optional\n                                complexTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                entityContainer\n                            \n                            \n                                    Public\n                                    Optional\n                                entityTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                enumTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                functions\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                    Optional\n                                terms\n                            \n                            \n                                    Public\n                                    Optional\n                                typeDefinitions\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        enumTypes\n                                                  \n                                                        \n                                                                        CsdlEnumType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexTypes\n                                                  \n                                                        \n                                                                        CsdlComplexType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypes\n                                                  \n                                                        \n                                                                        CsdlEntityType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functions\n                                                  \n                                                        \n                                                                    CsdlFunction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        CsdlAction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityContainer\n                                                  \n                                                        \n                                                                        CsdlEntityContainer\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeDefinitions\n                                                  \n                                                        \n                                                                        CsdlTypeDefinition[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        terms\n                                                  \n                                                        \n                                                                        CsdlTerm[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationsList\n                                                  \n                                                        \n                                                                    CsdlAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlAction[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        annotationsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlAnnotations[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        complexTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlComplexType[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        entityContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlEntityContainer\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        entityTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlEntityType[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        enumTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlEnumType[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        functions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlFunction[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        terms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlTerm[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        typeDefinitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlTypeDefinition[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        annotationList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlAnnotable\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlAnnotable:2\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlAnnotation,\n  CsdlAnnotable,\n  CsdlTerm,\n  CsdlAnnotations,\n} from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n  constructor(\n    public namespace: string,\n    public alias?: string,\n    public enumTypes?: CsdlEnumType[],\n    public complexTypes?: CsdlComplexType[],\n    public entityTypes?: CsdlEntityType[],\n    public functions?: CsdlFunction[],\n    public actions?: CsdlAction[],\n    public entityContainer?: CsdlEntityContainer,\n    public typeDefinitions?: CsdlTypeDefinition[],\n    public terms?: CsdlTerm[],\n    public annotationsList?: CsdlAnnotations[],\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSingleton.html":{"url":"classes/CsdlSingleton.html","title":"class - CsdlSingleton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSingleton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBindings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, navigationPropertyBindings?: CsdlNavigationPropertyBinding[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBindings\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        navigationPropertyBindings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlNavigationPropertyBinding[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n  constructor(\n    public name: string,\n    public type: string,\n    public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuralProperty.html":{"url":"classes/CsdlStructuralProperty.html","title":"class - CsdlStructuralProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuralProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nullable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuredType.html":{"url":"classes/CsdlStructuredType.html","title":"class - CsdlStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                    CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        abstract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        baseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        navigationProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CsdlNavigationProperty[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        openType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlProperty[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTerm.html":{"url":"classes/CsdlTerm.html","title":"class - CsdlTerm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTerm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appliesTo\n                            \n                            \n                                    Public\n                                    Optional\n                                baseTerm\n                            \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, baseTerm?: string, defaultValue?: string, appliesTo?: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseTerm\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        appliesTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appliesTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        baseTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nullable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        precision\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        scale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        srid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n  constructor(public annotationList?: CsdlAnnotation[]) {}\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n  constructor(\n    public target: string,\n    annotationList: CsdlAnnotation[],\n    public qualifier?: string\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlAnnotation {\n  constructor(public term: string, public qualifier?: string) {}\n}\n\nexport class CsdlTerm {\n  constructor(\n    public name: string,\n    public type: string,\n    public baseTerm?: string,\n    public defaultValue?: string,\n    public appliesTo?: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTypeDefinition.html":{"url":"classes/CsdlTypeDefinition.html","title":"class - CsdlTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                underlayingType\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, underlayingType: string, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlayingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        precision\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        scale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        srid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        underlayingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        unicode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        annotationList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CsdlAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         CsdlAnnotable\n\n                            \n                        \n                    \n                        \n                                Defined in         CsdlAnnotable:2\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n  constructor(\n    public name: string,\n    public underlayingType: string,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateAndTimeFunctions.html":{"url":"classes/DateAndTimeFunctions.html","title":"class - DateAndTimeFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateAndTimeFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                day\n                            \n                            \n                                fractionalseconds\n                            \n                            \n                                hour\n                            \n                            \n                                maxdatetime\n                            \n                            \n                                mindatetime\n                            \n                            \n                                minute\n                            \n                            \n                                month\n                            \n                            \n                                now\n                            \n                            \n                                second\n                            \n                            \n                                time\n                            \n                            \n                                totaloffsetminutes\n                            \n                            \n                                totalseconds\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n            \n                \ndate(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        day\n                        \n                    \n                \n            \n            \n                \nday(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fractionalseconds\n                        \n                    \n                \n            \n            \n                \nfractionalseconds(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hour\n                        \n                    \n                \n            \n            \n                \nhour(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxdatetime\n                        \n                    \n                \n            \n            \n                \nmaxdatetime(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mindatetime\n                        \n                    \n                \n            \n            \n                \nmindatetime(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minute\n                        \n                    \n                \n            \n            \n                \nminute(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        month\n                        \n                    \n                \n            \n            \n                \nmonth(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        now\n                        \n                    \n                \n            \n            \n                \nnow()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        second\n                        \n                    \n                \n            \n            \n                \nsecond(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n            \n                \ntime(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totaloffsetminutes\n                        \n                    \n                \n            \n            \n                \ntotaloffsetminutes(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalseconds\n                        \n                    \n                \n            \n            \n                \ntotalseconds(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n            \n                \nyear(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/metadata.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldType\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, fieldType: FieldType)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldType\n                                                  \n                                                        \n                                                                        FieldType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldType\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlAction,\n  CsdlActionImport,\n  CsdlFunction,\n  CsdlFunctionImport,\n  CsdlParameter,\n  CsdlReturnType,\n} from './csdl/csdl-function-action';\nimport {\n  CsdlAnnotation,\n  CsdlAnnotations,\n  CsdlTerm,\n} from './csdl/csdl-annotation';\nimport {\n  CsdlComplexType,\n  CsdlEntityType,\n  CsdlKey,\n  CsdlPropertyRef,\n} from './csdl/csdl-structured-type';\nimport { CsdlEnumMember, CsdlEnumType } from './csdl/csdl-enum-type';\nimport {\n  CsdlInclude,\n  CsdlIncludeAnnotations,\n  CsdlReference,\n} from './csdl/csdl-reference';\nimport {\n  CsdlNavigationProperty,\n  CsdlOnDelete,\n  CsdlProperty,\n  CsdlReferentialConstraint,\n} from './csdl/csdl-structural-property';\n\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { Types } from '../../utils/types';\nimport { VERSION_4_0 } from '../../constants';\n\nenum FieldType {\n  ATTRIBUTE,\n  TAG,\n}\n\nclass Field {\n  constructor(public name: string, public fieldType: FieldType) {}\n}\n\nexport class ODataMetadata {\n  // TAGS\n  private static readonly TAG_EDMX = 'edmx:Edmx';\n  private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n  private static readonly TAG_REFERENCE = 'edmx:Reference';\n  private static readonly TAG_INCLUDE = 'edmx:Include';\n  private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n  private static readonly TAG_TERM = 'Term';\n  private static readonly TAG_ANNOTATIONS = 'Annotations';\n  private static readonly TAG_ANNOTATION = 'Annotation';\n  private static readonly TAG_SCHEMA = 'Schema';\n  private static readonly TAG_ENUM_TYPE = 'EnumType';\n  private static readonly TAG_MEMBER = 'Member';\n  private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n  private static readonly TAG_ENTITY_TYPE = 'EntityType';\n  private static readonly TAG_PROPERTY = 'Property';\n  private static readonly TAG_KEY = 'Key';\n  private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n  private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n  private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n  private static readonly TAG_ON_DELETE = 'OnDelete';\n  private static readonly TAG_FUNCTION = 'Function';\n  private static readonly TAG_RETURN_TYPE = 'ReturnType';\n  private static readonly TAG_PARAMETER = 'Parameter';\n  private static readonly TAG_ACTION = 'Action';\n  private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n  private static readonly TAG_ENTITY_SET = 'EntitySet';\n  private static readonly TAG_SINGLETON = 'Singleton';\n  private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n  private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n  private static readonly TAG_NAVIGATION_PROPERTY_BINDING =\n    'NavigationPropertyBinding';\n  private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n  // ATTRIBUTES\n  private static readonly ATTRIBUTE_VERSION = 'Version';\n  private static readonly ATTRIBUTE_URI = 'Uri';\n  private static readonly ATTRIBUTE_ALIAS = 'Alias';\n  private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n  private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n  private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n  private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n  private static readonly ATTRIBUTE_TERM = 'Term';\n  private static readonly ATTRIBUTE_NAME = 'Name';\n  private static readonly ATTRIBUTE_VALUE = 'Value';\n  private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n  private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n  private static readonly ATTRIBUTE_TYPE = 'Type';\n  private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n  private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n  private static readonly ATTRIBUTE_PRECISION = 'Precision';\n  private static readonly ATTRIBUTE_SCALE = 'Scale';\n  private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n  private static readonly ATTRIBUTE_SRID = 'SRID';\n  private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n  private static readonly ATTRIBUTE_PARTNER = 'Partner';\n  private static readonly ATTRIBUTE_PROPERTY = 'Property';\n  private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n  private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n  private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n  private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n  private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n  private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n  private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n  private static readonly ATTRIBUTE_PATH = 'Path';\n  private static readonly ATTRIBUTE_TARGET = 'Target';\n  private static readonly ATTRIBUTE_FUNCTION = 'Function';\n  private static readonly ATTRIBUTE_ACTION = 'Action';\n  private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n  private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT =\n    'IncludeInServiceDocument';\n  private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n  private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n  private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n  private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n  private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n  private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n  public readonly version: string;\n  public readonly references: CsdlReference[];\n  public readonly schemas: CsdlSchema[];\n\n  constructor(xml: string) {\n    try {\n      const parser: DOMParser = new DOMParser();\n      const document: Document = parser.parseFromString(xml, 'text/xml');\n\n      this.checkVersion(document);\n\n      this.version = this.getFieldValueByAttribute(\n        new Field(ODataMetadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n        document.documentElement.attributes\n      );\n\n      this.references = this.getObjects(\n        document.documentElement,\n        ODataMetadata.TAG_REFERENCE,\n        [\n          new Field(ODataMetadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n          new Field(ODataMetadata.TAG_INCLUDE, FieldType.TAG),\n          new Field(ODataMetadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n          new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG),\n        ]\n      );\n\n      const dataServices: Element =\n        document.documentElement.getElementsByTagName(\n          ODataMetadata.TAG_DATA_SERVICES\n        )[0];\n      this.schemas = this.getObjects(dataServices, ODataMetadata.TAG_SCHEMA, [\n        new Field(ODataMetadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n        new Field(ODataMetadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n        new Field(ODataMetadata.TAG_ENUM_TYPE, FieldType.TAG),\n        new Field(ODataMetadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ENTITY_TYPE, FieldType.TAG),\n        new Field(ODataMetadata.TAG_FUNCTION, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ACTION, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n        new Field(ODataMetadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n        new Field(ODataMetadata.TAG_TERM, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ANNOTATIONS, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG),\n      ]);\n    } catch (error) {\n      throw new Error('Unable to parse metadata, ' + error);\n    }\n  }\n\n  protected checkVersion(document: Document) {\n    // check version\n    const attributes: NamedNodeMap = document.documentElement.attributes;\n    if (!attributes) {\n      throw new Error('OData version is not specified in the metadata');\n    }\n    const attr: Attr | null = attributes.getNamedItem('Version');\n    if (attr === null) {\n      throw new Error('OData version is not specified in the metadata');\n    }\n    const odataVersion = attr?.nodeValue;\n    if (odataVersion !== VERSION_4_0) {\n      throw new Error('OData version \"' + odataVersion + '\" is not supported');\n    }\n  }\n\n  protected getObjects(\n    parentElement: Element,\n    tag: string,\n    fieldNames: Field[]\n  ): any[] {\n    let objects: any[] = [];\n\n    const children: HTMLCollection = parentElement.children;\n    for (let index = 0; index \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Function.html":{"url":"classes/Function.html","title":"class - Function","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Function\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Renderable\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    undefined\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, values: any[], normalize: boolean, escape: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        normalize\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        escape\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { name: string; values: {}; normalize: boolean; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        undefined\n                    \n                \n\n                \n                    \n                        get()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:67\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoFunctions.html":{"url":"classes/GeoFunctions.html","title":"class - GeoFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                geoDistance\n                            \n                            \n                                geoIntersects\n                            \n                            \n                                geoLength\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        geoDistance\n                        \n                    \n                \n            \n            \n                \ngeoDistance(value: T, point: string, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    point\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        geoIntersects\n                        \n                    \n                \n            \n            \n                \ngeoIntersects(value: T, polygon: string, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    polygon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        geoLength\n                        \n                    \n                \n            \n            \n                \ngeoLength(line: T, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Grouping.html":{"url":"classes/Grouping.html","title":"class - Grouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Grouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Renderable\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    undefined\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(group: Renderable)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:350\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                  \n                                                        \n                                                                        Renderable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:363\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:357\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { group: any; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        undefined\n                    \n                \n\n                \n                    \n                        get()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:353\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingAndNavigationOperators.html":{"url":"classes/GroupingAndNavigationOperators.html","title":"class - GroupingAndNavigationOperators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingAndNavigationOperators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                grouping\n                            \n                            \n                                navigation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        grouping\n                        \n                    \n                \n            \n            \n                \ngrouping(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:400\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Grouping\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigation\n                        \n                    \n                \n            \n            \n                \nnavigation(field: T, value: Field)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:404\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Navigation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lambda.html":{"url":"classes/Lambda.html","title":"class - Lambda","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lambda\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Operator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    undefined\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(op: string, values: any[], normalize: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:409\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        op\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        normalize\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         Operator\n\n                \n            \n            \n                \n                        Defined in         Operator:422\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         Operator\n\n                \n            \n            \n                \n                        Defined in         Operator:253\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { op: string; values: {}; normalize: boolean; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        undefined\n                    \n                \n\n                \n                    \n                        get()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:418\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LambdaOperators.html":{"url":"classes/LambdaOperators.html","title":"class - LambdaOperators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LambdaOperators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                any\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall(field: T, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:445\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Lambda\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        any\n                        \n                    \n                \n            \n            \n                \nany(field: T, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:441\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Lambda\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogicalOperators.html":{"url":"classes/LogicalOperators.html","title":"class - LogicalOperators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogicalOperators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                and\n                            \n                            \n                                eq\n                            \n                            \n                                ge\n                            \n                            \n                                gt\n                            \n                            \n                                has\n                            \n                            \n                                in\n                            \n                            \n                                le\n                            \n                            \n                                lt\n                            \n                            \n                                ne\n                            \n                            \n                                not\n                            \n                            \n                                or\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        and\n                        \n                    \n                \n            \n            \n                \nand(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eq\n                        \n                    \n                \n            \n            \n                \neq(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ge\n                        \n                    \n                \n            \n            \n                \nge(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gt\n                        \n                    \n                \n            \n            \n                \ngt(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:321\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        in\n                        \n                    \n                \n            \n            \n                \nin(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        le\n                        \n                    \n                \n            \n            \n                \nle(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lt\n                        \n                    \n                \n            \n            \n                \nlt(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ne\n                        \n                    \n                \n            \n            \n                \nne(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        not\n                        \n                    \n                \n            \n            \n                \nnot(value: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:318\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        or\n                        \n                    \n                \n            \n            \n                \nor(left: any, right: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:315\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    left\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    right\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Operator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Navigation.html":{"url":"classes/Navigation.html","title":"class - Navigation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Navigation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Renderable\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    undefined\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: T, value: Field)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:374\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        Field\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:388\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:381\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         { field: T; value: Field; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        undefined\n                    \n                \n\n                \n                    \n                        get()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:377\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotatable.html":{"url":"classes/ODataAnnotatable.html","title":"class - ODataAnnotatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/base.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                annotatedValue\n                            \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        annotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataAnnotation[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        annotatedValue\n                        \n                    \n                \n            \n            \n                \nannotatedValue(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/base.ts:39\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Find an annotation inside the annotatable and return its value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The value of the annotation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAnnotation\n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/base.ts:30\n                \n            \n\n\n            \n                \n                    Find an annotation inside the annotatable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function that returns true if the annotation match.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The annotation that matches the predicate.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AnnotationConfig } from '../types';\n\nexport class ODataAnnotation {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n\n  constructor(annot: AnnotationConfig) {\n    this.term = annot.term;\n    Object.assign(this, annot);\n  }\n}\n\nexport class ODataAnnotatable {\n  annotations: ODataAnnotation[];\n  constructor(config: { annotations?: AnnotationConfig[] }) {\n    this.annotations = (config.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n  }\n\n  /**\n   * Find an annotation inside the annotatable.\n   * @param predicate Function that returns true if the annotation match.\n   * @returns The annotation that matches the predicate.\n   */\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  /**\n   * Find an annotation inside the annotatable and return its value.\n   * @param term The term of the annotation to find.\n   * @returns The value of the annotation.\n   */\n  annotatedValue(term: string | RegExp): T | undefined {\n    const reg = term instanceof RegExp ? term : new RegExp(`^${term}$`);\n    const annot = this.findAnnotation((a) => reg.test(a.term));\n    if (!annot) {\n      return undefined;\n    }\n    return (annot.string ||\n      annot.bool ||\n      annot.int ||\n      annot.permissions ||\n      annot.properties) as any;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotation.html":{"url":"classes/ODataAnnotation.html","title":"class - ODataAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/base.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bool\n                            \n                            \n                                    Optional\n                                int\n                            \n                            \n                                    Optional\n                                permissions\n                            \n                            \n                                    Optional\n                                properties\n                            \n                            \n                                    Optional\n                                string\n                            \n                            \n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annot: AnnotationConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annot\n                                                  \n                                                        \n                                                                        AnnotationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        int\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        term\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/base.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AnnotationConfig } from '../types';\n\nexport class ODataAnnotation {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n\n  constructor(annot: AnnotationConfig) {\n    this.term = annot.term;\n    Object.assign(this, annot);\n  }\n}\n\nexport class ODataAnnotatable {\n  annotations: ODataAnnotation[];\n  constructor(config: { annotations?: AnnotationConfig[] }) {\n    this.annotations = (config.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n  }\n\n  /**\n   * Find an annotation inside the annotatable.\n   * @param predicate Function that returns true if the annotation match.\n   * @returns The annotation that matches the predicate.\n   */\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  /**\n   * Find an annotation inside the annotatable and return its value.\n   * @param term The term of the annotation to find.\n   * @returns The value of the annotation.\n   */\n  annotatedValue(term: string | RegExp): T | undefined {\n    const reg = term instanceof RegExp ? term : new RegExp(`^${term}$`);\n    const annot = this.findAnnotation((a) => reg.test(a.term));\n    if (!annot) {\n      return undefined;\n    }\n    return (annot.string ||\n      annot.bool ||\n      annot.int ||\n      annot.permissions ||\n      annot.properties) as any;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotations.html":{"url":"classes/ODataAnnotations.html","title":"class - ODataAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                helper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attributes\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    entitySet\n                                \n                                \n                                    type\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(helper: ODataVersionHelper, annotations: literal type, context?: ODataContext)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helper\n                                                  \n                                                        \n                                                                        ODataVersionHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotations\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        ODataContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        helper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataVersionHelper\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        attributes\n                        \n                    \n                \n            \n            \n                \nattributes(data: literal type, metadata: ODataMetadataType)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                ODataMetadataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        data\n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        entitySet\n                    \n                \n\n                \n                    \n                        getentitySet()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataContext, ODataVersionHelper } from '../../helper';\n\nimport { ODataMetadataType } from '../../types';\n\nexport abstract class ODataAnnotations {\n  constructor(\n    public helper: ODataVersionHelper,\n    protected annotations: { [annot: string]: any } = {},\n    protected context?: ODataContext\n  ) {}\n\n  attributes(data: { [name: string]: any }, metadata: ODataMetadataType): T {\n    return this.helper.attributes(data, metadata) as T;\n  }\n\n  get entitySet() {\n    return this.context?.entitySet;\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context?.type;\n  }\n\n  // Method\n  abstract clone(): ODataAnnotations;\n  abstract data(data: { [name: string]: any }): { [name: string]: any };\n}\n\nexport class ODataPropertyAnnotations extends ODataAnnotations {\n  clone(): ODataPropertyAnnotations {\n    return new ODataPropertyAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.property(data);\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entity(data);\n  }\n\n  get id() {\n    return this.helper.id(this.annotations);\n  }\n\n  get etag() {\n    return this.helper.etag(this.annotations);\n  }\n\n  get mediaEtag() {\n    return this.helper.mediaEtag(this.annotations);\n  }\n\n  get metadataEtag() {\n    return this.helper.metadataEtag(this.annotations);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get editLink() {\n    return this.helper.editLink(this.annotations);\n  }\n\n  get mediaReadLink() {\n    return this.helper.mediaReadLink(this.annotations);\n  }\n\n  get mediaEditLink() {\n    return this.helper.mediaEditLink(this.annotations);\n  }\n\n  get mediaContentType() {\n    return this.helper.mediaContentType(this.annotations);\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.helper.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entities(data);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.helper.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.helper.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.helper.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataApiOptions.html":{"url":"classes/ODataApiOptions.html","title":"class - ODataApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/options.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ApiOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                accept\n                            \n                            \n                                bodyQueryOptions\n                            \n                            \n                                etag\n                            \n                            \n                                fetchPolicy\n                            \n                            \n                                headers\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                prefer\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                stripMetadata\n                            \n                            \n                                version\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/options.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        accept\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:55\n                        \n                    \n\n            \n                \n                    Customize accept header with OData options\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bodyQueryOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryOptionNames[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:50\n                        \n                    \n\n            \n                \n                    Send query options in the request body\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        etag\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { ifMatch: true, ifNoneMatch: false }\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchPolicy\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:34\n                        \n                    \n\n            \n                \n                    Cache fetch policy\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:42\n                        \n                    \n\n            \n                \n                    Extra headers to be sent in the request\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:38\n                        \n                    \n\n            \n                \n                    Extra params to be sent in the request\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        prefer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        stringAsEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:26\n                        \n                    \n\n            \n                \n                    Send enum as string in the request\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stripMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataMetadataType\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:30\n                        \n                    \n\n            \n                \n                    Strip metadata from the response\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataVersion\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:22\n                        \n                    \n\n            \n                \n                    Default OData version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        withCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:46\n                        \n                    \n\n            \n                \n                    Http request with credentials\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/options.ts:104\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ApiOptions,\n  FetchPolicy,\n  ODataMetadataType,\n  ODataVersion,\n  Options,\n  OptionsHelper,\n  QueryOptionNames,\n} from './types';\nimport {\n  DEFAULT_FETCH_POLICY,\n  DEFAULT_STRIP_METADATA,\n  DEFAULT_VERSION,\n} from './constants';\n\nimport { ODataHelper } from './helper';\n\nexport class ODataApiOptions implements ApiOptions, OptionsHelper {\n  /**\n   * Default OData version\n   */\n  version: ODataVersion;\n  /**\n   * Send enum as string in the request\n   */\n  stringAsEnum?: boolean;\n  /**\n   * Strip metadata from the response\n   */\n  stripMetadata: ODataMetadataType;\n  /**\n   * Cache fetch policy\n   */\n  fetchPolicy: FetchPolicy;\n  /**\n   * Extra params to be sent in the request\n   */\n  params: { [param: string]: string | string[] };\n  /**\n   * Extra headers to be sent in the request\n   */\n  headers: { [param: string]: string | string[] };\n  /**\n   * Http request with credentials\n   */\n  withCredentials?: boolean;\n  /**\n   * Send query options in the request body\n   */\n  bodyQueryOptions: QueryOptionNames[];\n  /**\n   * Customize accept header with OData options\n   * @link http://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_RequestingtheJSONFormat\n   */\n  accept?: {\n    exponentialDecimals?: boolean;\n    ieee754Compatible?: boolean;\n    metadata?: ODataMetadataType;\n    streaming?: boolean;\n  };\n  etag: {\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398229\n     */\n    ifMatch: boolean;\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398230\n     */\n    ifNoneMatch: boolean;\n  } = { ifMatch: true, ifNoneMatch: false };\n  prefer?: {\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398238\n     */\n    maxPageSize?: number;\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398240\n     */\n    return?: 'representation' | 'minimal';\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398236\n     */\n    continueOnError?: boolean;\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398237\n     */\n    includeAnnotations?: string;\n  };\n\n  constructor(config: ApiOptions) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.stringAsEnum = config.stringAsEnum;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.withCredentials = config.withCredentials;\n    this.stripMetadata = config.stripMetadata || DEFAULT_STRIP_METADATA;\n    this.fetchPolicy = config.fetchPolicy || DEFAULT_FETCH_POLICY;\n    this.bodyQueryOptions = config.bodyQueryOptions || [];\n    this.accept = config.accept;\n    Object.assign(this.etag, config.etag || {});\n    this.prefer = config.prefer;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\nexport class ODataParserOptions implements OptionsHelper {\n  version: ODataVersion;\n  stringAsEnum?: boolean;\n\n  constructor(config: Options) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.stringAsEnum = config.stringAsEnum;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBaseService.html":{"url":"classes/ODataBaseService.html","title":"class - ODataBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/base.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, name: string, apiNameOrEntityType?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/base.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiNameOrEntityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:68\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:80\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType: \"property\" | \"entity\" | \"entities\" | \"none\", options: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:86\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"property\" | \"entity\" | \"entities\" | \"none\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:25\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:31\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:37\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType: \"property\" | \"entity\" | \"entities\" | \"none\", options: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"property\" | \"entity\" | \"entities\" | \"none\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        fetchNavigationProperty\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:99\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        fetchNavigationProperty\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:104\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        fetchNavigationProperty\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType: \"entity\" | \"entities\", options: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:109\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"entity\" | \"entities\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/base.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ODataActionResource,\n  ODataEntities,\n  ODataEntity,\n  ODataFunctionResource,\n  ODataNavigationPropertyResource,\n  ODataProperty,\n  ODataQueryArgumentsOptions,\n} from '../resources';\n\nimport { ODataClient } from '../client';\nimport { Observable } from 'rxjs';\n\nexport abstract class ODataBaseService {\n  constructor(\n    protected client: ODataClient,\n    protected name: string,\n    protected apiNameOrEntityType?: string\n  ) {}\n\n  get api() {\n    return this.client.apiFor(this.apiNameOrEntityType);\n  }\n\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'entity',\n    options?: ODataQueryArgumentsOptions\n  ): Observable>;\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'entities',\n    options?: ODataQueryArgumentsOptions\n  ): Observable>;\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'property',\n    options?: ODataQueryArgumentsOptions\n  ): Observable>;\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'none',\n    options?: ODataQueryArgumentsOptions\n  ): Observable;\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'property' | 'entity' | 'entities' | 'none',\n    options: ODataQueryArgumentsOptions = {}\n  ): Observable {\n    resource.query((q) => q.apply(options));\n    return resource.call(params, {\n      responseType: responseType as any,\n      ...options,\n    });\n  }\n\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'entity',\n    options?: ODataQueryArgumentsOptions\n  ): Observable>;\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'entities',\n    options?: ODataQueryArgumentsOptions\n  ): Observable>;\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'property',\n    options?: ODataQueryArgumentsOptions\n  ): Observable>;\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'none',\n    options?: ODataQueryArgumentsOptions\n  ): Observable;\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'property' | 'entity' | 'entities' | 'none',\n    options: ODataQueryArgumentsOptions = {}\n  ): Observable {\n    resource.query((q) => q.apply(options));\n    return resource.call(params, {\n      responseType: responseType as any,\n      ...options,\n    });\n  }\n\n  protected fetchNavigationProperty(\n    resource: ODataNavigationPropertyResource,\n    responseType: 'entity',\n    options?: ODataQueryArgumentsOptions\n  ): Observable>;\n  protected fetchNavigationProperty(\n    resource: ODataNavigationPropertyResource,\n    responseType: 'entities',\n    options?: ODataQueryArgumentsOptions\n  ): Observable>;\n  protected fetchNavigationProperty(\n    resource: ODataNavigationPropertyResource,\n    responseType: 'entity' | 'entities',\n    options: ODataQueryArgumentsOptions = {}\n  ): Observable {\n    resource.query((q) => q.apply(options));\n    return resource.fetch({ responseType: responseType as any, ...options });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatchRequest.html":{"url":"classes/ODataBatchRequest.html","title":"class - ODataBatchRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatchRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/batch.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: ODataRequest)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/batch.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        ODataRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataRequest\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/types/batch.ts:40\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoad\n                        \n                    \n                \n            \n            \n                \nonLoad(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  $BATCH,\n  ACCEPT,\n  APPLICATION_HTTP,\n  APPLICATION_JSON,\n  BATCH_PREFIX,\n  BINARY,\n  BOUNDARY_PREFIX_SUFFIX,\n  CHANGESET_PREFIX,\n  CONTENT_ID,\n  CONTENT_TRANSFER_ENCODING,\n  CONTENT_TYPE,\n  HTTP11,\n  MULTIPART_MIXED,\n  MULTIPART_MIXED_BOUNDARY,\n  NEWLINE,\n  NEWLINE_REGEXP,\n  ODATA_VERSION,\n  VERSION_4_0,\n  XSSI_PREFIX,\n} from '../../constants';\nimport {\n  HttpErrorResponse,\n  HttpHeaders,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Http } from '../../utils/http';\nimport { ODataApi } from '../../api';\nimport { ODataOptions } from './options';\nimport { ODataPathSegments } from '../path';\nimport { ODataRequest } from '../request';\nimport { ODataResource } from '../resource';\nimport { ODataResponse } from '../responses';\nimport { PathSegmentNames } from '../../types';\nimport { Strings } from '../../utils/strings';\n\nexport class ODataBatchRequest extends Subject> {\n  constructor(public request: ODataRequest) {\n    super();\n  }\n\n  toString() {\n    //TODO: Relative or Absolute url ?\n    let res = [\n      `${this.request.method} ${this.request.pathWithParams} ${HTTP11}`,\n    ];\n    if (\n      this.request.method === 'POST' ||\n      this.request.method === 'PATCH' ||\n      this.request.method === 'PUT'\n    ) {\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_JSON}`);\n    }\n\n    if (this.request.headers instanceof HttpHeaders) {\n      let headers = this.request.headers;\n      res = [\n        ...res,\n        ...headers\n          .keys()\n          .map((key) => `${key}: ${(headers.getAll(key) || []).join(',')}`),\n      ];\n    }\n\n    return res.join(NEWLINE);\n  }\n\n  onLoad(content: string[], status: { code: number; message: string }) {\n    let headers: HttpHeaders = new HttpHeaders();\n    var index = 1;\n    for (; index = 200 && status.code ({\n        body,\n        headers,\n        status: status.code,\n        statusText: status.message,\n        url: this.request.urlWithParams,\n      });\n      this.next(ODataResponse.fromHttpResponse(this.request, res));\n      this.complete();\n    } else {\n      // An unsuccessful request is delivered on the error channel.\n      this.error(\n        new HttpErrorResponse({\n          // The error in this case is the response body (error from the server).\n          error: body,\n          headers,\n          status: status.code,\n          statusText: status.message,\n          url: this.request.urlWithParams,\n        })\n      );\n    }\n  }\n\n  onError(content: string[], status: { code: number; text: string }) {\n    const res = new HttpErrorResponse({\n      error: content.join(NEWLINE),\n      status: status.code || 0,\n      statusText: status.text || 'Unknown Error',\n      url: this.request.urlWithParams || undefined,\n    });\n    this.error(res);\n  }\n}\n\n/**\n * OData Batch Resource\n * https://www.odata.org/getting-started/advanced-tutorial/#batch\n */\nexport class ODataBatchResource extends ODataResource {\n  // VARIABLES\n  private _requests: ODataBatchRequest[] = [];\n  requests() {\n    return this._requests.map((r) => r.request);\n  }\n\n  //#region Factory\n  static factory(api: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.add(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(api, segments);\n  }\n\n  clone() {\n    return new ODataBatchResource(this.api, this.cloneSegments());\n  }\n  //#endregion\n\n  schema() {\n    return undefined;\n  }\n\n  /**\n   * Execute the batch request\n   * @param ctx The context for the request\n   * @param options The options of the batch request\n   * @returns The result of execute the context\n   */\n  exec(\n    ctx: (batch: this) => Observable,\n    options?: ODataOptions\n  ): Observable {\n    // Store original requester\n    const current = this.api.request;\n    // Switch to the batch requester\n    this.api.request = (req: ODataRequest): Observable => {\n      if (req.api !== this.api)\n        throw new Error('Batch Request are for the same api.');\n      if (req.observe === 'events')\n        throw new Error(\"Batch Request does not allows observe == 'events'.\");\n      this._requests.push(new ODataBatchRequest(req));\n      return this._requests[this._requests.length - 1];\n    };\n    // Execute the context\n    const obs$ = ctx(this);\n    // Restore original requester\n    this.api.request = current;\n\n    if (this._requests.length >= 0) {\n      const bound = Strings.uniqueId(BATCH_PREFIX);\n      const requests = this._requests;\n      const headers = Http.mergeHttpHeaders(\n        (options && options.headers) || {},\n        {\n          [ODATA_VERSION]: VERSION_4_0,\n          [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + bound,\n          [ACCEPT]: MULTIPART_MIXED,\n        }\n      );\n      const request = new ODataRequest({\n        method: 'POST',\n        body: ODataBatchResource.buildBody(bound, requests),\n        api: this.api,\n        resource: this,\n        observe: 'response',\n        responseType: 'text',\n        headers: headers,\n        params: options ? options.params : undefined,\n        withCredentials: options ? options.withCredentials : undefined,\n      });\n      this.api.request(request).subscribe((response) => {\n        ODataBatchResource.handleResponse(requests, response);\n      });\n    }\n\n    return obs$;\n  }\n\n  body() {\n    return ODataBatchResource.buildBody(\n      Strings.uniqueId(BATCH_PREFIX),\n      this._requests\n    );\n  }\n\n  static buildBody(\n    batchBoundary: string,\n    requests: ODataBatchRequest[]\n  ): string {\n    let res = [];\n    let changesetBoundary: string | null = null;\n    let changesetId = 1;\n\n    for (const batch of requests) {\n      // if method is GET and there is a changeset boundary open then close it\n      if (batch.request.method === 'GET' && changesetBoundary !== null) {\n        res.push(\n          `${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`\n        );\n        changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (changesetBoundary === null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${batchBoundary}`);\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (batch.request.method !== 'GET') {\n        if (changesetBoundary === null) {\n          changesetBoundary = Strings.uniqueId(CHANGESET_PREFIX);\n          res.push(\n            `${CONTENT_TYPE}: ${MULTIPART_MIXED_BOUNDARY}${changesetBoundary}`\n          );\n          res.push(NEWLINE);\n        }\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}`);\n      }\n\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_HTTP}`);\n      res.push(`${CONTENT_TRANSFER_ENCODING}: ${BINARY}`);\n\n      if (batch.request.method !== 'GET') {\n        res.push(`${CONTENT_ID}: ${changesetId++}`);\n      }\n\n      res.push(NEWLINE);\n      res.push(`${batch}`);\n\n      if (batch.request.method === 'GET' || batch.request.method === 'DELETE') {\n        res.push(NEWLINE);\n      } else {\n        res.push(`${NEWLINE}${JSON.stringify(batch.request.body)}`);\n      }\n    }\n\n    if (res.length) {\n      if (changesetBoundary !== null) {\n        res.push(\n          `${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`\n        );\n        changesetBoundary = null;\n      }\n      res.push(\n        `${BOUNDARY_PREFIX_SUFFIX}${batchBoundary}${BOUNDARY_PREFIX_SUFFIX}`\n      );\n    }\n    return res.join(NEWLINE);\n  }\n\n  static handleResponse(\n    requests: ODataBatchRequest[],\n    response: ODataResponse\n  ) {\n    let chunks: string[][] = [];\n    const contentType: string = response.headers.get(CONTENT_TYPE) || '';\n    const batchBoundary: string = Http.boundaryDelimiter(contentType);\n    const endLine: string = Http.boundaryEnd(batchBoundary);\n\n    const lines: string[] = response.body.split(NEWLINE_REGEXP);\n\n    let changesetResponses: string[][] | null = null;\n    let contentId: number | null = null;\n    let changesetBoundary: string | null = null;\n    let changesetEndLine: string | null = null;\n    let startIndex: number | null = null;\n    for (let index = 0; index  {\n      const req = requests[index];\n      const { code, message } = Http.parseResponseStatus(chunk[0]);\n      req.onLoad(chunk.slice(1), { code, message });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCache.html":{"url":"classes/ODataCache.html","title":"class - ODataCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Cache\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEntry\n                            \n                            \n                                buildKey\n                            \n                            \n                                flush\n                            \n                            \n                                forget\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                    Private\n                                handleFetch\n                            \n                            \n                                    Private\n                                handleMutate\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                scope\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/cache.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/cache/cache.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildEntry\n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:50\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCacheEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildKey\n                        \n                    \n                \n            \n            \n                \nbuildKey(names: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flush\n                        \n                    \n                \n            \n            \n                \nflush()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forget\n                        \n                    \n                \n            \n            \n                \nforget(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(name: string, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:81\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleFetch\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFetch(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMutate\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMutate(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpired\n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(name: string, payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:66\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        putResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n            \n                \nscope(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n            \n                \ntags(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CACHE_KEY_SEPARATOR, DEFAULT_TIMEOUT } from '../constants';\nimport { Cache, PathSegmentNames } from '../types';\nimport { ODataBatchResource, ODataRequest, ODataResponse } from '../resources';\nimport { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout: number;\n  tags: string[];\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n\n  constructor({ timeout = DEFAULT_TIMEOUT }: { timeout?: number }) {\n    this.timeout = timeout;\n    this.entries = new Map>();\n  }\n\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  scope(req: ODataRequest): string[] {\n    const segments = req.resource.cloneSegments();\n    return segments.segments({ key: true }).reduce(\n      (acc, s) => {\n        if (s.name === PathSegmentNames.entitySet)\n          acc = [...acc, s.path() as string];\n        return acc;\n      },\n      ['request']\n    );\n  }\n\n  tags(req: ODataRequest, res: ODataResponse): string[] {\n    const tags = [];\n    const context = res.context;\n    if (context.entitySet) {\n      tags.push(\n        context.key ? `${context.entitySet}(${context.key})` : context.entitySet\n      );\n    }\n    if (context.type) tags.push(context.type);\n    return tags;\n  }\n\n  buildEntry(\n    payload: T,\n    { timeout, tags }: { timeout?: number; tags?: string[] }\n  ): ODataCacheEntry {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout || this.timeout,\n      tags: tags || [],\n    };\n  }\n\n  buildKey(names: string[]): string {\n    return names.join(CACHE_KEY_SEPARATOR);\n  }\n\n  put(\n    name: string,\n    payload: T,\n    {\n      timeout,\n      scope,\n      tags,\n    }: { timeout?: number; scope?: string[]; tags?: string[] } = {}\n  ) {\n    const entry = this.buildEntry(payload, { timeout, tags });\n    const key = this.buildKey([...(scope || []), name]);\n    this.entries.set(key, entry);\n    this.forget();\n  }\n\n  get(name: string, { scope }: { scope?: string[] } = {}): T {\n    const key = this.buildKey([...(scope || []), name]);\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry)\n      ? entry.payload\n      : undefined;\n  }\n\n  forget({\n    name,\n    scope = [],\n    tags = [],\n  }: { name?: string; scope?: string[]; tags?: string[] } = {}) {\n    // Remove expired cache entries\n    if (name !== undefined) scope.push(name);\n    const key = scope.length > 0 ? this.buildKey(scope) : undefined;\n    this.entries.forEach((entry, k) => {\n      if (\n        this.isExpired(entry) || // Expired\n        (key !== undefined && k.startsWith(key)) || // Key\n        (tags.length > 0 && tags.some((t) => entry.tags.indexOf(t) !== -1)) // Tags\n      ) {\n        this.entries.delete(k);\n      }\n    });\n  }\n\n  flush() {\n    // Remove all cache entries\n    this.entries = new Map>();\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ,\n    res$: Observable>\n  ): Observable> {\n    return req.isFetch()\n      ? this.handleFetch(req, res$)\n      : req.isMutate()\n      ? this.handleMutate(req, res$)\n      : res$;\n  }\n\n  private handleFetch(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError('No Cached');\n      }\n    }\n    if (\n      policy === 'cache-first' ||\n      policy === 'cache-and-network' ||\n      policy === 'network-only'\n    ) {\n      res$ = res$.pipe(\n        tap((res: ODataResponse) => {\n          if (res.options.cacheability !== 'no-store')\n            this.putResponse(req, res);\n        })\n      );\n    }\n    return cached !== undefined && policy !== 'network-only'\n      ? policy === 'cache-and-network'\n        ? res$.pipe(startWith(cached))\n        : of(cached)\n      : res$;\n  }\n\n  private handleMutate(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    const requests = req.isBatch()\n      ? (req.resource as ODataBatchResource)\n          .requests()\n          .filter((r) => r.isMutate())\n      : [req];\n    for (var r of requests) {\n      const scope = this.scope(r);\n      this.forget({ scope });\n    }\n    return res$;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ODataCacheEntry.html":{"url":"interfaces/ODataCacheEntry.html","title":"interface - ODataCacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ODataCacheEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lastRead\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CACHE_KEY_SEPARATOR, DEFAULT_TIMEOUT } from '../constants';\nimport { Cache, PathSegmentNames } from '../types';\nimport { ODataBatchResource, ODataRequest, ODataResponse } from '../resources';\nimport { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout: number;\n  tags: string[];\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n\n  constructor({ timeout = DEFAULT_TIMEOUT }: { timeout?: number }) {\n    this.timeout = timeout;\n    this.entries = new Map>();\n  }\n\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  scope(req: ODataRequest): string[] {\n    const segments = req.resource.cloneSegments();\n    return segments.segments({ key: true }).reduce(\n      (acc, s) => {\n        if (s.name === PathSegmentNames.entitySet)\n          acc = [...acc, s.path() as string];\n        return acc;\n      },\n      ['request']\n    );\n  }\n\n  tags(req: ODataRequest, res: ODataResponse): string[] {\n    const tags = [];\n    const context = res.context;\n    if (context.entitySet) {\n      tags.push(\n        context.key ? `${context.entitySet}(${context.key})` : context.entitySet\n      );\n    }\n    if (context.type) tags.push(context.type);\n    return tags;\n  }\n\n  buildEntry(\n    payload: T,\n    { timeout, tags }: { timeout?: number; tags?: string[] }\n  ): ODataCacheEntry {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout || this.timeout,\n      tags: tags || [],\n    };\n  }\n\n  buildKey(names: string[]): string {\n    return names.join(CACHE_KEY_SEPARATOR);\n  }\n\n  put(\n    name: string,\n    payload: T,\n    {\n      timeout,\n      scope,\n      tags,\n    }: { timeout?: number; scope?: string[]; tags?: string[] } = {}\n  ) {\n    const entry = this.buildEntry(payload, { timeout, tags });\n    const key = this.buildKey([...(scope || []), name]);\n    this.entries.set(key, entry);\n    this.forget();\n  }\n\n  get(name: string, { scope }: { scope?: string[] } = {}): T {\n    const key = this.buildKey([...(scope || []), name]);\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry)\n      ? entry.payload\n      : undefined;\n  }\n\n  forget({\n    name,\n    scope = [],\n    tags = [],\n  }: { name?: string; scope?: string[]; tags?: string[] } = {}) {\n    // Remove expired cache entries\n    if (name !== undefined) scope.push(name);\n    const key = scope.length > 0 ? this.buildKey(scope) : undefined;\n    this.entries.forEach((entry, k) => {\n      if (\n        this.isExpired(entry) || // Expired\n        (key !== undefined && k.startsWith(key)) || // Key\n        (tags.length > 0 && tags.some((t) => entry.tags.indexOf(t) !== -1)) // Tags\n      ) {\n        this.entries.delete(k);\n      }\n    });\n  }\n\n  flush() {\n    // Remove all cache entries\n    this.entries = new Map>();\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ,\n    res$: Observable>\n  ): Observable> {\n    return req.isFetch()\n      ? this.handleFetch(req, res$)\n      : req.isMutate()\n      ? this.handleMutate(req, res$)\n      : res$;\n  }\n\n  private handleFetch(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError('No Cached');\n      }\n    }\n    if (\n      policy === 'cache-first' ||\n      policy === 'cache-and-network' ||\n      policy === 'network-only'\n    ) {\n      res$ = res$.pipe(\n        tap((res: ODataResponse) => {\n          if (res.options.cacheability !== 'no-store')\n            this.putResponse(req, res);\n        })\n      );\n    }\n    return cached !== undefined && policy !== 'network-only'\n      ? policy === 'cache-and-network'\n        ? res$.pipe(startWith(cached))\n        : of(cached)\n      : res$;\n  }\n\n  private handleMutate(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    const requests = req.isBatch()\n      ? (req.resource as ODataBatchResource)\n          .requests()\n          .filter((r) => r.isMutate())\n      : [req];\n    for (var r of requests) {\n      const scope = this.scope(r);\n      this.forget({ scope });\n    }\n    return res$;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallable.html":{"url":"classes/ODataCallable.html","title":"class - ODataCallable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/callable.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bound\n                            \n                            \n                                    Optional\n                                composable\n                            \n                            \n                                    Optional\n                                entitySetPath\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                binding\n                            \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                path\n                            \n                            \n                                serialize\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bound\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        composable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        entitySetPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataCallableParser\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataSchema\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        binding\n                        \n                    \n                \n            \n            \n                \nbinding()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:103\n                \n            \n\n\n            \n                \n                    Returns the binding parameter of the callable.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The binding parameter of the callable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:75\n                \n            \n\n\n            \n                \n                    Deseialize the given value from the callable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to deserialize\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options for deserialization\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Deserialized value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encode\n                        \n                    \n                \n            \n            \n                \nencode(value: any, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:95\n                \n            \n\n\n            \n                \n                    Encode the given value for the callable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to encode\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options for encoding\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Encoded value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTypeOf\n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:53\n                \n            \n\n\n            \n                \n                    Returns a boolean indicating if the callable is of the given type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String representation of the type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        True if the callable is type of the given type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(value: any, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:85\n                \n            \n\n\n            \n                \n                    Serialize the given value for the callable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to serialize\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options for serialization\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Serialized value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n            \n                \ntype(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:44\n                \n            \n\n\n            \n                \n                    Returns a full type of the callable including the namespace/alias.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The string representation of the type.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:57\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { CallableConfig, Options, Parser } from '../types';\n\nimport { ODataCallableParser } from './parsers';\nimport { ODataSchema } from './schema';\n\nexport class ODataCallable {\n  schema: ODataSchema;\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parser: ODataCallableParser;\n\n  constructor(config: CallableConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entitySetPath = config.entitySetPath;\n    this.bound = config.bound;\n    this.composable = config.composable;\n    this.parser = new ODataCallableParser(\n      config,\n      schema.namespace,\n      schema.alias\n    );\n  }\n\n  path() {\n    let path: string;\n    if (this.entitySetPath) path = this.entitySetPath;\n    else if (this.bound) path = `${this.schema.namespace}.${this.name}`;\n    else\n      path = this.parser.return\n        ? this.api.findEntitySetForType(this.parser.return.type)?.name ||\n          this.name\n        : this.name;\n    return path;\n  }\n\n  /**\n   * Returns a full type of the callable including the namespace/alias.\n   * @param alias Use the alias of the namespace instead of the namespace.\n   * @returns The string representation of the type.\n   */\n  type({ alias = false }: { alias?: boolean } = {}) {\n    return `${alias ? this.schema.alias : this.schema.namespace}.${this.name}`;\n  }\n\n  /**\n   * Returns a boolean indicating if the callable is of the given type.\n   * @param type String representation of the type\n   * @returns True if the callable is type of the given type\n   */\n  isTypeOf(type: string) {\n    return this.parser.isTypeOf(type);\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  configure({\n    parserForType,\n  }: {\n    parserForType: (type: string) => Parser;\n  }) {\n    this.parser.configure({ options: this.api.options, parserForType });\n  }\n\n  /**\n   * Deseialize the given value from the callable.\n   * @param value Value to deserialize\n   * @param options Options for deserialization\n   * @returns Deserialized value\n   */\n  deserialize(value: any, options?: Options): any {\n    return this.parser.deserialize(value, options);\n  }\n\n  /**\n   * Serialize the given value for the callable.\n   * @param value Value to serialize\n   * @param options Options for serialization\n   * @returns Serialized value\n   */\n  serialize(value: any, options?: Options): any {\n    return this.parser.serialize(value, options);\n  }\n\n  /**\n   * Encode the given value for the callable.\n   * @param value Value to encode\n   * @param options Options for encoding\n   * @returns Encoded value\n   */\n  encode(value: any, options?: Options): any {\n    return this.parser.encode(value, options);\n  }\n\n  /**\n   * Returns the binding parameter of the callable.\n   * @returns The binding parameter of the callable.\n   */\n  binding() {\n    return this.parser.binding();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallableParser.html":{"url":"classes/ODataCallableParser.html","title":"class - ODataCallableParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallableParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/parsers/callable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                    Optional\n                                optionsHelper\n                            \n                            \n                                parameters\n                            \n                            \n                                parser\n                            \n                            \n                                    Optional\n                                return\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                binding\n                            \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        optionsHelper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OptionsHelper\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parameters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataParameterParser[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Parser\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        return\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:91\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        binding\n                        \n                    \n                \n            \n            \n                \nbinding()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encode\n                        \n                    \n                \n            \n            \n                \nencode(params: any, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTypeOf\n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(params: any, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CallableConfig,\n  NONE_PARSER,\n  Options,\n  OptionsHelper,\n  Parameter,\n  Parser,\n} from '../../types';\n\nimport { CALLABLE_BINDING_PARAMETER } from '../../constants';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { ODataParserOptions } from '../../options';\nimport { ODataStructuredTypeParser } from './structured-type';\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n  optionsHelper?: OptionsHelper;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    this.nullable = parameter.nullable;\n    this.collection = parameter.collection;\n  }\n\n  serialize(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return Array.isArray(value)\n      ? value.map((v) => this.parser.serialize(v, parserOptions))\n      : this.parser.serialize(value, parserOptions);\n  }\n\n  //Encode\n  encode(value: any, options?: Options): string {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return Array.isArray(value)\n      ? value.map((v) => this.parser.encode(v, parserOptions))\n      : this.parser.encode(value, parserOptions);\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  return?: { type: string; collection?: boolean };\n  parser: Parser;\n  parameters: ODataParameterParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(config: CallableConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || []).map(\n      ([name, p]) => new ODataParameterParser(name, p as Parameter)\n    );\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: Options): R {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return this.parser.deserialize(value, parserOptions);\n  }\n\n  // Serialize\n  serialize(params: any, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    const parameters = this.parameters\n      .filter((p) => p.name !== CALLABLE_BINDING_PARAMETER)\n      .filter((p) => p.name in params && params[p.name] !== undefined);\n    return parameters.reduce(\n      (acc, p) => ({\n        ...acc,\n        [p.name]: p.serialize(params[p.name], parserOptions),\n      }),\n      {}\n    );\n  }\n\n  //Encode\n  encode(params: any, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    const parameters = this.parameters\n      .filter((p) => p.name !== CALLABLE_BINDING_PARAMETER)\n      .filter((p) => p.name in params && params[p.name] !== undefined);\n    return parameters.reduce(\n      (acc, p) => ({\n        ...acc,\n        [p.name]: p.encode(params[p.name], parserOptions),\n      }),\n      {}\n    );\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.return)\n      this.parser = parserForType(this.return.type) || NONE_PARSER;\n    this.parameters.forEach((p) => p.configure({ parserForType, options }));\n  }\n\n  binding() {\n    return this.parameters.find((p) => p.name === CALLABLE_BINDING_PARAMETER);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitiesAnnotations.html":{"url":"classes/ODataEntitiesAnnotations.html","title":"class - ODataEntitiesAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitiesAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _functions\n                            \n                            \n                                    Public\n                                helper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                attributes\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    readLink\n                                \n                                \n                                    count\n                                \n                                \n                                    nextLink\n                                \n                                \n                                    deltaLink\n                                \n                                \n                                    top\n                                \n                                \n                                    skip\n                                \n                                \n                                    skiptoken\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _functions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        helper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataVersionHelper\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotations\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotations:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitiesAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n            \n                \ndata(data: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        function\n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributes\n                        \n                    \n                \n            \n            \n                \nattributes(data: literal type, metadata: ODataMetadataType)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:12\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                ODataMetadataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:130\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        count\n                    \n                \n\n                \n                    \n                        getcount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:134\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextLink\n                    \n                \n\n                \n                    \n                        getnextLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:138\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deltaLink\n                    \n                \n\n                \n                    \n                        getdeltaLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:142\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:151\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skiptoken\n                    \n                \n\n                \n                    \n                        getskiptoken()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:156\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:162\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataContext, ODataVersionHelper } from '../../helper';\n\nimport { ODataMetadataType } from '../../types';\n\nexport abstract class ODataAnnotations {\n  constructor(\n    public helper: ODataVersionHelper,\n    protected annotations: { [annot: string]: any } = {},\n    protected context?: ODataContext\n  ) {}\n\n  attributes(data: { [name: string]: any }, metadata: ODataMetadataType): T {\n    return this.helper.attributes(data, metadata) as T;\n  }\n\n  get entitySet() {\n    return this.context?.entitySet;\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context?.type;\n  }\n\n  // Method\n  abstract clone(): ODataAnnotations;\n  abstract data(data: { [name: string]: any }): { [name: string]: any };\n}\n\nexport class ODataPropertyAnnotations extends ODataAnnotations {\n  clone(): ODataPropertyAnnotations {\n    return new ODataPropertyAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.property(data);\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entity(data);\n  }\n\n  get id() {\n    return this.helper.id(this.annotations);\n  }\n\n  get etag() {\n    return this.helper.etag(this.annotations);\n  }\n\n  get mediaEtag() {\n    return this.helper.mediaEtag(this.annotations);\n  }\n\n  get metadataEtag() {\n    return this.helper.metadataEtag(this.annotations);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get editLink() {\n    return this.helper.editLink(this.annotations);\n  }\n\n  get mediaReadLink() {\n    return this.helper.mediaReadLink(this.annotations);\n  }\n\n  get mediaEditLink() {\n    return this.helper.mediaEditLink(this.annotations);\n  }\n\n  get mediaContentType() {\n    return this.helper.mediaContentType(this.annotations);\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.helper.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entities(data);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.helper.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.helper.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.helper.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityAnnotations.html":{"url":"classes/ODataEntityAnnotations.html","title":"class - ODataEntityAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _functions\n                            \n                            \n                                    Private\n                                    Optional\n                                _properties\n                            \n                            \n                                    Public\n                                helper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                            \n                                attributes\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    etag\n                                \n                                \n                                    mediaEtag\n                                \n                                \n                                    metadataEtag\n                                \n                                \n                                    readLink\n                                \n                                \n                                    editLink\n                                \n                                \n                                    mediaReadLink\n                                \n                                \n                                    mediaEditLink\n                                \n                                \n                                    mediaContentType\n                                \n                                \n                                    properties\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _functions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        helper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataVersionHelper\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotations\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotations:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntityAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n            \n                \ndata(data: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        function\n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        property\n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributes\n                        \n                    \n                \n            \n            \n                \nattributes(data: literal type, metadata: ODataMetadataType)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:12\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                ODataMetadataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        etag\n                    \n                \n\n                \n                    \n                        getetag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEtag\n                    \n                \n\n                \n                    \n                        getmediaEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadataEtag\n                    \n                \n\n                \n                    \n                        getmetadataEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        editLink\n                    \n                \n\n                \n                    \n                        geteditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaReadLink\n                    \n                \n\n                \n                    \n                        getmediaReadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEditLink\n                    \n                \n\n                \n                    \n                        getmediaEditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaContentType\n                    \n                \n\n                \n                    \n                        getmediaContentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:88\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        properties\n                    \n                \n\n                \n                    \n                        getproperties()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:93\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:105\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataContext, ODataVersionHelper } from '../../helper';\n\nimport { ODataMetadataType } from '../../types';\n\nexport abstract class ODataAnnotations {\n  constructor(\n    public helper: ODataVersionHelper,\n    protected annotations: { [annot: string]: any } = {},\n    protected context?: ODataContext\n  ) {}\n\n  attributes(data: { [name: string]: any }, metadata: ODataMetadataType): T {\n    return this.helper.attributes(data, metadata) as T;\n  }\n\n  get entitySet() {\n    return this.context?.entitySet;\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context?.type;\n  }\n\n  // Method\n  abstract clone(): ODataAnnotations;\n  abstract data(data: { [name: string]: any }): { [name: string]: any };\n}\n\nexport class ODataPropertyAnnotations extends ODataAnnotations {\n  clone(): ODataPropertyAnnotations {\n    return new ODataPropertyAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.property(data);\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entity(data);\n  }\n\n  get id() {\n    return this.helper.id(this.annotations);\n  }\n\n  get etag() {\n    return this.helper.etag(this.annotations);\n  }\n\n  get mediaEtag() {\n    return this.helper.mediaEtag(this.annotations);\n  }\n\n  get metadataEtag() {\n    return this.helper.metadataEtag(this.annotations);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get editLink() {\n    return this.helper.editLink(this.annotations);\n  }\n\n  get mediaReadLink() {\n    return this.helper.mediaReadLink(this.annotations);\n  }\n\n  get mediaEditLink() {\n    return this.helper.mediaEditLink(this.annotations);\n  }\n\n  get mediaContentType() {\n    return this.helper.mediaContentType(this.annotations);\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.helper.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entities(data);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.helper.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.helper.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.helper.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityContainer.html":{"url":"classes/ODataEntityContainer.html","title":"class - ODataEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-container.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotatable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entitySets\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                            \n                                annotations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                titelize\n                            \n                            \n                                annotatedValue\n                            \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityContainerConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityContainerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entitySets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataEntitySet[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataSchema\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotatable\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotatable:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        titelize\n                        \n                    \n                \n            \n            \n                \ntitelize(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:31\n                \n            \n\n\n            \n                \n                    Create a nicer looking title.\nTitleize is meant for creating pretty output.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The titleized string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotatedValue\n                        \n                    \n                \n            \n            \n                \nannotatedValue(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Find an annotation inside the annotatable and return its value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The value of the annotation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAnnotation\n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:30\n\n                \n            \n\n\n            \n                \n                    Find an annotation inside the annotatable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function that returns true if the annotation match.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The annotation that matches the predicate.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityContainerConfig } from '../types';\nimport { Strings } from '../utils/strings';\nimport { ODataAnnotatable } from './base';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataSchema } from './schema';\n\nexport class ODataEntityContainer extends ODataAnnotatable {\n  schema: ODataSchema;\n  name: string;\n  entitySets: ODataEntitySet[];\n\n  constructor(config: EntityContainerConfig, schema: ODataSchema) {\n    super(config);\n    this.schema = schema;\n    this.name = config.name;\n    this.entitySets = (config.entitySets || []).map(\n      (config) => new ODataEntitySet(config, schema)\n    );\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  /**\n   * Create a nicer looking title.\n   * Titleize is meant for creating pretty output.\n   * @param term The term of the annotation to find.\n   * @returns The titleized string.\n   */\n  titelize(term: string | RegExp): string {\n    return this.annotatedValue(term) || Strings.titleCase(this.name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityService.html":{"url":"classes/ODataEntityService.html","title":"class - ODataEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataBaseService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                attach\n                            \n                            \n                                    Public\n                                    Abstract\n                                entity\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    structuredTypeSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        attach\n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        entity\n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:62\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:25\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        fetchNavigationProperty\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:99\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        structuredTypeSchema\n                    \n                \n\n                \n                    \n                        getstructuredTypeSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:13\n                                \n                            \n                    \n                        \n                                The schema for the structured type.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { EntityKey, ODataResource } from '../resources';\n\nimport { ODataBaseService } from './base';\nimport { ODataModel } from '../models/model';\n\nexport abstract class ODataEntityService extends ODataBaseService {\n  public abstract entity(key?: EntityKey): ODataResource;\n  public abstract attach>(value: M): void;\n\n  /**\n   * The schema for the structured type.\n   */\n  get structuredTypeSchema() {\n    return this.apiNameOrEntityType !== undefined\n      ? this.api.findStructuredTypeForType(this.apiNameOrEntityType)\n      : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySet.html":{"url":"classes/ODataEntitySet.html","title":"class - ODataEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-set.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotatable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entityType\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                            \n                                service\n                            \n                            \n                                annotations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isTypeOf\n                            \n                            \n                                titelize\n                            \n                            \n                                annotatedValue\n                            \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntitySetConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntitySetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entityType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataSchema\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotatable\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotatable:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isTypeOf\n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:34\n                \n            \n\n\n            \n                \n                    Returns a boolean indicating if the entity set is of the given type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String representation of the type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the callable is type of the given type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titelize\n                        \n                    \n                \n            \n            \n                \ntitelize(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:25\n                \n            \n\n\n            \n                \n                    Create a nicer looking title.\nTitleize is meant for creating pretty output.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The titleized string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotatedValue\n                        \n                    \n                \n            \n            \n                \nannotatedValue(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Find an annotation inside the annotatable and return its value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The value of the annotation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAnnotation\n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:30\n\n                \n            \n\n\n            \n                \n                    Find an annotation inside the annotatable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function that returns true if the annotation match.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The annotation that matches the predicate.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:40\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitySetConfig } from '../types';\nimport { Strings } from '../utils/strings';\nimport { ODataAnnotatable } from './base';\nimport { ODataSchema } from './schema';\n\nexport class ODataEntitySet extends ODataAnnotatable {\n  schema: ODataSchema;\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  constructor(config: EntitySetConfig, schema: ODataSchema) {\n    super(config);\n    this.schema = schema;\n    this.name = config.name;\n    this.entityType = config.entityType;\n    this.service = config.service;\n  }\n\n  /**\n   * Create a nicer looking title.\n   * Titleize is meant for creating pretty output.\n   * @param term The term of the annotation to find.\n   * @returns The titleized string.\n   */\n  titelize(term: string | RegExp): string {\n    return this.annotatedValue(term) || Strings.titleCase(this.name);\n  }\n\n  /**\n   * Returns a boolean indicating if the entity set is of the given type.\n   * @param type String representation of the type\n   * @returns True if the callable is type of the given type\n   */\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias) names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySetService.html":{"url":"classes/ODataEntitySetService.html","title":"class - ODataEntitySetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity-set.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Public\n                                fetchAll\n                            \n                            \n                                    Public\n                                fetchMany\n                            \n                            \n                                    Public\n                                fetchOne\n                            \n                            \n                                    Public\n                                fetchOrCreate\n                            \n                            \n                                    Public\n                                modify\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    entitySetSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attach\n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(model: M)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:37\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n                    Attach an existing model to this service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The model to attach.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attach\n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(model: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attach\n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(model: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(attrs: Partial, options?: ODataOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:91\n                \n            \n\n\n            \n                \n                    Create an entity in the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The attributes for the entity.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                ODataOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(key: EntityKey, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:138\n                \n            \n\n\n            \n                \n                    Delete an entity in the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The entity key.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        entities\n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:21\n                \n            \n\n\n            \n                \n                    Get the entity set resource for this service.\n\n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        entity\n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:29\n\n                \n            \n\n\n            \n                \n                    Get the entity resource for this service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The entity key.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        fetchAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAll(options?: ODataOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:58\n                \n            \n\n\n            \n                \n                    Get all entities from the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ODataOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        fetchMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchMany(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:67\n                \n            \n\n\n            \n                \n                    Get entities from the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        fetchOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOne(key: EntityKey, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:79\n                \n            \n\n\n            \n                \n                    Get an entity from the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The entity key.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        fetchOrCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrCreate(key: EntityKey, attrs: Partial, undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:155\n                \n            \n\n\n            \n                \n                    Get or create an entity in the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The entity key.\n\n                                    \n                                \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The attributes for the entity.\n\n                                    \n                                \n                                \n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        modify\n                        \n                    \n                \n            \n            \n                \n                    \n                    modify(key: EntityKey, attrs: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:122\n                \n            \n\n\n            \n                \n                    Patch an entity in the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The entity key.\n\n                                    \n                                \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The attributes for the entity.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(attrs: Partial, undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:175\n                \n            \n\n\n            \n                \n                    Save an entity in the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The attributes for the entity.\n\n                                    \n                                \n                                \n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(key: EntityKey, attrs: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:105\n                \n            \n\n\n            \n                \n                    Update an entity in the entity set.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The entity key.\n\n                                    \n                                \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The attributes for the entity.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:62\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:25\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        fetchNavigationProperty\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:99\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        entitySetSchema\n                    \n                \n\n                \n                    \n                        getentitySetSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:50\n                                \n                            \n                    \n                        \n                                The schema for the entity set.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {\n  EntityKey,\n  ODataEntities,\n  ODataEntity,\n  ODataEntityResource,\n  ODataEntitySetResource,\n  ODataOptions,\n} from '../resources';\nimport { Observable, throwError } from 'rxjs';\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ODataCollection } from '../models/collection';\nimport { ODataEntityService } from './entity';\nimport { ODataModel } from '../models/model';\nimport { catchError } from 'rxjs/operators';\n\nexport class ODataEntitySetService extends ODataEntityService {\n  /**\n   * Get the entity set resource for this service.\n   */\n  public entities(): ODataEntitySetResource {\n    return this.client.entitySet(this.name, this.apiNameOrEntityType);\n  }\n\n  /**\n   * Get the entity resource for this service.\n   * @param key The entity key.\n   */\n  public entity(key?: EntityKey): ODataEntityResource {\n    return this.entities().entity(key);\n  }\n\n  /**\n   * Attach an existing model to this service.\n   * @param model The model to attach.\n   */\n  public attach>(model: M): void;\n  public attach>>(model: C): void;\n  public attach(model: any): void {\n    if (model instanceof ODataModel) {\n      model.attach(this.entities().entity());\n    } else if (model instanceof ODataCollection) {\n      model.attach(this.entities());\n    }\n  }\n\n  /**\n   * The schema for the entity set.\n   */\n  get entitySetSchema() {\n    return this.api.findEntitySetByName(this.name);\n  }\n\n  /**\n   * Get all entities from the entity set.\n   * @param options The options for the request.\n   */\n  public fetchAll(options?: ODataOptions): Observable {\n    return this.entities().fetchAll(options);\n  }\n\n  /**\n   * Get entities from the entity set.\n   * @param withCount Get the count of the entities.\n   * @param options The options for the request.\n   */\n  public fetchMany(\n    options?: ODataOptions & { withCount?: boolean }\n  ): Observable> {\n    return this.entities().fetch(options);\n  }\n\n  /**\n   * Get an entity from the entity set.\n   * @param key The entity key.\n   * @param etag The etag for the entity.\n   * @param options The options for the request.\n   */\n  public fetchOne(\n    key: EntityKey,\n    options?: ODataOptions & { etag?: string }\n  ): Observable> {\n    return this.entity(key).fetch(options);\n  }\n\n  /**\n   * Create an entity in the entity set.\n   * @param attrs The attributes for the entity.\n   * @param options The options for the request.\n   */\n  public create(\n    attrs: Partial,\n    options?: ODataOptions\n  ): Observable> {\n    return this.entities().create(attrs, options);\n  }\n\n  /**\n   * Update an entity in the entity set.\n   * @param key The entity key.\n   * @param attrs The attributes for the entity.\n   * @param etag The etag for the entity.\n   * @param options The options for the request.\n   */\n  public update(\n    key: EntityKey,\n    attrs: Partial,\n    options?: ODataOptions & { etag?: string }\n  ): Observable> {\n    const res = this.entity(key);\n    if (!res.hasKey()) return throwError('Resource without key');\n    return res.update(attrs, options);\n  }\n\n  /**\n   * Patch an entity in the entity set.\n   * @param key The entity key.\n   * @param attrs The attributes for the entity.\n   * @param etag The etag for the entity.\n   * @param options The options for the request.\n   */\n  public modify(\n    key: EntityKey,\n    attrs: Partial,\n    options?: ODataOptions & { etag?: string }\n  ): Observable> {\n    const res = this.entity(key);\n    if (!res.hasKey()) return throwError('Resource without key');\n    return res.modify(attrs, options);\n  }\n\n  /**\n   * Delete an entity in the entity set.\n   * @param key The entity key.\n   * @param etag The etag for the entity.\n   * @param options The options for the request.\n   */\n  public destroy(\n    key: EntityKey,\n    options?: ODataOptions & { etag?: string }\n  ) {\n    const res = this.entity(key);\n    if (!res.hasKey()) return throwError('Resource without key');\n    return res.destroy(options);\n  }\n\n  //#region Shortcuts\n  /**\n   * Get or create an entity in the entity set.\n   * @param key The entity key.\n   * @param attrs The attributes for the entity.\n   * @param etag The etag for the entity.\n   * @param options The options for the request.\n   */\n  public fetchOrCreate(\n    key: EntityKey,\n    attrs: Partial,\n    { etag, ...options }: { etag?: string } & ODataOptions = {}\n  ): Observable> {\n    return this.fetchOne(key, { etag, ...options }).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.status === 404) return this.create(attrs, options);\n        else return throwError(error);\n      })\n    );\n  }\n\n  /**\n   * Save an entity in the entity set.\n   * @param attrs The attributes for the entity.\n   * @param method The method to use.\n   * @param etag The etag for the entity.\n   * @param options The options for the request.\n   */\n  public save(\n    attrs: Partial,\n    {\n      etag,\n      method,\n      ...options\n    }: {\n      etag?: string;\n      method?: 'create' | 'update' | 'modify';\n    } & ODataOptions = {}\n  ) {\n    let schema = this.structuredTypeSchema;\n    if (method === undefined && schema !== undefined && schema.isCompoundKey())\n      return throwError(\n        'Composite key require a specific method, use create/update/patch'\n      );\n    let key = schema && schema.resolveKey(attrs);\n    if (method === undefined) method = key !== undefined ? 'update' : 'create';\n    if ((method === 'update' || method === 'modify') && key === undefined)\n      return throwError(\"Can't update/patch entity without key\");\n    return method === 'create'\n      ? this.create(attrs, options)\n      : method === 'modify'\n      ? this.modify(key, attrs, { etag, ...options })\n      : this.update(key, attrs, { etag, ...options });\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityTypeKey.html":{"url":"classes/ODataEntityTypeKey.html","title":"class - ODataEntityTypeKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityTypeKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/parsers/structured-type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/parsers/structured-type.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/structured-type.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/structured-type.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Objects, Strings, Types } from '../../utils';\nimport {\n  Parser,\n  StructuredTypeFieldConfig,\n  StructuredTypeConfig,\n  OptionsHelper,\n  NONE_PARSER,\n  StructuredTypeFieldOptions,\n  Options,\n} from '../../types';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { COMPUTED, DESCRIPTION, LONG_DESCRIPTION } from '../../constants';\nimport { ODataAnnotatable } from '../base';\nimport { raw } from '../../resources/query';\nimport { ODataParserOptions } from '../../options';\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaCustom = {\n  [P in keyof T]?: (\n    schema: any,\n    field: ODataStructuredTypeFieldParser\n  ) => any;\n};\ntype JsonSchemaExpand = { [P in keyof T]?: JsonSchemaOptions };\ntype JsonSchemaRequired = { [P in keyof T]?: boolean };\nexport type JsonSchemaOptions = {\n  select?: JsonSchemaSelect;\n  custom?: JsonSchemaCustom;\n  expand?: JsonSchemaExpand;\n  required?: JsonSchemaRequired;\n};\n\nexport class ODataEntityTypeKey {\n  name: string;\n  alias?: string;\n  constructor({ name, alias }: { name: string; alias?: string }) {\n    this.name = name;\n    this.alias = alias;\n  }\n}\n\nexport class ODataReferential {\n  property: string;\n  referencedProperty: string;\n  constructor({\n    property,\n    referencedProperty,\n  }: {\n    property: string;\n    referencedProperty: string;\n  }) {\n    this.property = property;\n    this.referencedProperty = referencedProperty;\n  }\n}\n\nexport class ODataStructuredTypeFieldParser\n  extends ODataAnnotatable\n  implements Parser\n{\n  name: string;\n  private structuredType: ODataStructuredTypeParser;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  precision?: number;\n  scale?: number;\n  referentials: ODataReferential[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    name: string,\n    structuredType: ODataStructuredTypeParser,\n    field: StructuredTypeFieldConfig\n  ) {\n    super(field);\n    this.name = name;\n    this.structuredType = structuredType;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.referentials = (field.referentials || []).map(\n      (referential) => new ODataReferential(referential)\n    );\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.collection = Boolean(field.collection);\n    this.navigation = Boolean(field.navigation);\n    this.precision = field.precision;\n    this.scale = field.scale;\n  }\n\n  validate(\n    value: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'modify';\n      navigation?: boolean;\n    } = {}\n  ):\n    | { [name: string]: any }\n    | { [name: string]: any }[]\n    | string[]\n    | undefined {\n    let errors;\n    if (this.collection && Array.isArray(value)) {\n      errors = value.map((v) => this.validate(v, { method, navigation })) as {\n        [name: string]: any[];\n      }[];\n    } else if (\n      (this.isStructuredType() &&\n        typeof value === 'object' &&\n        value !== null) ||\n      (this.navigation && value !== undefined)\n    ) {\n      errors =\n        this.structured().validate(value, { method, navigation }) ||\n        ({} as { [name: string]: any[] });\n    } else if (\n      this.isEnumType() &&\n      (typeof value === 'string' || typeof value === 'number')\n    ) {\n      errors = this.enum().validate(value, { method, navigation });\n    } else {\n      // IsEdmType\n      const computed = this.annotatedValue(COMPUTED);\n      errors = [];\n      if (\n        !this.nullable &&\n        (value === null || (value === undefined && method !== 'modify')) && // Is null or undefined without patch?\n        !(computed && method === 'create') // Not (Is Computed field and create) ?\n      ) {\n        errors.push(`required`);\n      }\n      if (\n        this.maxLength !== undefined &&\n        typeof value === 'string' &&\n        value.length > this.maxLength\n      ) {\n        errors.push(`maxlength`);\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n\n  //#region Deserialize\n  private parse(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options?: Options): T {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? value.map((v) => this.parse(parser, v, parserOptions))\n        : this.parse(parser, value, parserOptions);\n    }\n    return this.parser.deserialize(value, {\n      field: this,\n      ...parserOptions,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Serialize\n  private toJson(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? (value as any[]).map((v) => this.toJson(parser, v, parserOptions))\n        : this.toJson(parser, value, parserOptions);\n    }\n    return this.parser.serialize(value, {\n      field: this,\n      ...parserOptions,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Encode\n  encode(value: T, options?: Options): string {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return this.parser.encode(value, {\n      field: this,\n      ...parserOptions,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n    if (this.default !== undefined) {\n      this.default = this.deserialize(this.default, options);\n    }\n  }\n\n  //#region Json Schema\n  // https://json-schema.org/\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any =\n      this.parser instanceof ODataStructuredTypeFieldParser ||\n      this.parser instanceof ODataStructuredTypeParser ||\n      this.parser instanceof ODataEnumTypeParser\n        ? this.parser.toJsonSchema(options)\n        : ({ title: this.name, type: 'object' } as any);\n\n    if (\n      [\n        'Edm.String',\n        'Edm.Date',\n        'Edm.TimeOfDay',\n        'Edm.DateTimeOffset',\n        'Edm.Guid',\n        'Edm.Binary',\n      ].indexOf(this.type) !== -1\n    ) {\n      schema.type = 'string';\n      if (this.type === 'Edm.Date') schema.format = 'date';\n      else if (this.type === 'Edm.TimeOfDay') schema.format = 'time';\n      else if (this.type === 'Edm.DateTimeOffset') schema.format = 'date-time';\n      else if (this.type === 'Edm.Guid')\n        schema.pattern =\n          '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$';\n      else if (this.type === 'Edm.Binary') schema.contentEncoding = 'base64';\n      else if (this.type === 'Edm.String' && this.maxLength)\n        schema.maxLength = this.maxLength;\n    } else if (\n      ['Edm.Int64', 'Edm.Int32', 'Edm.Int16', 'Edm.Byte', 'Edm.SByte'].indexOf(\n        this.type\n      ) !== -1\n    ) {\n      //TODO: Range\n      schema.type = 'integer';\n    } else if (['Edm.Decimal', 'Edm.Double'].indexOf(this.type) !== -1) {\n      schema.type = 'number';\n    } else if (['Edm.Boolean'].indexOf(this.type) !== -1) {\n      schema.type = 'boolean';\n    }\n    if (this.default) schema.default = this.default;\n    if (this.nullable) schema.type = [schema.type, 'null'];\n    if (this.collection)\n      schema = {\n        type: 'array',\n        items: schema,\n        additionalItems: false,\n      };\n    return schema;\n  }\n  //#endregion\n\n  isKey() {\n    return (\n      this.structuredType.keys?.find((k) => k.name === this.name) !== undefined\n    );\n  }\n\n  hasReferentials() {\n    return this.referentials.length !== 0;\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataStructuredTypeParser\n  extends ODataAnnotatable\n  implements Parser\n{\n  name: string;\n  namespace: string;\n  open: boolean;\n  children: ODataStructuredTypeParser[] = [];\n  alias?: string;\n  base?: string;\n  parent?: ODataStructuredTypeParser;\n  keys?: ODataEntityTypeKey[];\n  fields: ODataStructuredTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    config: StructuredTypeConfig,\n    namespace: string,\n    alias?: string\n  ) {\n    super(config);\n    this.name = config.name;\n    this.base = config.base;\n    this.open = config.open || false;\n    this.namespace = namespace;\n    this.alias = alias;\n    if (Array.isArray(config.keys))\n      this.keys = config.keys.map((key) => new ODataEntityTypeKey(key));\n    this.fields = Object.entries(\n      config.fields as { [P in keyof T]: StructuredTypeFieldConfig }\n    ).map(\n      ([name, config]) => new ODataStructuredTypeFieldParser(name, this, config)\n    );\n  }\n\n  /**\n   * Create a nicer looking title.\n   * Titleize is meant for creating pretty output.\n   * @param term The term of the annotation to find.\n   * @returns The titleized string.\n   */\n  titelize(term: string | RegExp): string {\n    return this.annotatedValue(term) || Strings.titleCase(this.name);\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  typeFor(name: string): string | undefined {\n    const field = this.fields.find((f) => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : undefined;\n  }\n\n  findChildParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): ODataStructuredTypeParser | undefined {\n    if (predicate(this)) return this;\n    let match: ODataStructuredTypeParser | undefined;\n    for (let ch of this.children) {\n      match = ch.findChildParser(predicate);\n      if (match !== undefined) break;\n    }\n    return match;\n  }\n\n  childParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): Parser {\n    return this.findChildParser(predicate) || NONE_PARSER;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: Options): T {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.deserialize(value, parserOptions);\n    const fields = this.fields.filter(\n      (f) =>\n        f.name in value && value[f.name] !== undefined && value[f.name] !== null\n    );\n    return {\n      ...value,\n      ...fields.reduce(\n        (acc, f) => ({\n          ...acc,\n          [f.name]: f.deserialize(value[f.name], parserOptions),\n        }),\n        {}\n      ),\n    };\n  }\n\n  // Serialize\n  serialize(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.serialize(value, parserOptions);\n    const fields = this.fields.filter(\n      (f) =>\n        f.name in value &&\n        (value as any)[f.name] !== undefined &&\n        (value as any)[f.name] !== null\n    );\n    return {\n      ...value,\n      ...fields.reduce(\n        (acc, f) => ({\n          ...acc,\n          [f.name]: f.serialize((value as any)[f.name], parserOptions),\n        }),\n        {}\n      ),\n    };\n  }\n\n  // Encode\n  encode(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return raw(JSON.stringify(this.serialize(value, parserOptions)));\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.base) {\n      const parent = parserForType(this.base) as ODataStructuredTypeParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach((f) => f.configure({ parserForType, options }));\n  }\n\n  resolveKey(value: any): any {\n    let key = this.parent?.resolveKey(value) || {};\n    if (Array.isArray(this.keys) && this.keys.length > 0) {\n      for (var k of this.keys) {\n        let v = value as any;\n        let structured = this as ODataStructuredTypeParser | undefined;\n        let field: ODataStructuredTypeFieldParser | undefined;\n        for (let name of k.name.split('/')) {\n          if (structured === undefined) break;\n          field = structured.fields.find((f) => f.name === name);\n          if (field !== undefined) {\n            v = Types.isPlainObject(v) ? v[field.name] : v;\n            structured = field.isStructuredType()\n              ? field.structured()\n              : undefined;\n          }\n        }\n        if (field !== undefined && v !== undefined) {\n          key[k.alias || field.name] = field.encode(v);\n        }\n      }\n    }\n    if (Types.isEmpty(key)) return undefined;\n    return Objects.resolveKey(key);\n  }\n\n  defaults(): { [name: string]: any } {\n    let value = this.parent?.defaults() || {};\n    let fields = this.fields.filter(\n      (f) => f.default !== undefined || f.isStructuredType()\n    );\n    return {\n      ...value,\n      ...fields.reduce((acc, f) => {\n        let value = f.isStructuredType()\n          ? f.structured().defaults()\n          : f.default;\n        return Types.isEmpty(value) ? acc : { ...acc, [f.name]: value };\n      }, {}),\n    };\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any = this.parent?.toJsonSchema(options) || {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      $id: `${this.namespace}.${this.name}`,\n      title: this.titelize(DESCRIPTION),\n      description: this.annotatedValue(LONG_DESCRIPTION),\n      type: 'object',\n      properties: {},\n      required: [],\n    };\n    const fields = this.fields.filter(\n      (f) =>\n        (!f.navigation || (options.expand && f.name in options.expand)) &&\n        (!options.select || (options.select).indexOf(f.name) !== -1)\n    );\n    schema.properties = Object.assign(\n      {},\n      schema.properties,\n      fields\n        .map((f) => {\n          let expand =\n            options.expand && f.name in options.expand\n              ? (options.expand as any)[f.name]\n              : undefined;\n          let schema = f.toJsonSchema(expand);\n          if (options.custom && f.name in options.custom)\n            schema = (\n              options.custom[f.name as keyof T] as (\n                schema: any,\n                field: ODataStructuredTypeFieldParser\n              ) => any\n            )(schema, f);\n          return { [f.name]: schema };\n        })\n        .reduce((acc, v) => Object.assign(acc, v), {})\n    );\n    schema.required = [\n      ...schema.required,\n      ...fields\n        .filter((f) =>\n          options.required && f.name in options.required\n            ? options.required[f.name as keyof T]\n            : !f.nullable\n        )\n        .map((f) => f.name),\n    ];\n    return schema;\n  }\n\n  validate(\n    attrs: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      create?: boolean;\n      method?: 'create' | 'update' | 'modify';\n      navigation?: boolean;\n    } = {}\n  ): { [name: string]: any } | undefined {\n    const errors = (this.parent?.validate(attrs, { method, navigation }) ||\n      {}) as { [name: string]: any };\n    const fields = this.fields.filter((f) => !f.navigation || navigation);\n    for (var field of fields) {\n      const value = attrs[field.name as keyof T];\n      const errs = field.validate(value, { method, navigation });\n      if (errs !== undefined) {\n        errors[field.name] = errs;\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumType.html":{"url":"classes/ODataEnumType.html","title":"class - ODataEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/enum-type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotatable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                            \n                                annotations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                fields\n                            \n                            \n                                findFieldByName\n                            \n                            \n                                findFieldByValue\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                mapFields\n                            \n                            \n                                serialize\n                            \n                            \n                                titelize\n                            \n                            \n                                type\n                            \n                            \n                                annotatedValue\n                            \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataEnumTypeParser\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataSchema\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotatable\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotatable:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:102\n                \n            \n\n\n            \n                \n                    Deseialize the given value from the enum type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to deserialize\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options for deserialization\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     E\n\n                    \n                    \n                        Deserialized value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encode\n                        \n                    \n                \n            \n            \n                \nencode(value: E, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:122\n                \n            \n\n\n            \n                \n                    Encode the given value for the enum type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            E\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to encode\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options for encoding\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Encoded value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n            \n                \nfields()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:65\n                \n            \n\n\n            \n                \n                    Returns the fields of the enum type.\n\n\n                    \n                    \n                    \n                        Returns :         ODataEnumTypeFieldParser[]\n\n                    \n                    \n                        The fields of the enum type.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findFieldByName\n                        \n                    \n                \n            \n            \n                \nfindFieldByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:74\n                \n            \n\n\n            \n                \n                    Find a field by name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The field with the given name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findFieldByValue\n                        \n                    \n                \n            \n            \n                \nfindFieldByValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:83\n                \n            \n\n\n            \n                \n                    Find a field by value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value of the field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The field with the given value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTypeOf\n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:49\n                \n            \n\n\n            \n                \n                    Returns a boolean indicating if the enum type is of the given type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String representation of the type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        True if the callable is type of the given type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapFields\n                        \n                    \n                \n            \n            \n                \nmapFields(mapper: (field: ODataEnumTypeFieldParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:92\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Map the fields of the enum type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mapper\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function that maps the value to the new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The fields mapped by the mapper\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(value: E, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:112\n                \n            \n\n\n            \n                \n                    Serialize the given value for the enum type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            E\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to serialize\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options for serialization\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Serialized value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titelize\n                        \n                    \n                \n            \n            \n                \ntitelize(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:31\n                \n            \n\n\n            \n                \n                    Create a nicer looking title.\nTitleize is meant for creating pretty output.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The titleized string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n            \n                \ntype(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:40\n                \n            \n\n\n            \n                \n                    Returns a full type of the enum type including the namespace/alias.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The string representation of the type.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotatedValue\n                        \n                    \n                \n            \n            \n                \nannotatedValue(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Find an annotation inside the annotatable and return its value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The value of the annotation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAnnotation\n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:30\n\n                \n            \n\n\n            \n                \n                    Find an annotation inside the annotatable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function that returns true if the annotation match.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The annotation that matches the predicate.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:53\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EnumTypeConfig, Options } from '../types';\nimport { ODataEnumTypeFieldParser, ODataEnumTypeParser } from './parsers';\n\nimport { ODataAnnotatable, ODataAnnotation } from './base';\nimport { ODataSchema } from './schema';\nimport { Strings } from '../utils/strings';\n\nexport class ODataEnumType extends ODataAnnotatable {\n  schema: ODataSchema;\n  name: string;\n  parser: ODataEnumTypeParser;\n  members: { [name: string]: number } | { [value: number]: string };\n  constructor(config: EnumTypeConfig, schema: ODataSchema) {\n    super(config);\n    this.schema = schema;\n    this.name = config.name;\n    this.members = config.members;\n    this.parser = new ODataEnumTypeParser(\n      config,\n      schema.namespace,\n      schema.alias\n    );\n  }\n\n  /**\n   * Create a nicer looking title.\n   * Titleize is meant for creating pretty output.\n   * @param term The term of the annotation to find.\n   * @returns The titleized string.\n   */\n  titelize(term: string | RegExp): string {\n    return this.annotatedValue(term) || Strings.titleCase(this.name);\n  }\n\n  /**\n   * Returns a full type of the enum type including the namespace/alias.\n   * @param alias Use the alias of the namespace instead of the namespace.\n   * @returns The string representation of the type.\n   */\n  type({ alias = false }: { alias?: boolean } = {}) {\n    return `${alias ? this.schema.alias : this.schema.namespace}.${this.name}`;\n  }\n\n  /**\n   * Returns a boolean indicating if the enum type is of the given type.\n   * @param type String representation of the type\n   * @returns True if the callable is type of the given type\n   */\n  isTypeOf(type: string) {\n    return this.parser.isTypeOf(type);\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  configure() {\n    this.parser.configure({ options: this.api.options });\n  }\n\n  /**\n   * Returns the fields of the enum type.\n   * @returns The fields of the enum type.\n   */\n  fields(): ODataEnumTypeFieldParser[] {\n    return this.parser.fields;\n  }\n\n  /**\n   * Find a field by name.\n   * @param name The name of the field\n   * @returns The field with the given name\n   */\n  findFieldByName(name: string) {\n    return this.fields().find((f) => f.name === name);\n  }\n\n  /**\n   * Find a field by value.\n   * @param value The value of the field\n   * @returns The field with the given value\n   */\n  findFieldByValue(value: number) {\n    return this.fields().find((f) => f.value === value);\n  }\n\n  /**\n   * Map the fields of the enum type.\n   * @param mapper Function that maps the value to the new value\n   * @returns The fields mapped by the mapper\n   */\n  mapFields(mapper: (field: ODataEnumTypeFieldParser) => T) {\n    return this.fields().map(mapper);\n  }\n\n  /**\n   * Deseialize the given value from the enum type.\n   * @param value Value to deserialize\n   * @param options Options for deserialization\n   * @returns Deserialized value\n   */\n  deserialize(value: any, options?: Options): E {\n    return this.parser.deserialize(value, options);\n  }\n\n  /**\n   * Serialize the given value for the enum type.\n   * @param value Value to serialize\n   * @param options Options for serialization\n   * @returns Serialized value\n   */\n  serialize(value: E, options?: Options): any {\n    return this.parser.serialize(value, options);\n  }\n\n  /**\n   * Encode the given value for the enum type.\n   * @param value Value to encode\n   * @param options Options for encoding\n   * @returns Encoded value\n   */\n  encode(value: E, options?: Options): any {\n    return this.parser.encode(value, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumTypeFieldParser.html":{"url":"classes/ODataEnumTypeFieldParser.html","title":"class - ODataEnumTypeFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumTypeFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/parsers/enum-type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotatable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                value\n                            \n                            \n                                annotations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                titleize\n                            \n                            \n                                annotatedValue\n                            \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: EnumTypeFieldConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        EnumTypeFieldConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotatable\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotatable:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        titleize\n                        \n                    \n                \n            \n            \n                \ntitleize(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotatedValue\n                        \n                    \n                \n            \n            \n                \nannotatedValue(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Find an annotation inside the annotatable and return its value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The value of the annotation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAnnotation\n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:30\n\n                \n            \n\n\n            \n                \n                    Find an annotation inside the annotatable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function that returns true if the annotation match.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The annotation that matches the predicate.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Enums, Strings } from '../../utils';\nimport { raw } from '../../resources/query';\nimport { ODataAnnotatable } from '../base';\nimport {\n  EnumTypeConfig,\n  Parser,\n  OptionsHelper,\n  EnumTypeFieldConfig,\n  Options,\n} from '../../types';\nimport { ODataParserOptions } from '../../options';\n\nexport class ODataEnumTypeFieldParser extends ODataAnnotatable {\n  name: string;\n  value: number;\n\n  constructor(name: string, field: EnumTypeFieldConfig) {\n    super(field);\n    this.name = name;\n    this.value = field.value;\n  }\n\n  titleize(term: string | RegExp): string {\n    return this.annotatedValue(term) || this.name;\n  }\n}\n\nexport class ODataEnumTypeParser\n  extends ODataAnnotatable\n  implements Parser\n{\n  name: string;\n  namespace: string;\n  alias?: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(config: EnumTypeConfig, namespace: string, alias?: string) {\n    super(config);\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields).map(\n      ([name, f]) => new ODataEnumTypeFieldParser(name, f)\n    );\n  }\n\n  /**\n   * Create a nicer looking title.\n   * Titleize is meant for creating pretty output.\n   * @param term The term of the annotation to find.\n   * @returns The titleized string.\n   */\n  titelize(term: string | RegExp): string {\n    return this.annotatedValue(term) || Strings.titleCase(this.name);\n  }\n\n  configure({ options }: { options: OptionsHelper }) {\n    this.optionsHelper = options;\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: string, options?: Options): T {\n    // string -> number\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.flags) {\n      return Enums.toValues(this.members, value).reduce(\n        (acc, v) => acc | v,\n        0\n      ) as any;\n    } else {\n      return Enums.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: T, options?: Options): string {\n    // Enum are string | number\n    // string | number -> string\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.flags) {\n      const names = Enums.toNames(this.members, value);\n      return !parserOptions?.stringAsEnum\n        ? `${this.namespace}.${this.name}'${names.join(', ')}'`\n        : names.join(', ');\n    } else {\n      const name = Enums.toName(this.members, value);\n      return !parserOptions?.stringAsEnum\n        ? `${this.namespace}.${this.name}'${name}'`\n        : name;\n    }\n  }\n\n  //Encode\n  encode(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    const serialized = this.serialize(value, parserOptions);\n    return parserOptions?.stringAsEnum\n      ? raw(`'${serialized}'`)\n      : raw(serialized);\n  }\n\n  // Json Schema\n  toJsonSchema() {\n    let property = {\n      title: this.name,\n      type: 'string',\n    };\n    property.enum = this.fields.map((f) => f.name);\n    return property;\n  }\n\n  validate(\n    member: string | number,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'modify';\n      navigation?: boolean;\n    } = {}\n  ): string[] | undefined {\n    if (this.flags) {\n      let members = Enums.toValues(this.members, member);\n      return members.some((member) => !(member in this.members))\n        ? ['mismatch']\n        : undefined;\n    } else {\n      return !(member in this.members) ? ['mismatch'] : undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumTypeParser.html":{"url":"classes/ODataEnumTypeParser.html","title":"class - ODataEnumTypeParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumTypeParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/parsers/enum-type.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotatable\n            \n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                fields\n                            \n                            \n                                    Optional\n                                flags\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                    Optional\n                                optionsHelper\n                            \n                            \n                                annotations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                serialize\n                            \n                            \n                                titelize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                validate\n                            \n                            \n                                annotatedValue\n                            \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataEnumTypeFieldParser[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        optionsHelper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OptionsHelper\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotatable\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotatable:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(value: string, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encode\n                        \n                    \n                \n            \n            \n                \nencode(value: T, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTypeOf\n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titelize\n                        \n                    \n                \n            \n            \n                \ntitelize(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:58\n                \n            \n\n\n            \n                \n                    Create a nicer looking title.\nTitleize is meant for creating pretty output.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The titleized string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJsonSchema\n                        \n                    \n                \n            \n            \n                \ntoJsonSchema()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(member: string | number, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/enum-type.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotatedValue\n                        \n                    \n                \n            \n            \n                \nannotatedValue(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Find an annotation inside the annotatable and return its value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The value of the annotation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAnnotation\n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:30\n\n                \n            \n\n\n            \n                \n                    Find an annotation inside the annotatable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function that returns true if the annotation match.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The annotation that matches the predicate.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Enums, Strings } from '../../utils';\nimport { raw } from '../../resources/query';\nimport { ODataAnnotatable } from '../base';\nimport {\n  EnumTypeConfig,\n  Parser,\n  OptionsHelper,\n  EnumTypeFieldConfig,\n  Options,\n} from '../../types';\nimport { ODataParserOptions } from '../../options';\n\nexport class ODataEnumTypeFieldParser extends ODataAnnotatable {\n  name: string;\n  value: number;\n\n  constructor(name: string, field: EnumTypeFieldConfig) {\n    super(field);\n    this.name = name;\n    this.value = field.value;\n  }\n\n  titleize(term: string | RegExp): string {\n    return this.annotatedValue(term) || this.name;\n  }\n}\n\nexport class ODataEnumTypeParser\n  extends ODataAnnotatable\n  implements Parser\n{\n  name: string;\n  namespace: string;\n  alias?: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(config: EnumTypeConfig, namespace: string, alias?: string) {\n    super(config);\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields).map(\n      ([name, f]) => new ODataEnumTypeFieldParser(name, f)\n    );\n  }\n\n  /**\n   * Create a nicer looking title.\n   * Titleize is meant for creating pretty output.\n   * @param term The term of the annotation to find.\n   * @returns The titleized string.\n   */\n  titelize(term: string | RegExp): string {\n    return this.annotatedValue(term) || Strings.titleCase(this.name);\n  }\n\n  configure({ options }: { options: OptionsHelper }) {\n    this.optionsHelper = options;\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: string, options?: Options): T {\n    // string -> number\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.flags) {\n      return Enums.toValues(this.members, value).reduce(\n        (acc, v) => acc | v,\n        0\n      ) as any;\n    } else {\n      return Enums.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: T, options?: Options): string {\n    // Enum are string | number\n    // string | number -> string\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.flags) {\n      const names = Enums.toNames(this.members, value);\n      return !parserOptions?.stringAsEnum\n        ? `${this.namespace}.${this.name}'${names.join(', ')}'`\n        : names.join(', ');\n    } else {\n      const name = Enums.toName(this.members, value);\n      return !parserOptions?.stringAsEnum\n        ? `${this.namespace}.${this.name}'${name}'`\n        : name;\n    }\n  }\n\n  //Encode\n  encode(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    const serialized = this.serialize(value, parserOptions);\n    return parserOptions?.stringAsEnum\n      ? raw(`'${serialized}'`)\n      : raw(serialized);\n  }\n\n  // Json Schema\n  toJsonSchema() {\n    let property = {\n      title: this.name,\n      type: 'string',\n    };\n    property.enum = this.fields.map((f) => f.name);\n    return property;\n  }\n\n  validate(\n    member: string | number,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'modify';\n      navigation?: boolean;\n    } = {}\n  ): string[] | undefined {\n    if (this.flags) {\n      let members = Enums.toValues(this.members, member);\n      return members.some((member) => !(member in this.members))\n        ? ['mismatch']\n        : undefined;\n    } else {\n      return !(member in this.members) ? ['mismatch'] : undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInMemoryCache.html":{"url":"classes/ODataInMemoryCache.html","title":"class - ODataInMemoryCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInMemoryCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/memory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                buildKey\n                            \n                            \n                                flush\n                            \n                            \n                                forget\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleFetch\n                            \n                            \n                                    Private\n                                handleMutate\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                scope\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/memory.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataCache\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataCache:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataCache\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataCache:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putResponse\n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildEntry\n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:50\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCacheEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildKey\n                        \n                    \n                \n            \n            \n                \nbuildKey(names: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flush\n                        \n                    \n                \n            \n            \n                \nflush()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:108\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forget\n                        \n                    \n                \n            \n            \n                \nforget(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(name: string, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:81\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleFetch\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFetch(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:128\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMutate\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMutate(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:163\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpired\n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(name: string, payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:66\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n            \n                \nscope(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n            \n                \ntags(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { ODataRequest, ODataResponse } from '../resources';\n\nimport { ODataCache } from './cache';\n\nexport class ODataInMemoryCache extends ODataCache {\n  constructor({ timeout }: { timeout?: number } = {}) {\n    super({ timeout });\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    var scope = this.scope(req);\n    var tags = this.tags(req, res);\n    this.put(req.pathWithParams, res, {\n      timeout: res.options.maxAge,\n      scope,\n      tags,\n    });\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    var scope = this.scope(req);\n    return this.get(req.pathWithParams, { scope });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInStorageCache.html":{"url":"classes/ODataInStorageCache.html","title":"class - ODataInStorageCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInStorageCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                storage\n                            \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flush\n                            \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                restore\n                            \n                            \n                                store\n                            \n                            \n                                buildEntry\n                            \n                            \n                                buildKey\n                            \n                            \n                                forget\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleFetch\n                            \n                            \n                                    Private\n                                handleMutate\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                scope\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/storage.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/cache/storage.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/cache/storage.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataCache\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataCache:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataCache\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataCache:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        flush\n                        \n                    \n                \n            \n            \n                \nflush()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putResponse\n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restore\n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildEntry\n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:50\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCacheEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildKey\n                        \n                    \n                \n            \n            \n                \nbuildKey(names: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forget\n                        \n                    \n                \n            \n            \n                \nforget(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(name: string, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:81\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleFetch\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFetch(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:128\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMutate\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMutate(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:163\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpired\n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(name: string, payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:66\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n            \n                \nscope(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n            \n                \ntags(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataCache, ODataCacheEntry } from './cache';\nimport { ODataRequest, ODataResponse } from '../resources';\n\ninterface ResponseJson {\n  body: any | null;\n  headers: { [name: string]: string | string[] };\n  status: number;\n  statusText: string;\n  url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  name: string;\n  storage: Storage;\n\n  constructor({\n    name,\n    storage = sessionStorage,\n    timeout,\n  }: {\n    timeout?: number;\n    name: string;\n    storage?: Storage;\n  }) {\n    super({ timeout });\n    this.name = name;\n    this.storage = storage;\n    this.restore();\n    window.addEventListener('beforeunload', () => this.store());\n  }\n\n  store() {\n    this.storage.setItem(\n      this.name,\n      JSON.stringify(Array.from(this.entries.entries()))\n    );\n  }\n\n  restore() {\n    this.entries = new Map>(\n      JSON.parse(this.storage.getItem(this.name) || '[]')\n    );\n  }\n\n  flush() {\n    super.flush();\n    this.store();\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    const scope = this.scope(req);\n    const tags = this.tags(req, res);\n    this.put(req.pathWithParams, res.toJSON(), {\n      timeout: res.options.maxAge,\n      scope,\n      tags,\n    });\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const scope = this.scope(req);\n    const data = this.get(req.pathWithParams, { scope });\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ODataModule.html":{"url":"modules/ODataModule.html","title":"module - ODataModule","body":"\n                   \n\n\n\n\n    Modules\n    ODataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-odata/src/lib/module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ODataClient\n                        \n                        \n                            ODataServiceFactory\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configs: ApiConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                ApiConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ApiConfig } from './types';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ODATA_CONFIGURATIONS } from './tokens';\nimport { ODataClient } from './client';\nimport { ODataServiceFactory } from './services/index';\nimport { ODataSettings } from './settings';\n\nexport function createSettings(configs: ApiConfig[]) {\n  return new ODataSettings(...configs);\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ODataClient, ODataServiceFactory],\n})\nexport class ODataModule {\n  public static forRoot(\n    ...configs: ApiConfig[]\n  ): ModuleWithProviders {\n    return {\n      ngModule: ODataModule,\n      providers: [\n        { provide: ODATA_CONFIGURATIONS, useValue: configs },\n        {\n          provide: ODataSettings,\n          useFactory: createSettings,\n          deps: [ODATA_CONFIGURATIONS],\n        },\n        ODataClient,\n        ODataServiceFactory,\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataParameterParser.html":{"url":"classes/ODataParameterParser.html","title":"class - ODataParameterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataParameterParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/parsers/callable.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                nullable\n                            \n                            \n                                    Optional\n                                optionsHelper\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                encode\n                            \n                            \n                                enum\n                            \n                            \n                                isEdmType\n                            \n                            \n                                isEnumType\n                            \n                            \n                                isStructuredType\n                            \n                            \n                                serialize\n                            \n                            \n                                structured\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, parameter: Parameter)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameter\n                                                  \n                                                        \n                                                                        Parameter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        collection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nullable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        optionsHelper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OptionsHelper\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Parser\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encode\n                        \n                    \n                \n            \n            \n                \nencode(value: any, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enum\n                        \n                    \n                \n            \n            \n                \nenum()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEdmType\n                        \n                    \n                \n            \n            \n                \nisEdmType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnumType\n                        \n                    \n                \n            \n            \n                \nisEnumType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStructuredType\n                        \n                    \n                \n            \n            \n                \nisStructuredType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options?: Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structured\n                        \n                    \n                \n            \n            \n                \nstructured()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/parsers/callable.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CallableConfig,\n  NONE_PARSER,\n  Options,\n  OptionsHelper,\n  Parameter,\n  Parser,\n} from '../../types';\n\nimport { CALLABLE_BINDING_PARAMETER } from '../../constants';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { ODataParserOptions } from '../../options';\nimport { ODataStructuredTypeParser } from './structured-type';\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n  optionsHelper?: OptionsHelper;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    this.nullable = parameter.nullable;\n    this.collection = parameter.collection;\n  }\n\n  serialize(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return Array.isArray(value)\n      ? value.map((v) => this.parser.serialize(v, parserOptions))\n      : this.parser.serialize(value, parserOptions);\n  }\n\n  //Encode\n  encode(value: any, options?: Options): string {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return Array.isArray(value)\n      ? value.map((v) => this.parser.encode(v, parserOptions))\n      : this.parser.encode(value, parserOptions);\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  return?: { type: string; collection?: boolean };\n  parser: Parser;\n  parameters: ODataParameterParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(config: CallableConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || []).map(\n      ([name, p]) => new ODataParameterParser(name, p as Parameter)\n    );\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: Options): R {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return this.parser.deserialize(value, parserOptions);\n  }\n\n  // Serialize\n  serialize(params: any, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    const parameters = this.parameters\n      .filter((p) => p.name !== CALLABLE_BINDING_PARAMETER)\n      .filter((p) => p.name in params && params[p.name] !== undefined);\n    return parameters.reduce(\n      (acc, p) => ({\n        ...acc,\n        [p.name]: p.serialize(params[p.name], parserOptions),\n      }),\n      {}\n    );\n  }\n\n  //Encode\n  encode(params: any, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    const parameters = this.parameters\n      .filter((p) => p.name !== CALLABLE_BINDING_PARAMETER)\n      .filter((p) => p.name in params && params[p.name] !== undefined);\n    return parameters.reduce(\n      (acc, p) => ({\n        ...acc,\n        [p.name]: p.encode(params[p.name], parserOptions),\n      }),\n      {}\n    );\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.return)\n      this.parser = parserForType(this.return.type) || NONE_PARSER;\n    this.parameters.forEach((p) => p.configure({ parserForType, options }));\n  }\n\n  binding() {\n    return this.parameters.find((p) => p.name === CALLABLE_BINDING_PARAMETER);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataParserOptions.html":{"url":"classes/ODataParserOptions.html","title":"class - ODataParserOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataParserOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/options.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Options)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/options.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        stringAsEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataVersion\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/options.ts:110\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/options.ts:118\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ApiOptions,\n  FetchPolicy,\n  ODataMetadataType,\n  ODataVersion,\n  Options,\n  OptionsHelper,\n  QueryOptionNames,\n} from './types';\nimport {\n  DEFAULT_FETCH_POLICY,\n  DEFAULT_STRIP_METADATA,\n  DEFAULT_VERSION,\n} from './constants';\n\nimport { ODataHelper } from './helper';\n\nexport class ODataApiOptions implements ApiOptions, OptionsHelper {\n  /**\n   * Default OData version\n   */\n  version: ODataVersion;\n  /**\n   * Send enum as string in the request\n   */\n  stringAsEnum?: boolean;\n  /**\n   * Strip metadata from the response\n   */\n  stripMetadata: ODataMetadataType;\n  /**\n   * Cache fetch policy\n   */\n  fetchPolicy: FetchPolicy;\n  /**\n   * Extra params to be sent in the request\n   */\n  params: { [param: string]: string | string[] };\n  /**\n   * Extra headers to be sent in the request\n   */\n  headers: { [param: string]: string | string[] };\n  /**\n   * Http request with credentials\n   */\n  withCredentials?: boolean;\n  /**\n   * Send query options in the request body\n   */\n  bodyQueryOptions: QueryOptionNames[];\n  /**\n   * Customize accept header with OData options\n   * @link http://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_RequestingtheJSONFormat\n   */\n  accept?: {\n    exponentialDecimals?: boolean;\n    ieee754Compatible?: boolean;\n    metadata?: ODataMetadataType;\n    streaming?: boolean;\n  };\n  etag: {\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398229\n     */\n    ifMatch: boolean;\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398230\n     */\n    ifNoneMatch: boolean;\n  } = { ifMatch: true, ifNoneMatch: false };\n  prefer?: {\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398238\n     */\n    maxPageSize?: number;\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398240\n     */\n    return?: 'representation' | 'minimal';\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398236\n     */\n    continueOnError?: boolean;\n    /**\n     * @link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398237\n     */\n    includeAnnotations?: string;\n  };\n\n  constructor(config: ApiOptions) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.stringAsEnum = config.stringAsEnum;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.withCredentials = config.withCredentials;\n    this.stripMetadata = config.stripMetadata || DEFAULT_STRIP_METADATA;\n    this.fetchPolicy = config.fetchPolicy || DEFAULT_FETCH_POLICY;\n    this.bodyQueryOptions = config.bodyQueryOptions || [];\n    this.accept = config.accept;\n    Object.assign(this.etag, config.etag || {});\n    this.prefer = config.prefer;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\nexport class ODataParserOptions implements OptionsHelper {\n  version: ODataVersion;\n  stringAsEnum?: boolean;\n\n  constructor(config: Options) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.stringAsEnum = config.stringAsEnum;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegments.html":{"url":"classes/ODataPathSegments.html","title":"class - ODataPathSegments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path/segments.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clone\n                            \n                            \n                                find\n                            \n                            \n                                first\n                            \n                            \n                                get\n                            \n                            \n                                keys\n                            \n                            \n                                last\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                segments\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments?: ODataSegment[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path/segments.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataSegment[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _segments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataSegment[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/path/segments.ts:50\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(name: string, path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPathSegments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(predicate: (segment: ODataSegment) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n            \n                \nfirst(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n            \n                \nkeys(values?: (EntityKey | undefined)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                (EntityKey | undefined)[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last\n                        \n                    \n                \n            \n            \n                \nlast(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathAndParams\n                        \n                    \n                \n            \n            \n                \npathAndParams(escape: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    escape\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n            \n                \nsegments(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n            \n                \ntypes(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/segments.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { raw, buildPathAndQuery } from '../query';\n\nimport { Types, Dates, Objects } from '../../utils';\n\nimport { PATH_SEPARATOR } from '../../constants';\nimport { EntityKey } from '../resource';\nimport { PathSegmentNames } from '../../types';\nimport { SegmentHandler } from './handlers';\n\nexport type ODataSegment = {\n  name: PathSegmentNames;\n  path: string;\n  type?: string;\n  key?: any;\n  parameters?: any;\n};\n\nfunction pathSegmentsBuilder(\n  segment: ODataSegment,\n  escape: boolean = false\n): [string, { [name: string]: any }] {\n  if (segment.name === PathSegmentNames.function) {\n    let [path, params] = segment.parameters\n      ? buildPathAndQuery({\n          func: { [segment.path]: segment.parameters },\n          escape,\n        })\n      : buildPathAndQuery({ func: segment.path, escape });\n    if (path.startsWith(PATH_SEPARATOR)) {\n      path = path.slice(1);\n    }\n    return [path, params];\n  } else {\n    let key = segment.key;\n    // HACK: Check guid string\n    if (\n      typeof key === 'string' &&\n      /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(\n        key\n      )\n    ) {\n      key = raw(key);\n    }\n    let [path, params] = key ? buildPathAndQuery({ key, escape }) : ['', {}];\n    return [segment.path + path, params];\n  }\n}\n\nexport class ODataPathSegments {\n  private _segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this._segments = segments || [];\n  }\n\n  pathAndParams(escape: boolean = false): [string, { [name: string]: any }] {\n    const result = this._segments.reduce(\n      (acc, segment) => {\n        const [path, params] = pathSegmentsBuilder(segment, escape);\n        acc.paths.push(path);\n        acc.params = Object.assign(acc.params, params);\n        return acc;\n      },\n      { paths: [] as string[], params: {} as { [name: string]: any } }\n    );\n    return [result.paths.join(PATH_SEPARATOR), result.params];\n  }\n\n  types({ key = false }: { key?: boolean } = {}): string[] {\n    return this.segments({ key })\n      .map((s) => s.type())\n      .filter((t) => t !== undefined) as string[];\n  }\n\n  keys(values?: (EntityKey | undefined)[]) {\n    const segments = this.segments({ key: true });\n    if (values !== undefined) {\n      segments.forEach((segment, index) => {\n        const key = values[index];\n        if (key === undefined) {\n          segment.clearKey();\n        } else {\n          segment.key(key);\n        }\n      });\n    }\n    return segments.map((s) => s.key() as EntityKey | undefined);\n  }\n\n  toString(): string {\n    const [path, params] = this.pathAndParams();\n    return (\n      path +\n      Object.entries(params)\n        .filter(([, value]) => value)\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&')\n    );\n  }\n\n  toJSON() {\n    return this._segments.map((s) => {\n      let json = {\n        name: s.name as string,\n        path: s.path,\n      } as any;\n      if (s.type !== undefined) json.type = s.type;\n      if (s.key !== undefined) json.key = s.key;\n      if (s.parameters !== undefined) json.parameters = s.parameters;\n      return json;\n    });\n  }\n\n  clone() {\n    const segments = Objects.clone(this._segments);\n    return new ODataPathSegments(segments);\n  }\n\n  find(predicate: (segment: ODataSegment) => boolean) {\n    //Backward Find\n    return [...this._segments].reverse().find(predicate);\n  }\n\n  segments({ key = false }: { key?: boolean } = {}) {\n    let segments = [...this._segments];\n    if (key)\n      segments = segments.filter(\n        (s) =>\n          [\n            PathSegmentNames.entitySet,\n            PathSegmentNames.navigationProperty,\n            PathSegmentNames.property,\n          ].indexOf(s.name) !== -1\n      );\n    return segments.map((s) => new SegmentHandler(s));\n  }\n\n  first({ key = false }: { key?: boolean } = {}) {\n    const segments = this.segments({ key });\n    return segments.length > 0 ? segments[0] : undefined;\n  }\n\n  last({ key = false }: { key?: boolean } = {}) {\n    const segments = this.segments({ key });\n    return segments.length > 0 ? segments[segments.length - 1] : undefined;\n  }\n\n  add(name: string, path: string) {\n    const segment = { name, path } as ODataSegment;\n    this._segments.push(segment);\n    return new SegmentHandler(segment);\n  }\n\n  get(name: string) {\n    let segment = this.find((s) => s.name === name);\n    if (segment === undefined)\n      throw Error(`No Segment for name ${name} was found`);\n    return new SegmentHandler(segment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegmentsHandler.html":{"url":"classes/ODataPathSegmentsHandler.html","title":"class - ODataPathSegmentsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegmentsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path/handlers.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                entitySet\n                            \n                            \n                                function\n                            \n                            \n                                keys\n                            \n                            \n                                navigationProperty\n                            \n                            \n                                property\n                            \n                            \n                                singleton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments: ODataPathSegments)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n            \n                \naction()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entitySet\n                        \n                    \n                \n            \n            \n                \nentitySet()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        function\n                        \n                    \n                \n            \n            \n                \nfunction()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n            \n                \nkeys(values?: (EntityKey | undefined)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                (EntityKey | undefined)[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationProperty\n                        \n                    \n                \n            \n            \n                \nnavigationProperty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        property\n                        \n                    \n                \n            \n            \n                \nproperty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        singleton\n                        \n                    \n                \n            \n            \n                \nsingleton()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PathSegmentNames } from '../../types';\nimport { Types } from '../../utils';\n\nimport { EntityKey } from '../resource';\nimport type { ODataPathSegments, ODataSegment } from './segments';\n\nexport class SegmentHandler {\n  constructor(private segment: ODataSegment) {}\n  get name() {\n    return this.segment.name;\n  }\n  type(value?: string) {\n    if (value !== undefined) this.segment.type = value;\n    return this.segment.type;\n  }\n  path(value?: string) {\n    if (value !== undefined) this.segment.path = value;\n    return this.segment.path;\n  }\n  key(value?: EntityKey) {\n    if (value !== undefined) this.segment.key = value;\n    return this.segment.key as EntityKey;\n  }\n  hasKey() {\n    return !Types.isEmpty(this.segment.key);\n  }\n  clearKey() {\n    delete this.segment.key;\n  }\n  parameters(value?: T) {\n    if (value !== undefined) this.segment.parameters = value;\n    return this.segment.parameters as T;\n  }\n  hasParameters() {\n    return !Types.isEmpty(this.segment.parameters);\n  }\n  clearParameters() {\n    delete this.segment.parameters;\n  }\n}\n\nexport class ODataPathSegmentsHandler {\n  constructor(protected segments: ODataPathSegments) {}\n  entitySet() {\n    return this.segments.get(PathSegmentNames.entitySet);\n  }\n  singleton() {\n    return this.segments.get(PathSegmentNames.singleton);\n  }\n  action() {\n    return this.segments.get(PathSegmentNames.action);\n  }\n  function() {\n    return this.segments.get(PathSegmentNames.function);\n  }\n  keys(values?: (EntityKey | undefined)[]) {\n    return this.segments.keys(values);\n  }\n  property() {\n    return this.segments.get(PathSegmentNames.property);\n  }\n  navigationProperty() {\n    return this.segments.get(PathSegmentNames.navigationProperty);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPropertyAnnotations.html":{"url":"classes/ODataPropertyAnnotations.html","title":"class - ODataPropertyAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPropertyAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                helper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                attributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        helper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataVersionHelper\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotations\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotations:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPropertyAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n            \n                \ndata(data: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attributes\n                        \n                    \n                \n            \n            \n                \nattributes(data: literal type, metadata: ODataMetadataType)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:12\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                ODataMetadataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataContext, ODataVersionHelper } from '../../helper';\n\nimport { ODataMetadataType } from '../../types';\n\nexport abstract class ODataAnnotations {\n  constructor(\n    public helper: ODataVersionHelper,\n    protected annotations: { [annot: string]: any } = {},\n    protected context?: ODataContext\n  ) {}\n\n  attributes(data: { [name: string]: any }, metadata: ODataMetadataType): T {\n    return this.helper.attributes(data, metadata) as T;\n  }\n\n  get entitySet() {\n    return this.context?.entitySet;\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context?.type;\n  }\n\n  // Method\n  abstract clone(): ODataAnnotations;\n  abstract data(data: { [name: string]: any }): { [name: string]: any };\n}\n\nexport class ODataPropertyAnnotations extends ODataAnnotations {\n  clone(): ODataPropertyAnnotations {\n    return new ODataPropertyAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.property(data);\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entity(data);\n  }\n\n  get id() {\n    return this.helper.id(this.annotations);\n  }\n\n  get etag() {\n    return this.helper.etag(this.annotations);\n  }\n\n  get mediaEtag() {\n    return this.helper.mediaEtag(this.annotations);\n  }\n\n  get metadataEtag() {\n    return this.helper.metadataEtag(this.annotations);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get editLink() {\n    return this.helper.editLink(this.annotations);\n  }\n\n  get mediaReadLink() {\n    return this.helper.mediaReadLink(this.annotations);\n  }\n\n  get mediaEditLink() {\n    return this.helper.mediaEditLink(this.annotations);\n  }\n\n  get mediaContentType() {\n    return this.helper.mediaContentType(this.annotations);\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.helper.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(\n      this.helper,\n      { ...this.annotations },\n      this.context\n    );\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entities(data);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.helper.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.helper.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.helper.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptionHandler.html":{"url":"classes/ODataQueryOptionHandler.html","title":"class - ODataQueryOptionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/handlers.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertArray\n                            \n                            \n                                    Private\n                                assertObject\n                            \n                            \n                                assign\n                            \n                            \n                                at\n                            \n                            \n                                clear\n                            \n                            \n                                empty\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                push\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJSON\n                            \n                            \n                                unset\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: literal type, n: QueryOptionNames)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        n\n                                                  \n                                                        \n                                                                        QueryOptionNames\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        assertArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    assertArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        assertObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    assertObject(create: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assign\n                        \n                    \n                \n            \n            \n                \nassign(values: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        at\n                        \n                    \n                \n            \n            \n                \nat(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(path: string, def?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(path: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unset\n                        \n                    \n                \n            \n            \n                \nunset(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n            \n                \nvalue(v?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query/handlers.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Objects, Types } from '../../utils';\nimport { alias, Expand, Filter, OrderBy, Select, Transform } from './builder';\n\nimport { QueryOptionNames } from '../../types';\nimport { Expression } from './expressions';\nimport type { ODataQueryArguments, ODataQueryOptions } from './options';\n\nexport class ODataQueryOptionHandler {\n  constructor(\n    private o: { [name: string]: any },\n    private n: QueryOptionNames\n  ) {}\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return (v !== undefined && (this.o[this.n] = v)) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: any) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: any) {\n    this.o[this.n] = this.assertArray().filter((v) => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1) this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): { [name: string]: any } {\n    if (!Types.isArray(this.o[this.n]) && Types.isPlainObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find((v) => Types.isPlainObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    Objects.set(obj, path, value);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    return Objects.get(obj, path, def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    Objects.unset(obj, path);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1) this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    return Objects.has(obj, path);\n  }\n\n  assign(values: { [attr: string]: any }) {\n    let obj = this.assertObject(true);\n    return Objects.merge(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\nexport class ODataQueryOptionsHandler {\n  constructor(protected options: ODataQueryOptions) {}\n\n  /**\n   * Create a new odata alias parameter\n   * @link https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_ParameterAliases\n   * @param value The value of the alias\n   * @param name The name of the alias\n   * @returns The alias\n   */\n  alias(value: any, name?: string) {\n    return alias(value, name);\n  }\n\n  select(opts: Select): ODataQueryOptionHandler;\n  select(): ODataQueryOptionHandler;\n  select(opts?: Select): any {\n    return this.options.option>(QueryOptionNames.select, opts);\n  }\n\n  expand(opts: Expand): ODataQueryOptionHandler;\n  expand(): ODataQueryOptionHandler;\n  expand(opts?: Expand): any {\n    return this.options.option>(QueryOptionNames.expand, opts);\n  }\n\n  /**\n   * @link https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptioncompute\n   */\n  compute(\n    opts: (e: {\n      e: Expression;\n      and: Expression;\n      or: Expression;\n      not: typeof Expression.not;\n    }) => Expression\n  ): Expression;\n  compute(opts: string): ODataQueryOptionHandler;\n  compute(): ODataQueryOptionHandler;\n  compute(opts?: any): any {\n    if (Types.isFunction(opts)) {\n      return this.options.expression(\n        QueryOptionNames.compute,\n        opts({\n          e: () => Expression.e(),\n          and: () => Expression.and(),\n          or: () => Expression.or(),\n          not: (e: Expression) => Expression.not(e),\n        }) as Expression\n      );\n    }\n    return this.options.option(QueryOptionNames.compute, opts);\n  }\n\n  /**\n   * @link https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptionformat\n   */\n  format(opts: string): ODataQueryOptionHandler;\n  format(): ODataQueryOptionHandler;\n  format(opts?: string): any {\n    return this.options.option(QueryOptionNames.format, opts);\n  }\n\n  transform(opts: Transform): ODataQueryOptionHandler;\n  transform(): ODataQueryOptionHandler;\n  transform(opts?: Transform): any {\n    return this.options.option>(QueryOptionNames.transform, opts);\n  }\n\n  search(opts: string): ODataQueryOptionHandler;\n  search(): ODataQueryOptionHandler;\n  search(opts?: string): any {\n    return this.options.option(QueryOptionNames.search, opts);\n  }\n\n  filter(\n    opts: (e: {\n      e: () => Expression;\n      and: () => Expression;\n      or: () => Expression;\n      not: (e: Expression) => Expression;\n    }) => Expression\n  ): Expression;\n  filter(opts: Filter): ODataQueryOptionHandler;\n  filter(): ODataQueryOptionHandler;\n  filter(opts?: any): any {\n    if (Types.isFunction(opts)) {\n      return this.options.expression(\n        QueryOptionNames.filter,\n        opts({\n          e: () => Expression.e(),\n          and: () => Expression.and(),\n          or: () => Expression.or(),\n          not: (e: Expression) => Expression.not(e),\n        }) as Expression\n      );\n    }\n    return this.options.option>(QueryOptionNames.filter, opts);\n  }\n\n  orderBy(\n    opts: (e: {\n      e: () => Expression;\n      and: () => Expression;\n      or: () => Expression;\n      not: (e: Expression) => Expression;\n    }) => Expression\n  ): Expression;\n  orderBy(opts: OrderBy): ODataQueryOptionHandler;\n  orderBy(): ODataQueryOptionHandler;\n  orderBy(opts?: any): any {\n    if (Types.isFunction(opts)) {\n      return this.options.expression(\n        QueryOptionNames.orderBy,\n        opts({\n          e: () => Expression.e(),\n          and: () => Expression.and(),\n          or: () => Expression.or(),\n          not: (e: Expression) => Expression.not(e),\n        }) as Expression\n      );\n    }\n    return this.options.option>(QueryOptionNames.orderBy, opts);\n  }\n\n  top(opts: number): ODataQueryOptionHandler;\n  top(): ODataQueryOptionHandler;\n  top(opts?: number): any {\n    return this.options.option(QueryOptionNames.top, opts);\n  }\n\n  skip(opts: number): ODataQueryOptionHandler;\n  skip(): ODataQueryOptionHandler;\n  skip(opts?: number): any {\n    return this.options.option(QueryOptionNames.skip, opts);\n  }\n\n  skiptoken(opts: string): ODataQueryOptionHandler;\n  skiptoken(): ODataQueryOptionHandler;\n  skiptoken(opts?: string): any {\n    return this.options.option(QueryOptionNames.skiptoken, opts);\n  }\n\n  paging({\n    skip,\n    skiptoken,\n    top,\n  }: { skip?: number; skiptoken?: string; top?: number } = {}) {\n    if (skiptoken !== undefined) this.skiptoken(skiptoken);\n    else if (skip !== undefined) this.skip(skip);\n    if (top !== undefined) this.top(top);\n  }\n\n  clearPaging() {\n    this.skip().clear();\n    this.top().clear();\n    this.skiptoken().clear();\n  }\n\n  apply(query: ODataQueryArguments) {\n    if (query.select !== undefined) {\n      this.select(query.select);\n    }\n    if (query.expand !== undefined) {\n      this.expand(query.expand);\n    }\n    if (query.transform !== undefined) {\n      this.transform(query.transform);\n    }\n    if (query.search !== undefined) {\n      this.search(query.search);\n    }\n    if (query.filter !== undefined) {\n      this.filter(query.filter);\n    }\n    if (query.orderBy !== undefined) {\n      this.orderBy(query.orderBy);\n    }\n    this.paging(query);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptions.html":{"url":"classes/ODataQueryOptions.html","title":"class - ODataQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/options.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                clone\n                            \n                            \n                                expression\n                            \n                            \n                                has\n                            \n                            \n                                keep\n                            \n                            \n                                option\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                remove\n                            \n                            \n                                toJSON\n                            \n                            \n                                toQueryArguments\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query/options.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/query/options.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:102\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        O\n                    \n                \n            \n\n            \n                \n\n                    \n                        Returns :         ODataQueryOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expression\n                        \n                    \n                \n            \n            \n                \nexpression(name: QueryOptionNames, exp: Expression)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exp\n                                    \n                                                Expression\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(name: QueryOptionNames)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keep\n                        \n                    \n                \n            \n            \n                \nkeep(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        option\n                        \n                    \n                \n            \n            \n                \noption(name: QueryOptionNames, opts?: O)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:119\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        O\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            O\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathAndParams\n                        \n                    \n                \n            \n            \n                \npathAndParams(escape: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    escape\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toQueryArguments\n                        \n                    \n                \n            \n            \n                \ntoQueryArguments()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataQueryArguments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/options.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Objects, Types } from '../../utils';\nimport {\n  Expand,\n  Filter,\n  OrderBy,\n  Select,\n  Transform,\n  buildPathAndQuery,\n  QueryCustomType,\n  alias,\n} from './builder';\n\nimport { QueryOptionNames } from '../../types';\nimport { ODataQueryOptionHandler } from './handlers';\nimport { Expression } from './expressions';\n\nexport type ODataQueryArguments = {\n  [QueryOptionNames.select]?: Select;\n  [QueryOptionNames.filter]?: Filter;\n  [QueryOptionNames.search]?: string;\n  [QueryOptionNames.compute]?: string;\n  [QueryOptionNames.transform]?: Transform;\n  [QueryOptionNames.orderBy]?: OrderBy;\n  [QueryOptionNames.top]?: number;\n  [QueryOptionNames.skip]?: number;\n  [QueryOptionNames.skiptoken]?: string;\n  [QueryOptionNames.expand]?: Expand;\n  [QueryOptionNames.format]?: string;\n};\n\nexport class ODataQueryOptions {\n  options: { [name: string]: any };\n\n  constructor(options?: { [name: string]: any }) {\n    this.options = options || {};\n  }\n\n  // Params\n  pathAndParams(escape: boolean = false): [string, { [name: string]: any }] {\n    let aliases: QueryCustomType[] = [];\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.compute,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format,\n    ]\n      .filter((key) => !Types.isEmpty(this.options[key]))\n      .reduce((acc, key) => {\n        let value = this.options[key];\n        if (Types.rawType(value) === 'Expression') {\n          value = value.render(aliases);\n        }\n        return Object.assign(acc, { [key]: value });\n      }, {});\n\n    return buildPathAndQuery({ ...options, aliases, escape });\n  }\n\n  toString(): string {\n    const [path, params] = this.pathAndParams();\n    return (\n      path +\n      Object.entries(params)\n        .filter(([, value]) => !Types.isEmpty(value))\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&')\n    );\n  }\n\n  toJSON() {\n    return Object.keys(this.options).reduce((acc, key) => {\n      let value = this.options[key];\n      if (Types.rawType(value) === 'Expression') {\n        value = value.toJSON();\n      }\n      return Object.assign(acc, { [key]: value });\n    }, {});\n  }\n\n  toQueryArguments(): ODataQueryArguments {\n    return {\n      select: this.options[QueryOptionNames.select],\n      expand: this.options[QueryOptionNames.expand],\n      transform: this.options[QueryOptionNames.transform],\n      compute: this.options[QueryOptionNames.compute],\n      search: this.options[QueryOptionNames.search],\n      filter: this.options[QueryOptionNames.filter],\n      orderBy: this.options[QueryOptionNames.orderBy],\n      top: this.options[QueryOptionNames.top],\n      skip: this.options[QueryOptionNames.skip],\n      skiptoken: this.options[QueryOptionNames.skiptoken],\n    } as ODataQueryArguments;\n  }\n\n  clone() {\n    const options = Object.keys(this.options).reduce((acc, key) => {\n      let value = this.options[key];\n      if (Types.rawType(value) !== 'Expression') {\n        value = Objects.clone(value);\n      }\n      return Object.assign(acc, { [key]: value });\n    }, {});\n    return new ODataQueryOptions(options);\n  }\n\n  // Set Expression\n  expression(name: QueryOptionNames, exp: Expression) {\n    return (this.options[name] = exp);\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: O) {\n    if (opts !== undefined) this.options[name] = opts;\n    return new ODataQueryOptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach((name) => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter((k) => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataReferential.html":{"url":"classes/ODataReferential.html","title":"class - ODataReferential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataReferential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/parsers/structured-type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                property\n                            \n                            \n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/parsers/structured-type.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/structured-type.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referencedProperty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/parsers/structured-type.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Objects, Strings, Types } from '../../utils';\nimport {\n  Parser,\n  StructuredTypeFieldConfig,\n  StructuredTypeConfig,\n  OptionsHelper,\n  NONE_PARSER,\n  StructuredTypeFieldOptions,\n  Options,\n} from '../../types';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { COMPUTED, DESCRIPTION, LONG_DESCRIPTION } from '../../constants';\nimport { ODataAnnotatable } from '../base';\nimport { raw } from '../../resources/query';\nimport { ODataParserOptions } from '../../options';\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaCustom = {\n  [P in keyof T]?: (\n    schema: any,\n    field: ODataStructuredTypeFieldParser\n  ) => any;\n};\ntype JsonSchemaExpand = { [P in keyof T]?: JsonSchemaOptions };\ntype JsonSchemaRequired = { [P in keyof T]?: boolean };\nexport type JsonSchemaOptions = {\n  select?: JsonSchemaSelect;\n  custom?: JsonSchemaCustom;\n  expand?: JsonSchemaExpand;\n  required?: JsonSchemaRequired;\n};\n\nexport class ODataEntityTypeKey {\n  name: string;\n  alias?: string;\n  constructor({ name, alias }: { name: string; alias?: string }) {\n    this.name = name;\n    this.alias = alias;\n  }\n}\n\nexport class ODataReferential {\n  property: string;\n  referencedProperty: string;\n  constructor({\n    property,\n    referencedProperty,\n  }: {\n    property: string;\n    referencedProperty: string;\n  }) {\n    this.property = property;\n    this.referencedProperty = referencedProperty;\n  }\n}\n\nexport class ODataStructuredTypeFieldParser\n  extends ODataAnnotatable\n  implements Parser\n{\n  name: string;\n  private structuredType: ODataStructuredTypeParser;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  precision?: number;\n  scale?: number;\n  referentials: ODataReferential[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    name: string,\n    structuredType: ODataStructuredTypeParser,\n    field: StructuredTypeFieldConfig\n  ) {\n    super(field);\n    this.name = name;\n    this.structuredType = structuredType;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.referentials = (field.referentials || []).map(\n      (referential) => new ODataReferential(referential)\n    );\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.collection = Boolean(field.collection);\n    this.navigation = Boolean(field.navigation);\n    this.precision = field.precision;\n    this.scale = field.scale;\n  }\n\n  validate(\n    value: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'modify';\n      navigation?: boolean;\n    } = {}\n  ):\n    | { [name: string]: any }\n    | { [name: string]: any }[]\n    | string[]\n    | undefined {\n    let errors;\n    if (this.collection && Array.isArray(value)) {\n      errors = value.map((v) => this.validate(v, { method, navigation })) as {\n        [name: string]: any[];\n      }[];\n    } else if (\n      (this.isStructuredType() &&\n        typeof value === 'object' &&\n        value !== null) ||\n      (this.navigation && value !== undefined)\n    ) {\n      errors =\n        this.structured().validate(value, { method, navigation }) ||\n        ({} as { [name: string]: any[] });\n    } else if (\n      this.isEnumType() &&\n      (typeof value === 'string' || typeof value === 'number')\n    ) {\n      errors = this.enum().validate(value, { method, navigation });\n    } else {\n      // IsEdmType\n      const computed = this.annotatedValue(COMPUTED);\n      errors = [];\n      if (\n        !this.nullable &&\n        (value === null || (value === undefined && method !== 'modify')) && // Is null or undefined without patch?\n        !(computed && method === 'create') // Not (Is Computed field and create) ?\n      ) {\n        errors.push(`required`);\n      }\n      if (\n        this.maxLength !== undefined &&\n        typeof value === 'string' &&\n        value.length > this.maxLength\n      ) {\n        errors.push(`maxlength`);\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n\n  //#region Deserialize\n  private parse(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options?: Options): T {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? value.map((v) => this.parse(parser, v, parserOptions))\n        : this.parse(parser, value, parserOptions);\n    }\n    return this.parser.deserialize(value, {\n      field: this,\n      ...parserOptions,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Serialize\n  private toJson(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? (value as any[]).map((v) => this.toJson(parser, v, parserOptions))\n        : this.toJson(parser, value, parserOptions);\n    }\n    return this.parser.serialize(value, {\n      field: this,\n      ...parserOptions,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Encode\n  encode(value: T, options?: Options): string {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return this.parser.encode(value, {\n      field: this,\n      ...parserOptions,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n    if (this.default !== undefined) {\n      this.default = this.deserialize(this.default, options);\n    }\n  }\n\n  //#region Json Schema\n  // https://json-schema.org/\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any =\n      this.parser instanceof ODataStructuredTypeFieldParser ||\n      this.parser instanceof ODataStructuredTypeParser ||\n      this.parser instanceof ODataEnumTypeParser\n        ? this.parser.toJsonSchema(options)\n        : ({ title: this.name, type: 'object' } as any);\n\n    if (\n      [\n        'Edm.String',\n        'Edm.Date',\n        'Edm.TimeOfDay',\n        'Edm.DateTimeOffset',\n        'Edm.Guid',\n        'Edm.Binary',\n      ].indexOf(this.type) !== -1\n    ) {\n      schema.type = 'string';\n      if (this.type === 'Edm.Date') schema.format = 'date';\n      else if (this.type === 'Edm.TimeOfDay') schema.format = 'time';\n      else if (this.type === 'Edm.DateTimeOffset') schema.format = 'date-time';\n      else if (this.type === 'Edm.Guid')\n        schema.pattern =\n          '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$';\n      else if (this.type === 'Edm.Binary') schema.contentEncoding = 'base64';\n      else if (this.type === 'Edm.String' && this.maxLength)\n        schema.maxLength = this.maxLength;\n    } else if (\n      ['Edm.Int64', 'Edm.Int32', 'Edm.Int16', 'Edm.Byte', 'Edm.SByte'].indexOf(\n        this.type\n      ) !== -1\n    ) {\n      //TODO: Range\n      schema.type = 'integer';\n    } else if (['Edm.Decimal', 'Edm.Double'].indexOf(this.type) !== -1) {\n      schema.type = 'number';\n    } else if (['Edm.Boolean'].indexOf(this.type) !== -1) {\n      schema.type = 'boolean';\n    }\n    if (this.default) schema.default = this.default;\n    if (this.nullable) schema.type = [schema.type, 'null'];\n    if (this.collection)\n      schema = {\n        type: 'array',\n        items: schema,\n        additionalItems: false,\n      };\n    return schema;\n  }\n  //#endregion\n\n  isKey() {\n    return (\n      this.structuredType.keys?.find((k) => k.name === this.name) !== undefined\n    );\n  }\n\n  hasReferentials() {\n    return this.referentials.length !== 0;\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataStructuredTypeParser\n  extends ODataAnnotatable\n  implements Parser\n{\n  name: string;\n  namespace: string;\n  open: boolean;\n  children: ODataStructuredTypeParser[] = [];\n  alias?: string;\n  base?: string;\n  parent?: ODataStructuredTypeParser;\n  keys?: ODataEntityTypeKey[];\n  fields: ODataStructuredTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    config: StructuredTypeConfig,\n    namespace: string,\n    alias?: string\n  ) {\n    super(config);\n    this.name = config.name;\n    this.base = config.base;\n    this.open = config.open || false;\n    this.namespace = namespace;\n    this.alias = alias;\n    if (Array.isArray(config.keys))\n      this.keys = config.keys.map((key) => new ODataEntityTypeKey(key));\n    this.fields = Object.entries(\n      config.fields as { [P in keyof T]: StructuredTypeFieldConfig }\n    ).map(\n      ([name, config]) => new ODataStructuredTypeFieldParser(name, this, config)\n    );\n  }\n\n  /**\n   * Create a nicer looking title.\n   * Titleize is meant for creating pretty output.\n   * @param term The term of the annotation to find.\n   * @returns The titleized string.\n   */\n  titelize(term: string | RegExp): string {\n    return this.annotatedValue(term) || Strings.titleCase(this.name);\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  typeFor(name: string): string | undefined {\n    const field = this.fields.find((f) => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : undefined;\n  }\n\n  findChildParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): ODataStructuredTypeParser | undefined {\n    if (predicate(this)) return this;\n    let match: ODataStructuredTypeParser | undefined;\n    for (let ch of this.children) {\n      match = ch.findChildParser(predicate);\n      if (match !== undefined) break;\n    }\n    return match;\n  }\n\n  childParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): Parser {\n    return this.findChildParser(predicate) || NONE_PARSER;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: Options): T {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.deserialize(value, parserOptions);\n    const fields = this.fields.filter(\n      (f) =>\n        f.name in value && value[f.name] !== undefined && value[f.name] !== null\n    );\n    return {\n      ...value,\n      ...fields.reduce(\n        (acc, f) => ({\n          ...acc,\n          [f.name]: f.deserialize(value[f.name], parserOptions),\n        }),\n        {}\n      ),\n    };\n  }\n\n  // Serialize\n  serialize(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.serialize(value, parserOptions);\n    const fields = this.fields.filter(\n      (f) =>\n        f.name in value &&\n        (value as any)[f.name] !== undefined &&\n        (value as any)[f.name] !== null\n    );\n    return {\n      ...value,\n      ...fields.reduce(\n        (acc, f) => ({\n          ...acc,\n          [f.name]: f.serialize((value as any)[f.name], parserOptions),\n        }),\n        {}\n      ),\n    };\n  }\n\n  // Encode\n  encode(value: T, options?: Options): any {\n    const parserOptions =\n      options !== undefined\n        ? new ODataParserOptions(options)\n        : this.optionsHelper;\n    return raw(JSON.stringify(this.serialize(value, parserOptions)));\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.base) {\n      const parent = parserForType(this.base) as ODataStructuredTypeParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach((f) => f.configure({ parserForType, options }));\n  }\n\n  resolveKey(value: any): any {\n    let key = this.parent?.resolveKey(value) || {};\n    if (Array.isArray(this.keys) && this.keys.length > 0) {\n      for (var k of this.keys) {\n        let v = value as any;\n        let structured = this as ODataStructuredTypeParser | undefined;\n        let field: ODataStructuredTypeFieldParser | undefined;\n        for (let name of k.name.split('/')) {\n          if (structured === undefined) break;\n          field = structured.fields.find((f) => f.name === name);\n          if (field !== undefined) {\n            v = Types.isPlainObject(v) ? v[field.name] : v;\n            structured = field.isStructuredType()\n              ? field.structured()\n              : undefined;\n          }\n        }\n        if (field !== undefined && v !== undefined) {\n          key[k.alias || field.name] = field.encode(v);\n        }\n      }\n    }\n    if (Types.isEmpty(key)) return undefined;\n    return Objects.resolveKey(key);\n  }\n\n  defaults(): { [name: string]: any } {\n    let value = this.parent?.defaults() || {};\n    let fields = this.fields.filter(\n      (f) => f.default !== undefined || f.isStructuredType()\n    );\n    return {\n      ...value,\n      ...fields.reduce((acc, f) => {\n        let value = f.isStructuredType()\n          ? f.structured().defaults()\n          : f.default;\n        return Types.isEmpty(value) ? acc : { ...acc, [f.name]: value };\n      }, {}),\n    };\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any = this.parent?.toJsonSchema(options) || {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      $id: `${this.namespace}.${this.name}`,\n      title: this.titelize(DESCRIPTION),\n      description: this.annotatedValue(LONG_DESCRIPTION),\n      type: 'object',\n      properties: {},\n      required: [],\n    };\n    const fields = this.fields.filter(\n      (f) =>\n        (!f.navigation || (options.expand && f.name in options.expand)) &&\n        (!options.select || (options.select).indexOf(f.name) !== -1)\n    );\n    schema.properties = Object.assign(\n      {},\n      schema.properties,\n      fields\n        .map((f) => {\n          let expand =\n            options.expand && f.name in options.expand\n              ? (options.expand as any)[f.name]\n              : undefined;\n          let schema = f.toJsonSchema(expand);\n          if (options.custom && f.name in options.custom)\n            schema = (\n              options.custom[f.name as keyof T] as (\n                schema: any,\n                field: ODataStructuredTypeFieldParser\n              ) => any\n            )(schema, f);\n          return { [f.name]: schema };\n        })\n        .reduce((acc, v) => Object.assign(acc, v), {})\n    );\n    schema.required = [\n      ...schema.required,\n      ...fields\n        .filter((f) =>\n          options.required && f.name in options.required\n            ? options.required[f.name as keyof T]\n            : !f.nullable\n        )\n        .map((f) => f.name),\n    ];\n    return schema;\n  }\n\n  validate(\n    attrs: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      create?: boolean;\n      method?: 'create' | 'update' | 'modify';\n      navigation?: boolean;\n    } = {}\n  ): { [name: string]: any } | undefined {\n    const errors = (this.parent?.validate(attrs, { method, navigation }) ||\n      {}) as { [name: string]: any };\n    const fields = this.fields.filter((f) => !f.navigation || navigation);\n    for (var field of fields) {\n      const value = attrs[field.name as keyof T];\n      const errs = field.validate(value, { method, navigation });\n      if (errs !== undefined) {\n        errors[field.name] = errs;\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataRequest.html":{"url":"classes/ODataRequest.html","title":"class - ODataRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _body\n                            \n                            \n                                    Private\n                                    Readonly\n                                _headers\n                            \n                            \n                                    Private\n                                    Readonly\n                                _method\n                            \n                            \n                                    Private\n                                    Readonly\n                                _params\n                            \n                            \n                                    Private\n                                    Readonly\n                                _path\n                            \n                            \n                                    Private\n                                    Readonly\n                                _queryBody\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _responseType\n                            \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                bodyQueryOptions\n                            \n                            \n                                    Readonly\n                                fetchPolicy\n                            \n                            \n                                    Readonly\n                                observe\n                            \n                            \n                                    Readonly\n                                    Optional\n                                reportProgress\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                            \n                                    Readonly\n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isBatch\n                            \n                            \n                                isFetch\n                            \n                            \n                                isMutate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    responseType\n                                \n                                \n                                    path\n                                \n                                \n                                    method\n                                \n                                \n                                    body\n                                \n                                \n                                    params\n                                \n                                \n                                    headers\n                                \n                                \n                                    pathWithParams\n                                \n                                \n                                    url\n                                \n                                \n                                    urlWithParams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _body\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpHeaders\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParams\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _queryBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _responseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"arraybuffer\" | \"blob\" | \"json\" | \"text\" | \"value\" | \"property\" | \"entity\" | \"entities\"\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataApi\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bodyQueryOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryOptionNames[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fetchPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        observe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"events\" | \"response\"\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        reportProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataResource\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        withCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isBatch\n                        \n                    \n                \n            \n            \n                \nisBatch()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/request.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFetch\n                        \n                    \n                \n            \n            \n                \nisFetch()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/request.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMutate\n                        \n                    \n                \n            \n            \n                \nisMutate()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/request.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        responseType\n                    \n                \n\n                \n                    \n                        getresponseType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:212\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:221\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n\n                \n                    \n                        getmethod()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:225\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n\n                \n                    \n                        getbody()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n                \n                    \n                        getparams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:241\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        headers\n                    \n                \n\n                \n                    \n                        getheaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:253\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pathWithParams\n                    \n                \n\n                \n                    \n                        getpathWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:261\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:269\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        urlWithParams\n                    \n                \n\n                \n                    \n                        geturlWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:273\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  $BATCH,\n  $QUERY,\n  ACCEPT,\n  IF_MATCH_HEADER,\n  IF_NONE_MATCH_HEADER,\n  PREFER,\n  TEXT_PLAIN,\n} from '../constants';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Http } from '../utils';\nimport { ODataApi } from '../api';\nimport { ODataResource } from './resource';\nimport { QueryOptionNames } from '../types';\n\nexport class ODataRequest {\n  readonly api: ODataApi;\n  readonly observe: 'events' | 'response';\n  readonly reportProgress?: boolean;\n  readonly withCredentials?: boolean;\n  readonly bodyQueryOptions: QueryOptionNames[];\n  readonly fetchPolicy:\n    | 'cache-first'\n    | 'cache-and-network'\n    | 'network-only'\n    | 'no-cache'\n    | 'cache-only';\n  readonly resource: ODataResource;\n  private readonly _responseType?:\n    | 'arraybuffer'\n    | 'blob'\n    | 'json'\n    | 'text'\n    | 'value'\n    | 'property'\n    | 'entity'\n    | 'entities';\n  private readonly _method: string;\n  private readonly _body: any | null;\n  private readonly _headers: HttpHeaders;\n  private readonly _params: HttpParams;\n  private readonly _path: string;\n  private readonly _queryBody: boolean;\n\n  constructor(init: {\n    method: string;\n    api: ODataApi;\n    resource: ODataResource;\n    body: any;\n    observe: 'events' | 'response';\n    etag?: string;\n    headers?: HttpHeaders | { [header: string]: string | string[] };\n    reportProgress?: boolean;\n    params?: HttpParams | { [param: string]: string | string[] };\n    responseType?:\n      | 'arraybuffer'\n      | 'blob'\n      | 'json'\n      | 'text'\n      | 'value'\n      | 'property'\n      | 'entity'\n      | 'entities';\n    fetchPolicy?:\n      | 'cache-first'\n      | 'cache-and-network'\n      | 'network-only'\n      | 'no-cache'\n      | 'cache-only';\n    withCredentials?: boolean;\n    bodyQueryOptions?: QueryOptionNames[];\n  }) {\n    this._method = init.method;\n    this.resource = init.resource;\n\n    this.api = init.api;\n    this.reportProgress = init.reportProgress;\n    this.observe = init.observe;\n\n    // Response Type\n    this._responseType = init.responseType;\n\n    // The Body\n    this._body = init.body !== undefined ? init.body : null;\n    if (this._body !== null) this._body = this.resource.serialize(this._body);\n\n    this.withCredentials =\n      init.withCredentials === undefined\n        ? this.api.options.withCredentials\n        : init.withCredentials;\n    this.fetchPolicy = init.fetchPolicy || this.api.options.fetchPolicy;\n    this.bodyQueryOptions =\n      init.bodyQueryOptions || this.api.options.bodyQueryOptions;\n\n    // The Path and Params from resource\n    const [resourcePath, resourceParams] = this.resource.pathAndParams();\n    this._path = resourcePath;\n\n    //#region Headers\n    const customHeaders: { [name: string]: string | string[] } = {};\n    if (typeof init.etag === 'string') {\n      if (\n        this.api.options.etag.ifMatch &&\n        ['PUT', 'PATCH', 'DELETE'].indexOf(this._method) !== -1\n      )\n        customHeaders[IF_MATCH_HEADER] = init.etag;\n      else if (\n        this.api.options.etag.ifNoneMatch &&\n        ['GET'].indexOf(this._method) !== -1\n      )\n        customHeaders[IF_NONE_MATCH_HEADER] = init.etag;\n    }\n\n    const accept = [];\n    // Metadata\n    if (this.api.options.accept?.metadata !== undefined)\n      accept.push(`odata.metadata=${this.api.options.accept?.metadata}`);\n    // IEEE754\n    if (this.api.options.accept?.ieee754Compatible !== undefined)\n      accept.push(\n        `IEEE754Compatible=${this.api.options.accept?.ieee754Compatible}`\n      );\n    // streaming\n    if (this.api.options.accept?.streaming !== undefined)\n      accept.push(`streaming=${this.api.options.accept?.streaming}`);\n    // ExponentialDecimals\n    if (this.api.options.accept?.exponentialDecimals !== undefined)\n      accept.push(\n        `ExponentialDecimals=${this.api.options.accept?.exponentialDecimals}`\n      );\n    if (accept.length > 0)\n      customHeaders[ACCEPT] = [\n        `application/json;${accept.join(';')}`,\n        'text/plain',\n        '*/*',\n      ];\n\n    const prefer = [];\n    // Return\n    if (\n      this.api.options.prefer?.return !== undefined &&\n      ['POST', 'PUT', 'PATCH'].indexOf(this._method) !== -1\n    )\n      prefer.push(`return=${this.api.options.prefer?.return}`);\n    // MaxPageSize\n    if (\n      this.api.options.prefer?.maxPageSize !== undefined &&\n      ['GET'].indexOf(this._method) !== -1\n    )\n      prefer.push(`odata.maxpagesize=${this.api.options.prefer?.maxPageSize}`);\n    // Annotations\n    if (\n      this.api.options.prefer?.includeAnnotations !== undefined &&\n      ['GET'].indexOf(this._method) !== -1\n    )\n      prefer.push(\n        `odata.include-annotations=${this.api.options.prefer?.includeAnnotations}`\n      );\n    if (\n      this.api.options.prefer?.continueOnError === true &&\n      ['POST'].indexOf(this._method) !== -1\n    )\n      prefer.push(`odata.continue-on-error`);\n    if (prefer.length > 0) customHeaders[PREFER] = prefer;\n    this._headers = Http.mergeHttpHeaders(\n      this.api.options.headers,\n      customHeaders,\n      init.headers || {}\n    );\n    //#endregion\n\n    //#region Params\n    const customParams: { [name: string]: string | string[] } = {};\n    if (\n      ['POST', 'PUT', 'PATCH'].indexOf(this._method) !== -1 &&\n      '$select' in resourceParams\n    ) {\n      customParams['$select'] = resourceParams['$select'];\n    }\n    if (['POST'].indexOf(this._method) !== -1 && '$expand' in resourceParams) {\n      customParams['$expand'] = resourceParams['$expand'];\n    }\n    if (['GET'].indexOf(this._method) !== -1) {\n      Object.assign(customParams, resourceParams);\n    }\n\n    const params = Http.mergeHttpParams(\n      this.api.options.params,\n      customParams,\n      init.params || {}\n    );\n\n    this._params =\n      this._responseType === 'entity'\n        ? Http.withoutHttpParams(params, [\n            '$filter',\n            '$orderby',\n            '$count',\n            '$skip',\n            '$top',\n          ])\n        : params;\n    //#endregion\n\n    this._queryBody =\n      this._method === 'GET' &&\n      this.bodyQueryOptions.length > 0 &&\n      this.bodyQueryOptions.some((name) => this._params.has(`$${name}`));\n  }\n\n  get responseType(): 'arraybuffer' | 'blob' | 'json' | 'text' {\n    return this._responseType &&\n      ['property', 'entity', 'entities'].indexOf(this._responseType) !== -1\n      ? 'json'\n      : this._responseType === 'value'\n      ? 'text'\n      : this._responseType;\n  }\n\n  get path() {\n    return this._queryBody ? `${this._path}/${$QUERY}` : this._path;\n  }\n\n  get method() {\n    return this._queryBody ? 'POST' : this._method;\n  }\n\n  get body() {\n    if (this._queryBody) {\n      let [, bodyParams] = Http.splitHttpParams(\n        this._params,\n        this.bodyQueryOptions.map((name) => `$${name}`)\n      );\n      return bodyParams.toString();\n    } else {\n      return this._body;\n    }\n  }\n\n  get params() {\n    if (this._queryBody) {\n      let [queryParams] = Http.splitHttpParams(\n        this._params,\n        this.bodyQueryOptions.map((name) => `$${name}`)\n      );\n      return queryParams;\n    } else {\n      return this._params;\n    }\n  }\n\n  get headers() {\n    if (this._queryBody) {\n      return Http.mergeHttpHeaders(this._headers, { CONTENT_TYPE: TEXT_PLAIN });\n    } else {\n      return this._headers;\n    }\n  }\n\n  get pathWithParams() {\n    let path = this._path;\n    if (this._params.keys().length > 0) {\n      path = `${path}?${this._params}`;\n    }\n    return path;\n  }\n\n  get url() {\n    return `${this.api.serviceRootUrl}${this._path}`;\n  }\n\n  get urlWithParams() {\n    return `${this.api.serviceRootUrl}${this.pathWithParams}`;\n  }\n\n  isBatch() {\n    return this._path.endsWith($BATCH);\n  }\n\n  isFetch() {\n    return ['GET'].indexOf(this._method) !== -1;\n  }\n\n  isMutate() {\n    return ['PUT', 'PATCH', 'POST', 'DELETE'].indexOf(this._method) !== -1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponse.html":{"url":"classes/ODataResponse.html","title":"class - ODataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/response.ts\n        \n\n\n            \n                Description\n            \n            \n                OData Response\n\n            \n\n            \n                Extends\n            \n            \n                        HttpResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _annotations\n                            \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                    Private\n                                    Optional\n                                _options\n                            \n                            \n                                    Private\n                                    Optional\n                                _payload\n                            \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entities\n                            \n                            \n                                entity\n                            \n                            \n                                    Static\n                                fromHttpResponse\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                property\n                            \n                            \n                                toJSON\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    payload\n                                \n                                \n                                    context\n                                \n                                \n                                    annotations\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _annotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataResponseOptions\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataApi\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataResource\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n            \n                \nentities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:193\n                \n            \n\n\n            \n                \n                    Handle the response body as entities\n\n\n                    \n                    \n                    \n                        Returns :         ODataEntities\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entity\n                        \n                    \n                \n            \n            \n                \nentity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:169\n                \n            \n\n\n            \n                \n                    Handle the response body as an entity\n\n\n                    \n                    \n                    \n                        Returns :         ODataEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromHttpResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromHttpResponse(req: ODataRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:46\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromJSON\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(req: ODataRequest, json: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    json\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        property\n                        \n                    \n                \n            \n            \n                \nproperty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:212\n                \n            \n\n\n            \n                \n                    Handle the response body as a property\n\n\n                    \n                    \n                    \n                        Returns :         ODataProperty\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { body: any; headers: any; status: any; statusText: any; url: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:236\n                \n            \n\n\n            \n                \n                    Handle the response body as a value\n\n\n                    \n                    \n                    \n                        Returns :     T | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:93\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        payload\n                    \n                \n\n                \n                    \n                        getpayload()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:126\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n\n                \n                    \n                        getcontext()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        annotations\n                    \n                \n\n                \n                    \n                        getannotations()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:147\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport {\n  ODataEntityAnnotations,\n  ODataEntitiesAnnotations,\n  ODataPropertyAnnotations,\n} from './annotations';\nimport { Types } from '../../utils/types';\nimport { ODataResource } from '../resource';\nimport { ODataEntities, ODataEntity, ODataProperty } from './types';\nimport {\n  APPLICATION_JSON,\n  ODATA_VERSION_HEADERS,\n  CONTENT_TYPE,\n  CACHE_CONTROL,\n  LOCATION_HEADER,\n  ETAG_HEADERS,\n  ODATA_ENTITYID_HEADERS,\n} from '../../constants';\nimport { ODataApi } from '../../api';\nimport { ODataRequest } from '../request';\nimport { ODataResponseOptions } from './options';\nimport { Http } from '../../utils/http';\nimport { ODataContext } from '../../helper';\n\n/**\n * OData Response\n */\nexport class ODataResponse extends HttpResponse {\n  readonly api: ODataApi;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n    api: ODataApi;\n    resource: ODataResource;\n    body: T | null;\n    headers: HttpHeaders;\n    status: number;\n    statusText: string;\n    url?: string;\n  }) {\n    super(init);\n    this.api = init.api;\n    this.resource = init.resource;\n  }\n\n  static fromHttpResponse(req: ODataRequest, res: HttpResponse) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: res.body,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n      url: res.url || undefined,\n    });\n  }\n\n  static fromJSON(\n    req: ODataRequest,\n    json: {\n      body: T | null;\n      headers: { [name: string]: string | string[] };\n      status: number;\n      statusText: string;\n      url: string | null;\n    }\n  ) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: json.body,\n      headers: new HttpHeaders(json.headers),\n      status: json.status,\n      statusText: json.statusText,\n      url: json.url || undefined,\n    });\n  }\n\n  toJSON() {\n    return {\n      body: this.body,\n      headers: this.headers\n        .keys()\n        .map((name) => ({ [name]: this.headers.getAll(name) || [] }))\n        .reduce((acc, header) => Object.assign(acc, header), {}),\n      status: this.status,\n      statusText: this.statusText,\n      url: this.url,\n    };\n  }\n\n  private _options?: ODataResponseOptions;\n  get options(): ODataResponseOptions {\n    if (this._options === undefined) {\n      this._options = new ODataResponseOptions(this.api.options);\n      const contentType = this.headers.get(CONTENT_TYPE);\n      if (contentType && contentType.indexOf(APPLICATION_JSON) !== -1) {\n        const features = contentType\n          .split(',')\n          .find((p) => p.startsWith(APPLICATION_JSON)) as string;\n        this._options.setFeatures(features);\n      }\n      const header = Http.resolveHeaderKey(this.headers, ODATA_VERSION_HEADERS);\n      if (header) {\n        const version = (this.headers.get(header) || '').replace(/\\;/g, '') as\n          | '2.0'\n          | '3.0'\n          | '4.0';\n        this._options.setVersion(version);\n      }\n\n      const location = this.headers.get(LOCATION_HEADER);\n      if (location) {\n        this._options.setLocation(location);\n      }\n\n      const cacheControl = this.headers.get(CACHE_CONTROL);\n      if (cacheControl) {\n        this._options.setCache(cacheControl);\n      }\n    }\n    return this._options;\n  }\n\n  private _payload?: any;\n  get payload() {\n    if (this._payload === undefined) {\n      this._payload =\n        this.body && this.options.version === '2.0'\n          ? (this.body)['d']\n          : this.body;\n    }\n    return this._payload;\n  }\n\n  private _context?: any;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.options.helper.context(\n        Types.isPlainObject(this.payload) ? this.payload : {}\n      );\n    }\n    return this._context;\n  }\n\n  private _annotations?: any;\n  get annotations(): { [name: string]: any } {\n    if (this._annotations === undefined) {\n      const options = this.options;\n      this._annotations = options.helper.annotations(this.payload || {});\n      let key = Http.resolveHeaderKey(this.headers, ETAG_HEADERS);\n      if (key) {\n        const etag = this.headers.get(key);\n        if (etag) options.helper.etag(this._annotations, etag);\n      }\n      key = Http.resolveHeaderKey(this.headers, ODATA_ENTITYID_HEADERS);\n      if (key) {\n        const entityId = this.headers.get(key);\n        if (entityId) options.helper.id(this._annotations, entityId);\n      }\n    }\n    return this._annotations;\n  }\n\n  /**\n   * Handle the response body as an entity\n   * @returns\n   */\n  entity(): ODataEntity {\n    const options = this.options;\n    const payload = this.payload;\n    const annots = new ODataEntityAnnotations(\n      options.helper,\n      this.annotations,\n      this.context\n    );\n    const data = payload ? annots.data(payload) : null;\n    let entity = (\n      data !== null && Types.isPlainObject(data)\n        ? options.helper.attributes(data, this.api.options.stripMetadata)\n        : data\n    ) as T | null;\n\n    if (entity !== null)\n      entity = this.resource.deserialize(entity, options) as T;\n    return { entity, annots };\n  }\n\n  /**\n   * Handle the response body as entities\n   * @returns\n   */\n  entities(): ODataEntities {\n    const options = this.options;\n    const payload = this.payload;\n    const annots = new ODataEntitiesAnnotations(\n      options.helper,\n      this.annotations,\n      this.context\n    );\n    let entities = payload ? annots.data(payload) : null;\n\n    if (entities !== null)\n      entities = this.resource.deserialize(entities, options) as T[];\n    return { entities, annots };\n  }\n\n  /**\n   * Handle the response body as a property\n   * @returns\n   */\n  property(): ODataProperty {\n    const options = this.options;\n    const payload = this.payload;\n    const annots = new ODataPropertyAnnotations(\n      options.helper,\n      this.annotations,\n      this.context\n    );\n    const data = payload ? (annots.data(payload) as T) : null;\n    let property = (\n      data !== null && Types.isPlainObject(data)\n        ? options.helper.attributes(data, this.api.options.stripMetadata)\n        : data\n    ) as T | null;\n\n    if (property !== null)\n      property = this.resource.deserialize(property, options) as T;\n    return { property, annots };\n  }\n\n  /**\n   * Handle the response body as a value\n   * @returns\n   */\n  value(): T | null {\n    const options = this.options;\n    const payload = this.payload;\n    let value = (\n      payload !== null && Types.isPlainObject(payload)\n        ? options.helper.attributes(payload, this.api.options.stripMetadata)\n        : payload\n    ) as T | null;\n\n    if (value !== null) value = this.resource.deserialize(value, options) as T;\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponseOptions.html":{"url":"classes/ODataResponseOptions.html","title":"class - ODataResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/options.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ResponseOptions\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cacheability\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                maxAge\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                setCache\n                            \n                            \n                                setFeatures\n                            \n                            \n                                setLocation\n                            \n                            \n                                setVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Options)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cacheability\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ieee754Compatible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        maxAge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataMetadataType\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        streaming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        stringAsEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataVersion\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResponseOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCache\n                        \n                    \n                \n            \n            \n                \nsetCache(cacheControl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cacheControl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFeatures\n                        \n                    \n                \n            \n            \n                \nsetFeatures(features: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLocation\n                        \n                    \n                \n            \n            \n                \nsetLocation(location: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVersion\n                        \n                    \n                \n            \n            \n                \nsetVersion(version: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:36\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  CacheCacheability,\n  ODataMetadataType,\n  ODataVersion,\n  Options,\n  ResponseOptions,\n} from '../../types';\nimport {\n  DEFAULT_VERSION,\n  MAX_AGE,\n  VERSION_2_0,\n  VERSION_3_0,\n  VERSION_4_0,\n} from '../../constants';\n\nimport { ODataHelper } from '../../helper';\n\nexport class ODataResponseOptions implements ResponseOptions {\n  version: ODataVersion;\n  streaming?: boolean;\n  // OData\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  // Location\n  location?: string;\n  // Cache\n  cacheability?: 'public' | 'private' | 'no-cache' | 'no-store';\n  maxAge?: number;\n\n  constructor(config: Options) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.stringAsEnum = config.stringAsEnum;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n\n  clone() {\n    return new ODataResponseOptions(this);\n  }\n\n  setFeatures(features: string) {\n    features.split(';').forEach((o) => {\n      let [k, v] = o.split('=');\n      switch (k.trim()) {\n        case 'odata.metadata':\n          this.metadata = v as ODataMetadataType;\n          break;\n        case 'odata.streaming':\n          this.streaming = v == 'true';\n          break;\n        case 'IEEE754Compatible':\n          this.ieee754Compatible = v == 'true';\n          break;\n      }\n    });\n  }\n\n  setVersion(version: string) {\n    const value = version.replace(/\\;/g, '').trim();\n    if ([VERSION_2_0, VERSION_3_0, VERSION_4_0].indexOf(value) !== -1)\n      this.version = value as ODataVersion;\n  }\n\n  setLocation(location: string) {\n    // TODO: resolve location?\n    this.location = location;\n  }\n\n  setCache(cacheControl: string) {\n    cacheControl.split(',').forEach((directive) => {\n      if (directive.startsWith(MAX_AGE)) {\n        let maxAge = Number(directive.split('=')[1]);\n        if (!Number.isNaN(maxAge)) this.maxAge = maxAge;\n      }\n      if (\n        ['public', 'private', 'no-cache', 'no-store'].indexOf(directive) !== -1\n      ) {\n        this.cacheability = directive as CacheCacheability;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSchema.html":{"url":"classes/ODataSchema.html","title":"class - ODataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ODataAnnotatable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                api\n                            \n                            \n                                callables\n                            \n                            \n                                containers\n                            \n                            \n                                entities\n                            \n                            \n                                enums\n                            \n                            \n                                namespace\n                            \n                            \n                                annotations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                    Public\n                                findCallableForType\n                            \n                            \n                                    Public\n                                findEntitySetForType\n                            \n                            \n                                    Public\n                                findEnumTypeForType\n                            \n                            \n                                    Public\n                                findStructuredTypeForType\n                            \n                            \n                                isNamespaceOf\n                            \n                            \n                                annotatedValue\n                            \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    entitySets\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SchemaConfig, api: ODataApi)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SchemaConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataApi\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        callables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataCallable[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        containers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataEntityContainer[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataStructuredType[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataEnumType[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ODataAnnotation[]\n\n                    \n                \n                        \n                            \n                                Inherited from         ODataAnnotatable\n\n                            \n                        \n                    \n                        \n                                Defined in         ODataAnnotatable:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findCallableForType\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableForType(type: string, bindingType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:67\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bindingType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findEntitySetForType\n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findEnumTypeForType\n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findStructuredTypeForType\n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNamespaceOf\n                        \n                    \n                \n            \n            \n                \nisNamespaceOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        annotatedValue\n                        \n                    \n                \n            \n            \n                \nannotatedValue(term: string | RegExp)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Find an annotation inside the annotatable and return its value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                            string | RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The term of the annotation to find.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        The value of the annotation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAnnotation\n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotatable\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotatable:30\n\n                \n            \n\n\n            \n                \n                    Find an annotation inside the annotatable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function that returns true if the annotation match.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The annotation that matches the predicate.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        entitySets\n                    \n                \n\n                \n                    \n                        getentitySets()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:47\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Parser, SchemaConfig } from '../types';\n\nimport { OData } from '../utils/odata';\nimport { ODataAnnotatable, ODataAnnotation } from './base';\nimport { ODataApi } from '../api';\nimport { ODataCallable } from './callable';\nimport { ODataEntityContainer } from './entity-container';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataEnumType } from './enum-type';\nimport { ODataStructuredType } from './structured-type';\n\nexport class ODataSchema extends ODataAnnotatable {\n  api: ODataApi;\n  namespace: string;\n  alias?: string;\n  enums: ODataEnumType[];\n  entities: ODataStructuredType[];\n  callables: ODataCallable[];\n  containers: ODataEntityContainer[];\n\n  constructor(config: SchemaConfig, api: ODataApi) {\n    super(config);\n    this.api = api;\n    this.namespace = config.namespace;\n    this.alias = config.alias;\n    this.enums = (config.enums || []).map(\n      (config) => new ODataEnumType(config, this)\n    );\n    this.entities = (config.entities || []).map(\n      (config) => new ODataStructuredType(config, this)\n    );\n    this.callables = OData.mergeCallableParameters(config.callables || []).map(\n      (config) => new ODataCallable(config, this)\n    );\n    this.containers = (config.containers || []).map(\n      (config) => new ODataEntityContainer(config, this)\n    );\n  }\n\n  isNamespaceOf(type: string) {\n    return (\n      type.startsWith(this.namespace) ||\n      (this.alias && type.startsWith(this.alias))\n    );\n  }\n\n  get entitySets() {\n    return this.containers.reduce(\n      (acc, container) => [...acc, ...container.entitySets],\n      [] as ODataEntitySet[]\n    );\n  }\n\n  //#region Find for Type\n  public findEnumTypeForType(type: string) {\n    return this.enums.find((e) => e.isTypeOf(type)) as\n      | ODataEnumType\n      | undefined;\n  }\n\n  public findStructuredTypeForType(type: string) {\n    return this.entities.find((e) => e.isTypeOf(type)) as\n      | ODataStructuredType\n      | undefined;\n  }\n\n  public findCallableForType(type: string, bindingType?: string) {\n    return this.callables.find(\n      (c) =>\n        c.isTypeOf(type) &&\n        (bindingType === undefined || bindingType === c.binding()?.type)\n    ) as ODataCallable | undefined;\n  }\n\n  public findEntitySetForType(type: string) {\n    return this.entitySets.find((e) => e.isTypeOf(type));\n  }\n  //#endregion\n\n  configure({\n    parserForType,\n    findOptionsForType,\n  }: {\n    parserForType: (type: string) => Parser;\n    findOptionsForType: (type: string) => any;\n  }) {\n    // Configure Enums\n    this.enums.forEach((enu) => enu.configure());\n    // Configure Entities\n    this.entities.forEach((config) =>\n      config.configure({ parserForType, findOptionsForType })\n    );\n    // Configure callables\n    this.callables.forEach((callable) => callable.configure({ parserForType }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataServiceFactory.html":{"url":"injectables/ODataServiceFactory.html","title":"injectable - ODataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entitySet\n                            \n                            \n                                singleton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/factory.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        entitySet\n                        \n                    \n                \n            \n            \n                \nentitySet(entitySetName: string, apiNameOrEntityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Factory method to create an entity set service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entitySetName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the entity set.\n\n                                    \n                                \n                                \n                                    apiNameOrEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Name of the API or the type of the entity.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntitySetService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        singleton\n                        \n                    \n                \n            \n            \n                \nsingleton(singletonName: string, apiNameOrEntityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Factory method to create a singleton service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    singletonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the singleton.\n\n                                    \n                                \n                                \n                                    apiNameOrEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Name of the API or the type of the entity.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataSingletonService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ODataClient } from '../client';\nimport { ODataEntitySetService } from './entity-set';\nimport { ODataSingletonService } from './singleton';\n\n@Injectable()\nexport class ODataServiceFactory {\n  constructor(protected client: ODataClient) {}\n\n  /**\n   * Factory method to create an entity set service.\n   * @param entitySetName Name of the entity set.\n   * @param apiNameOrEntityType Name of the API or the type of the entity.\n   */\n  entitySet(\n    entitySetName: string,\n    apiNameOrEntityType?: string\n  ): ODataEntitySetService {\n    return new (class extends ODataEntitySetService {})(\n      this.client,\n      entitySetName,\n      apiNameOrEntityType\n    );\n  }\n\n  /** Factory method to create a singleton service.\n   * @param singletonName Name of the singleton.\n   * @param apiNameOrEntityType Name of the API or the type of the entity.\n   */\n  singleton(\n    singletonName: string,\n    apiNameOrEntityType?: string\n  ): ODataSingletonService {\n    return new (class extends ODataSingletonService {})(\n      this.client,\n      singletonName,\n      apiNameOrEntityType\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSingletonService.html":{"url":"classes/ODataSingletonService.html","title":"class - ODataSingletonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSingletonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/singleton.ts\n        \n\n\n            \n                Description\n            \n            \n                OData Singleton Service\nwww.odata.org/getting-started/advanced-tutorial/#singleton\n\n            \n\n            \n                Extends\n            \n            \n                        ODataEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    singletonSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attach\n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(model: M)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:28\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n                    Attach an existing model to this service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The model to attach.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        entity\n                        \n                    \n                \n            \n            \n                \n                    \n                    entity()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:20\n\n                \n            \n\n\n            \n                \n                    Get the entity resource for this service.\n\n\n                    \n                        Returns :         ODataSingletonResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:59\n                \n            \n\n\n            \n                \n                    Patch the singleton entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The attributes for the entity.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(attrs: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:45\n                \n            \n\n\n            \n                \n                    Update the singleton entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The attributes for the entity.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The options for the request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:62\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:25\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        fetchNavigationProperty\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: ODataQueryArgumentsOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:99\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryArgumentsOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        singletonSchema\n                    \n                \n\n                \n                    \n                        getsingletonSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:35\n                                \n                            \n                    \n                        \n                                The schema for the singleton.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import type {\n  ODataEntity,\n  ODataOptions,\n  ODataSingletonResource,\n} from '../resources';\n\nimport { ODataEntityService } from './entity';\nimport type { ODataModel } from '../models/model';\nimport { Observable } from 'rxjs';\n\n/**\n * OData Singleton Service\n * www.odata.org/getting-started/advanced-tutorial/#singleton\n */\nexport class ODataSingletonService extends ODataEntityService {\n  /**\n   * Get the entity resource for this service.\n   * @param key The entity key.\n   */\n  public entity(): ODataSingletonResource {\n    return this.client.singleton(this.name, this.apiNameOrEntityType);\n  }\n\n  /**\n   * Attach an existing model to this service.\n   * @param model The model to attach.\n   */\n  public attach>(model: M) {\n    model.attach(this.entity());\n  }\n\n  /**\n   * The schema for the singleton.\n   */\n  get singletonSchema() {\n    return this.api.findEntitySetByName(this.name);\n  }\n\n  /**\n   * Update the singleton entity\n   * @param attrs The attributes for the entity.\n   * @param etag The etag for the entity.\n   * @param options The options for the request.\n   */\n  public update(\n    attrs: Partial,\n    options?: ODataOptions & { etag?: string }\n  ): Observable> {\n    const res = this.entity();\n    return res.update(attrs, options);\n  }\n\n  /**\n   * Patch the singleton entity\n   * @param attrs The attributes for the entity.\n   * @param etag The etag for the entity.\n   * @param options The options for the request.\n   */\n  public patch(\n    attrs: Partial,\n    options?: ODataOptions & { etag?: string }\n  ): Observable> {\n    const res = this.entity();\n    return res.modify(attrs, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Operator.html":{"url":"classes/Operator.html","title":"class - Operator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Operator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Renderable\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    undefined\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(op: string, values: any[], normalize: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:242\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        op\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        normalize\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { op: string; values: {}; normalize: boolean; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        undefined\n                    \n                \n\n                \n                    \n                        get()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:249\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            stringAsEnum\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        stringAsEnum\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stringAsEnum:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         ODataVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataVersionHelper } from './helper';\nimport { Observable } from 'rxjs';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport enum QueryOptionNames {\n  select = 'select',\n  expand = 'expand',\n  compute = 'compute',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n  count = 'count',\n}\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    exponentialDecimals?: boolean;\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n    streaming?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n  bodyQueryOptions?: QueryOptionNames[];\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  exponentialDecimals?: boolean;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  // Deserialize value/s from request body.\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  // Serialize value/s for request body.\n  serialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encode value/s for URL parameter or query-string.\n  encode(value: any, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string, ...opts: any[]): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionsHelper.html":{"url":"interfaces/OptionsHelper.html","title":"interface - OptionsHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OptionsHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            exponentialDecimals\n                                        \n                                \n                                \n                                        \n                                            helper\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ieee754Compatible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            streaming\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exponentialDecimals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exponentialDecimals:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helper:         ODataVersionHelper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersionHelper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ieee754Compatible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ieee754Compatible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         ODataMetadataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataMetadataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streaming\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        streaming:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataVersionHelper } from './helper';\nimport { Observable } from 'rxjs';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport enum QueryOptionNames {\n  select = 'select',\n  expand = 'expand',\n  compute = 'compute',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n  count = 'count',\n}\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    exponentialDecimals?: boolean;\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n    streaming?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n  bodyQueryOptions?: QueryOptionNames[];\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  exponentialDecimals?: boolean;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  // Deserialize value/s from request body.\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  // Serialize value/s for request body.\n  serialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encode value/s for URL parameter or query-string.\n  encode(value: any, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string, ...opts: any[]): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parser.html":{"url":"interfaces/Parser.html","title":"interface - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        deserialize\n                                    \n                                \n                                \n                                    \n                                        encode\n                                    \n                                \n                                \n                                    \n                                        serialize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options?: OptionsHelper | StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper | StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encode\n                        \n                    \n                \n            \n            \n                \nencode(value: any, options?: OptionsHelper | StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper | StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(value: any, options?: OptionsHelper | StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper | StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ODataVersionHelper } from './helper';\nimport { Observable } from 'rxjs';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport enum QueryOptionNames {\n  select = 'select',\n  expand = 'expand',\n  compute = 'compute',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n  count = 'count',\n}\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    exponentialDecimals?: boolean;\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n    streaming?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n  bodyQueryOptions?: QueryOptionNames[];\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  exponentialDecimals?: boolean;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  // Deserialize value/s from request body.\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  // Serialize value/s for request body.\n  serialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encode value/s for URL parameter or query-string.\n  encode(value: any, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string, ...opts: any[]): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Renderable.html":{"url":"interfaces/Renderable.html","title":"interface - Renderable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Renderable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        render\n                                    \n                                \n                                \n                                    \n                                        toJSON\n                                    \n                                \n                                \n                                    \n                                        toString\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseJson.html":{"url":"interfaces/ResponseJson.html","title":"interface - ResponseJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            statusText\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataCache, ODataCacheEntry } from './cache';\nimport { ODataRequest, ODataResponse } from '../resources';\n\ninterface ResponseJson {\n  body: any | null;\n  headers: { [name: string]: string | string[] };\n  status: number;\n  statusText: string;\n  url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  name: string;\n  storage: Storage;\n\n  constructor({\n    name,\n    storage = sessionStorage,\n    timeout,\n  }: {\n    timeout?: number;\n    name: string;\n    storage?: Storage;\n  }) {\n    super({ timeout });\n    this.name = name;\n    this.storage = storage;\n    this.restore();\n    window.addEventListener('beforeunload', () => this.store());\n  }\n\n  store() {\n    this.storage.setItem(\n      this.name,\n      JSON.stringify(Array.from(this.entries.entries()))\n    );\n  }\n\n  restore() {\n    this.entries = new Map>(\n      JSON.parse(this.storage.getItem(this.name) || '[]')\n    );\n  }\n\n  flush() {\n    super.flush();\n    this.store();\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    const scope = this.scope(req);\n    const tags = this.tags(req, res);\n    this.put(req.pathWithParams, res.toJSON(), {\n      timeout: res.options.maxAge,\n      scope,\n      tags,\n    });\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const scope = this.scope(req);\n    const data = this.get(req.pathWithParams, { scope });\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseOptions.html":{"url":"interfaces/ResponseOptions.html","title":"interface - ResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OptionsHelper\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cacheability\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cacheability\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cacheability:         CacheCacheability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CacheCacheability\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataVersionHelper } from './helper';\nimport { Observable } from 'rxjs';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport enum QueryOptionNames {\n  select = 'select',\n  expand = 'expand',\n  compute = 'compute',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n  count = 'count',\n}\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    exponentialDecimals?: boolean;\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n    streaming?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n  bodyQueryOptions?: QueryOptionNames[];\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  exponentialDecimals?: boolean;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  // Deserialize value/s from request body.\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  // Serialize value/s for request body.\n  serialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encode value/s for URL parameter or query-string.\n  encode(value: any, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string, ...opts: any[]): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentHandler.html":{"url":"classes/SegmentHandler.html","title":"class - SegmentHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path/handlers.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearKey\n                            \n                            \n                                clearParameters\n                            \n                            \n                                hasKey\n                            \n                            \n                                hasParameters\n                            \n                            \n                                key\n                            \n                            \n                                parameters\n                            \n                            \n                                path\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segment: ODataSegment)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        ODataSegment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearKey\n                        \n                    \n                \n            \n            \n                \nclearKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearParameters\n                        \n                    \n                \n            \n            \n                \nclearParameters()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasKey\n                        \n                    \n                \n            \n            \n                \nhasKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasParameters\n                        \n                    \n                \n            \n            \n                \nhasParameters()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(value?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:20\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parameters\n                        \n                    \n                \n            \n            \n                \nparameters(value?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n            \n                \ntype(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path/handlers.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PathSegmentNames } from '../../types';\nimport { Types } from '../../utils';\n\nimport { EntityKey } from '../resource';\nimport type { ODataPathSegments, ODataSegment } from './segments';\n\nexport class SegmentHandler {\n  constructor(private segment: ODataSegment) {}\n  get name() {\n    return this.segment.name;\n  }\n  type(value?: string) {\n    if (value !== undefined) this.segment.type = value;\n    return this.segment.type;\n  }\n  path(value?: string) {\n    if (value !== undefined) this.segment.path = value;\n    return this.segment.path;\n  }\n  key(value?: EntityKey) {\n    if (value !== undefined) this.segment.key = value;\n    return this.segment.key as EntityKey;\n  }\n  hasKey() {\n    return !Types.isEmpty(this.segment.key);\n  }\n  clearKey() {\n    delete this.segment.key;\n  }\n  parameters(value?: T) {\n    if (value !== undefined) this.segment.parameters = value;\n    return this.segment.parameters as T;\n  }\n  hasParameters() {\n    return !Types.isEmpty(this.segment.parameters);\n  }\n  clearParameters() {\n    delete this.segment.parameters;\n  }\n}\n\nexport class ODataPathSegmentsHandler {\n  constructor(protected segments: ODataPathSegments) {}\n  entitySet() {\n    return this.segments.get(PathSegmentNames.entitySet);\n  }\n  singleton() {\n    return this.segments.get(PathSegmentNames.singleton);\n  }\n  action() {\n    return this.segments.get(PathSegmentNames.action);\n  }\n  function() {\n    return this.segments.get(PathSegmentNames.function);\n  }\n  keys(values?: (EntityKey | undefined)[]) {\n    return this.segments.keys(values);\n  }\n  property() {\n    return this.segments.get(PathSegmentNames.property);\n  }\n  navigationProperty() {\n    return this.segments.get(PathSegmentNames.navigationProperty);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringAndCollectionFunctions.html":{"url":"classes/StringAndCollectionFunctions.html","title":"class - StringAndCollectionFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringAndCollectionFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                concat\n                            \n                            \n                                contains\n                            \n                            \n                                endsWith\n                            \n                            \n                                indexOf\n                            \n                            \n                                length\n                            \n                            \n                                startsWith\n                            \n                            \n                                subString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        concat\n                        \n                    \n                \n            \n            \n                \nconcat(field: T, value: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contains\n                        \n                    \n                \n            \n            \n                \ncontains(field: T, value: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endsWith\n                        \n                    \n                \n            \n            \n                \nendsWith(field: T, value: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indexOf\n                        \n                    \n                \n            \n            \n                \nindexOf(field: T, value: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n            \n                \nlength(value: T, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startsWith\n                        \n                    \n                \n            \n            \n                \nstartsWith(field: T, value: any, normalize?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normalize\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subString\n                        \n                    \n                \n            \n            \n                \nsubString(field: T, start: number, length?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringFunctions.html":{"url":"classes/StringFunctions.html","title":"class - StringFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                matchesPattern\n                            \n                            \n                                toLower\n                            \n                            \n                                toUpper\n                            \n                            \n                                trim\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        matchesPattern\n                        \n                    \n                \n            \n            \n                \nmatchesPattern(value: T | string, pattern: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toLower\n                        \n                    \n                \n            \n            \n                \ntoLower(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toUpper\n                        \n                    \n                \n            \n            \n                \ntoUpper(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trim\n                        \n                    \n                \n            \n            \n                \ntrim(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeFieldOptions.html":{"url":"interfaces/StructuredTypeFieldOptions.html","title":"interface - StructuredTypeFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StructuredTypeFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OptionsHelper\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            field\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         StructuredTypeFieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StructuredTypeFieldConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataVersionHelper } from './helper';\nimport { Observable } from 'rxjs';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport enum QueryOptionNames {\n  select = 'select',\n  expand = 'expand',\n  compute = 'compute',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n  count = 'count',\n}\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    exponentialDecimals?: boolean;\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n    streaming?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n  bodyQueryOptions?: QueryOptionNames[];\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  exponentialDecimals?: boolean;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  // Deserialize value/s from request body.\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  // Serialize value/s for request body.\n  serialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encode value/s for URL parameter or query-string.\n  encode(value: any, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string, ...opts: any[]): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  term: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeFunctions.html":{"url":"classes/TypeFunctions.html","title":"class - TypeFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query/syntax.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cast\n                            \n                            \n                                isof\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast(value: T | string, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isof\n                        \n                    \n                \n            \n            \n                \nisof(value: T | string, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query/syntax.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { normalizeValue } from './builder';\nimport type { QueryCustomType } from './builder';\n\nexport interface Renderable {\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string;\n  toString(): string;\n  toJSON(): any;\n}\n\nexport type Funcs = (\n  x: ODataSyntax\n) => Function | Operator | Grouping | Navigation;\nexport type Field = keyof T | Funcs;\n\nfunction applyMixins(derivedCtor: any, constructors: any[]) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n          Object.create(null)\n      );\n    });\n  });\n}\n\nfunction render(\n  value: any,\n  {\n    aliases,\n    normalize,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    normalize?: boolean;\n    escape?: boolean;\n  } = {}\n): string | number | boolean | null {\n  if (typeof value === 'function') {\n    return render(value(syntax), { aliases, normalize });\n  }\n  if (typeof value === 'object' && value !== null && 'render' in value) {\n    return render(value.render({ aliases, escape }), {\n      aliases,\n      normalize,\n      escape,\n    });\n  }\n  return normalize ? normalizeValue(value, { aliases, escape }) : value;\n}\n\nexport class Function implements Renderable {\n  constructor(\n    protected name: string,\n    protected values: any[],\n    protected normalize: boolean = true,\n    protected escape: boolean = false\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Function';\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape?: boolean;\n  }): string {\n    let [field, ...values] = this.values;\n\n    field = render(field);\n    let params = [\n      field,\n      ...values.map((v) =>\n        render(v, { aliases, escape, normalize: this.normalize })\n      ),\n    ];\n    return `${this.name}(${params.join(', ')})`;\n  }\n}\n\nexport class StringAndCollectionFunctions {\n  concat(field: T, value: any, normalize?: boolean) {\n    return new Function('concat', [field, value], normalize);\n  }\n\n  contains(field: T, value: any, normalize?: boolean) {\n    return new Function('contains', [field, value], normalize);\n  }\n\n  endsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('endswith', [field, value], normalize);\n  }\n\n  indexOf(field: T, value: any, normalize?: boolean) {\n    return new Function('indexof', [field, value], normalize);\n  }\n\n  length(value: T, normalize?: boolean) {\n    return new Function('length', [value], normalize);\n  }\n\n  startsWith(field: T, value: any, normalize?: boolean) {\n    return new Function('startswith', [field, value], normalize);\n  }\n\n  subString(field: T, start: number, length?: number) {\n    let values = [field, start];\n    if (length !== undefined) {\n      values.push(length);\n    }\n    return new Function('substring', values);\n  }\n}\n\nexport class CollectionFunctions {\n  hasSubset(s1: T, s2: any) {\n    return new Function('hassubset', [s1, s2]);\n  }\n  hasSubsequence(s1: T, s2: any) {\n    return new Function('hassubsequence', [s1, s2]);\n  }\n}\n\nexport class StringFunctions {\n  matchesPattern(value: T | string, pattern: string) {\n    return new Function('matchesPattern', [value, pattern]);\n  }\n  toLower(value: T) {\n    return new Function('tolower', [value]);\n  }\n  toUpper(value: T) {\n    return new Function('toupper', [value]);\n  }\n  trim(value: T) {\n    return new Function('trim', [value]);\n  }\n}\n\nexport class DateAndTimeFunctions {\n  date(value: T) {\n    return new Function('date', [value]);\n  }\n  day(value: T) {\n    return new Function('day', [value]);\n  }\n  fractionalseconds(value: T) {\n    return new Function('fractionalseconds', [value]);\n  }\n  hour(value: T) {\n    return new Function('hour', [value]);\n  }\n  maxdatetime(value: T) {\n    return new Function('maxdatetime', [value]);\n  }\n  mindatetime(value: T) {\n    return new Function('mindatetime', [value]);\n  }\n  minute(value: T) {\n    return new Function('minute', [value]);\n  }\n  month(value: T) {\n    return new Function('month', [value]);\n  }\n  now() {\n    return new Function('now', []);\n  }\n  second(value: T) {\n    return new Function('second', [value]);\n  }\n  time(value: T) {\n    return new Function('time', [value]);\n  }\n  totaloffsetminutes(value: T) {\n    return new Function('totaloffsetminutes', [value]);\n  }\n  totalseconds(value: T) {\n    return new Function('totalseconds', [value]);\n  }\n  year(value: T) {\n    return new Function('year', [value]);\n  }\n}\n\nexport class ArithmeticFunctions {\n  ceiling(value: T | string) {\n    return new Function('ceiling', [value]);\n  }\n  floor(value: T | string) {\n    return new Function('floor', [value]);\n  }\n  round(value: T | string) {\n    return new Function('round', [value]);\n  }\n}\n\nexport class TypeFunctions {\n  cast(value: T | string, type?: string) {\n    return new Function('cast', [value, type]);\n  }\n\n  isof(value: T | string, type?: string) {\n    return new Function('isof', [value, type]);\n  }\n}\n\nexport class GeoFunctions {\n  geoDistance(value: T, point: string, normalize?: boolean) {\n    return new Function('geo.distance', [value, point], normalize);\n  }\n  geoIntersects(value: T, polygon: string, normalize?: boolean) {\n    return new Function('geo.intersects', [value, polygon], normalize);\n  }\n  geoLength(line: T, normalize?: boolean) {\n    return new Function('geo.length', [line], normalize);\n  }\n}\n\nexport class ConditionalFunctions {\n  case(condition: T | string, value: any) {\n    return new Function('case', [condition, value]);\n  }\n}\n\nexport class Operator implements Renderable {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Operator';\n  }\n\n  toJSON() {\n    return {\n      op: this.op,\n      values: this.values,\n      normalize: this.normalize,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    if (right !== undefined) {\n      right = Array.isArray(right)\n        ? `(${right\n            .map((v) =>\n              render(v, {\n                aliases,\n                escape,\n                normalize: this.normalize,\n              })\n            )\n            .join(',')})`\n        : render(right, {\n            aliases,\n            escape,\n            normalize: this.normalize,\n          });\n      return `${left} ${this.op} ${right}`;\n    }\n    return `${this.op}(${left})`;\n  }\n}\n\nexport class LogicalOperators {\n  eq(left: any, right: any, normalize?: boolean) {\n    return new Operator('eq', [left, right], normalize);\n  }\n  ne(left: any, right: any, normalize?: boolean) {\n    return new Operator('ne', [left, right], normalize);\n  }\n  gt(left: any, right: any, normalize?: boolean) {\n    return new Operator('gt', [left, right], normalize);\n  }\n  ge(left: any, right: any, normalize?: boolean) {\n    return new Operator('ge', [left, right], normalize);\n  }\n  lt(left: any, right: any, normalize?: boolean) {\n    return new Operator('lt', [left, right], normalize);\n  }\n  le(left: any, right: any, normalize?: boolean) {\n    return new Operator('le', [left, right], normalize);\n  }\n  and(left: any, right: any, normalize?: boolean) {\n    return new Operator('and', [left, right], normalize);\n  }\n  or(left: any, right: any, normalize?: boolean) {\n    return new Operator('or', [left, right], normalize);\n  }\n  not(value: any, normalize?: boolean) {\n    return new Operator('not', [value], normalize);\n  }\n  has(left: any, right: any, normalize?: boolean) {\n    return new Operator('has', [left, right], normalize);\n  }\n  in(left: any, right: any, normalize?: boolean) {\n    return new Operator('in', [left, right], normalize);\n  }\n}\n\nexport class ArithmeticOperators {\n  add(left: any, right: any, normalize?: boolean) {\n    return new Operator('add', [left, right], normalize);\n  }\n  sub(left: any, right: any, normalize?: boolean) {\n    return new Operator('sub', [left, right], normalize);\n  }\n  mul(left: any, right: any, normalize?: boolean) {\n    return new Operator('mul', [left, right], normalize);\n  }\n  div(left: any, right: any, normalize?: boolean) {\n    return new Operator('div', [left, right], normalize);\n  }\n  mod(left: any, right: any, normalize?: boolean) {\n    return new Operator('mod', [left, right], normalize);\n  }\n  neg(value: any, normalize?: boolean) {\n    return new Operator('-', [value], normalize);\n  }\n}\n\nexport class Grouping implements Renderable {\n  constructor(protected group: Renderable) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Grouping';\n  }\n\n  toJSON() {\n    return {\n      group: this.group.toJSON(),\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `(${render(this.group, { aliases })})`;\n  }\n}\n\nexport class Navigation implements Renderable {\n  constructor(protected field: T, protected value: Field) {}\n\n  get [Symbol.toStringTag]() {\n    return 'Navigation';\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      value: this.value,\n    };\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    return `${this.field}/${render(this.value, { aliases, escape })}`;\n  }\n}\n\nexport class GroupingAndNavigationOperators {\n  grouping(value: any) {\n    return new Grouping(value);\n  }\n\n  navigation(field: T, value: Field) {\n    return new Navigation(field, value);\n  }\n}\n\nexport class Lambda extends Operator {\n  constructor(\n    protected op: string,\n    protected values: any[],\n    protected normalize: boolean = true\n  ) {\n    super(op, values, normalize);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lambda';\n  }\n\n  render({\n    aliases,\n    escape,\n  }: {\n    aliases?: QueryCustomType[];\n    escape: boolean;\n  }): string {\n    let [left, right] = this.values;\n\n    left = render(left, { aliases, escape });\n    let alias = left.split('/').pop().toLowerCase();\n    return `${left}/${this.op}(${alias}:${alias}/${render(right, {\n      aliases,\n      escape,\n    })})`;\n  }\n}\n\nexport class LambdaOperators {\n  any(field: T, value: any) {\n    return new Lambda('any', [field, value]);\n  }\n\n  all(field: T, value: any) {\n    return new Lambda('all', [field, value]);\n  }\n}\n\nexport class ODataOperators {}\nexport interface ODataOperators\n  extends LogicalOperators,\n    ArithmeticOperators,\n    GroupingAndNavigationOperators,\n    LambdaOperators {}\n\napplyMixins(ODataOperators, [\n  LogicalOperators,\n  ArithmeticOperators,\n  GroupingAndNavigationOperators,\n  LambdaOperators,\n]);\nexport const operators: ODataOperators = new ODataOperators();\n\nexport class ODataFunctions {}\nexport interface ODataFunctions\n  extends StringAndCollectionFunctions,\n    CollectionFunctions,\n    StringFunctions,\n    DateAndTimeFunctions,\n    ArithmeticFunctions,\n    TypeFunctions,\n    GeoFunctions,\n    ConditionalFunctions {}\n\napplyMixins(ODataFunctions, [\n  StringAndCollectionFunctions,\n  CollectionFunctions,\n  StringFunctions,\n  DateAndTimeFunctions,\n  ArithmeticFunctions,\n  TypeFunctions,\n  GeoFunctions,\n  ConditionalFunctions,\n]);\nexport const functions: ODataFunctions = new ODataFunctions();\n\nexport class ODataSyntax {}\nexport interface ODataSyntax extends ODataOperators, ODataFunctions {}\napplyMixins(ODataSyntax, [ODataOperators, ODataFunctions]);\n\nexport const syntax: ODataSyntax = new ODataSyntax();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Connector   (projects/.../expressions.ts)\n                        \n                        \n                            FieldType   (projects/.../metadata.ts)\n                        \n                        \n                            ODataModelState   (projects/.../options.ts)\n                        \n                        \n                            PathSegmentNames   (projects/.../types.ts)\n                        \n                        \n                            QueryCustomTypes   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptionNames   (projects/.../types.ts)\n                        \n                        \n                            StandardAggregateMethods   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/query/expressions.ts\n    \n        \n            \n                \n                    \n                        \n                        Connector\n                    \n                \n                        \n                            \n                                 AND\n                            \n                        \n                        \n                            \n                                Value : and\n                            \n                        \n                        \n                            \n                                 OR\n                            \n                        \n                        \n                            \n                                Value : or\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/responses/metadata.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldType\n                    \n                \n                        \n                            \n                                 ATTRIBUTE\n                            \n                        \n                        \n                            \n                                 TAG\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/models/options.ts\n    \n        \n            \n                \n                    \n                        \n                        ODataModelState\n                    \n                \n                        \n                            \n                                 Added\n                            \n                        \n                        \n                            \n                                 Removed\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                 Unchanged\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/types.ts\n    \n        \n            \n                \n                    \n                        \n                        PathSegmentNames\n                    \n                \n                        \n                            \n                                 batch\n                            \n                        \n                        \n                            \n                                Value : batch\n                            \n                        \n                        \n                            \n                                 metadata\n                            \n                        \n                        \n                            \n                                Value : metadata\n                            \n                        \n                        \n                            \n                                 entitySet\n                            \n                        \n                        \n                            \n                                Value : entitySet\n                            \n                        \n                        \n                            \n                                 singleton\n                            \n                        \n                        \n                            \n                                Value : singleton\n                            \n                        \n                        \n                            \n                                 type\n                            \n                        \n                        \n                            \n                                Value : type\n                            \n                        \n                        \n                            \n                                 property\n                            \n                        \n                        \n                            \n                                Value : property\n                            \n                        \n                        \n                            \n                                 navigationProperty\n                            \n                        \n                        \n                            \n                                Value : navigationProperty\n                            \n                        \n                        \n                            \n                                 reference\n                            \n                        \n                        \n                            \n                                Value : reference\n                            \n                        \n                        \n                            \n                                 value\n                            \n                        \n                        \n                            \n                                Value : value\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 action\n                            \n                        \n                        \n                            \n                                Value : action\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryOptionNames\n                    \n                \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 expand\n                            \n                        \n                        \n                            \n                                Value : expand\n                            \n                        \n                        \n                            \n                                 compute\n                            \n                        \n                        \n                            \n                                Value : compute\n                            \n                        \n                        \n                            \n                                 filter\n                            \n                        \n                        \n                            \n                                Value : filter\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n                        \n                            \n                                 transform\n                            \n                        \n                        \n                            \n                                Value : transform\n                            \n                        \n                        \n                            \n                                 orderBy\n                            \n                        \n                        \n                            \n                                Value : orderBy\n                            \n                        \n                        \n                            \n                                 top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : skip\n                            \n                        \n                        \n                            \n                                 skiptoken\n                            \n                        \n                        \n                            \n                                Value : skiptoken\n                            \n                        \n                        \n                            \n                                 format\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/query/builder.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryCustomTypes\n                    \n                \n                        \n                            \n                                 Raw\n                            \n                        \n                        \n                            \n                                 Alias\n                            \n                        \n                        \n                            \n                                 Duration\n                            \n                        \n                        \n                            \n                                 Binary\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StandardAggregateMethods\n                    \n                \n                        \n                            \n                                 sum\n                            \n                        \n                        \n                            \n                                Value : sum\n                            \n                        \n                        \n                            \n                                 min\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 max\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 average\n                            \n                        \n                        \n                            \n                                Value : average\n                            \n                        \n                        \n                            \n                                 countdistinct\n                            \n                        \n                        \n                            \n                                Value : countdistinct\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular OData\n\n\nA fluent API for querying, creating, updating and deleting OData resources in Angular.\nOData service for Angular.\nPlease check also my other related project, OData Angular Generator\nDemo:\nFull examples of the library:\n\nAngularODataEntity\n\nTable of contents\n\nInstallation\nUsage\nGenerator\nOData Version\nQuery Builder\nDocumentation\n\nInstallation\nInstall from npm:\nnpm i angular-odataUsage\n\nAdd module to your project\n\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot({\n      serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n    })\n    ...\n  ]\n})\nexport class AppModule {}\nInject and use the ODataServiceFactory\n\nimport { Component } from \"@angular/core\";\nimport { ODataClient, ODATA_ETAG } from \"angular-odata\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"TripPin\";\n  constructor(private factory: ODataServiceFactory) {\n    this.queries();\n  }\n\n  queries() {\n    // Use OData Service Factory\n    let airportsService = this.factory.entitySet(\n      \"Airports\",\n      \"Microsoft.OData.SampleService.Models.TripPin.Airport\"\n    );\n    let airports = airportsService.entities();\n\n    // Fetch airports\n    airports.fetch().subscribe(({ entities }) => {\n      console.log(\"Airports: \", entities);\n    });\n\n    // Fetch airports with count\n    airports\n      .fetch({ withCount: true })\n      .subscribe(({ entities, annots }) =>\n        console.log(\"Airports: \", entities, \"Annotations: \", annots)\n      );\n\n    // Fetch all airports\n    airports\n      .fetchAll()\n      .subscribe((airports) => console.log(\"All Airports: \", airports));\n\n    // Fetch airport with key and fetch again from cache\n    airports\n      .entity(\"CYYZ\")\n      .fetch()\n      .pipe(\n        switchMap(() =>\n          // From Cache!\n          airports.entity(\"CYYZ\").fetch({ fetchPolicy: \"cache-first\" })\n        )\n      )\n      .subscribe(({ entity, annots }) =>\n        console.log(\"Airport: \", entity, \"Annotations: \", annots)\n      );\n\n    // Clone airports resource and filter new resource\n    airports\n      .clone()\n      .query((q) =>\n        q.filter({ Location: { City: { CountryRegion: \"United States\" } } })\n      )\n      .fetch()\n      .subscribe(({ entities, annots }) =>\n        console.log(\n          \"Airports of United States: \",\n          entities,\n          \"Annotations: \",\n          annots\n        )\n      );\n\n    // Change query definition of airports resource and fetch again\n    airports.query((q) =>\n      q.filter().push({ Location: { City: { Region: \"California\" } } })\n    );\n    airports\n      .fetch()\n      .subscribe(({ entities, annots }) =>\n        console.log(\n          \"Airports in California: \",\n          entities,\n          \"Annotations: \",\n          annots\n        )\n      );\n\n    // Store airports resource\n    var json = airports.toJSON();\n    // Load airports resource\n    airports = this.odata.fromJSON(json) as ODataEntitySetResource;\n\n    // Change query definition of airports resource and fetch again\n    airports.query((q) => q.filter().clear());\n    airports\n      .fetch()\n      .subscribe(({ entities, annots }) =>\n        console.log(\"Airports: \", entities, \"Annotations: \", annots)\n      );\n\n    let peopleService = this.factory.entitySet(\n      \"People\",\n      \"Microsoft.OData.SampleService.Models.TripPin.Person\"\n    );\n    let people = peopleService.entities();\n\n    // Clone people resource and expand and fetch\n    people\n      .clone()\n      .query((q) =>\n        q.expand({\n          Friends: {\n            expand: { Friends: { select: [\"AddressInfo\"] } },\n          },\n          Trips: { select: [\"Name\", \"Tags\"] },\n        })\n      )\n      .fetch({ withCount: true })\n      .subscribe(({ entities, annots }) =>\n        console.log(\n          \"People with Friends and Trips: \",\n          entities,\n          \"Annotations: \",\n          annots\n        )\n      );\n\n    // Clone people resource and filter with expressions\n    people\n      .clone()\n      .query((q) =>\n        q.filter(({ e }) =>\n          e().eq(\"Emails\", \"john@example.com\").or(e().eq(\"UserName\", \"john\"))\n        )\n      )\n      .fetch()\n      .subscribe(({ entities, annots }) =>\n        console.log(\n          \"People with Friends and Trips: \",\n          entities,\n          \"Annotations: \",\n          annots\n        )\n      );\n\n    this.odata\n      .batch(\"TripPin\")\n      .exec(() =>\n        forkJoin({\n          airports: airports.fetch(),\n          people: people.fetch({ withCount: true }),\n        })\n      )\n      .subscribe();\n  }\n}Generator\nIf you use OData Angular Generator, import the config and the module from generated source.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, TripPinModule } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig),\n    TripPinModule\n  ]\n  ...\n})\nexport class AppModule {}OData Version\nThe library works mainly with OData Version 4, however, it incorporates basic support for versions 3 and 2.\nQuery Builder\nFor a deep query customizations the library use odata-query and odata-filter-builder as a builders.\n\nOData v4 query builder\nOData Filter Builder\n\nDocumentation\nThe api documentation is generated using compodoc and can be viewed here: https://diegomvh.github.io/angular-odata/docs/\nLibrary documentation can be viewed on the wiki here: https://github.com/diegomvh/angular-odata/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Diego van Haaster\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ODataModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    111 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (projects/.../builder.ts)\n                        \n                        \n                            AnnotationConfig   (projects/.../types.ts)\n                        \n                        \n                            ApiConfig   (projects/.../types.ts)\n                        \n                        \n                            CacheCacheability   (projects/.../types.ts)\n                        \n                        \n                            CallableConfig   (projects/.../types.ts)\n                        \n                        \n                            Duration   (projects/.../durations.ts)\n                        \n                        \n                            EntityContainerConfig   (projects/.../types.ts)\n                        \n                        \n                            EntityKey   (projects/.../resource.ts)\n                        \n                        \n                            EntitySetConfig   (projects/.../types.ts)\n                        \n                        \n                            EnumTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            EnumTypeFieldConfig   (projects/.../types.ts)\n                        \n                        \n                            Expand   (projects/.../builder.ts)\n                        \n                        \n                            ExpandObject   (projects/.../builder.ts)\n                        \n                        \n                            ExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ExpandType   (projects/.../builder.ts)\n                        \n                        \n                            FetchPolicy   (projects/.../types.ts)\n                        \n                        \n                            Field   (projects/.../syntax.ts)\n                        \n                        \n                            Filter   (projects/.../builder.ts)\n                        \n                        \n                            FilterType   (projects/.../builder.ts)\n                        \n                        \n                            Funcs   (projects/.../syntax.ts)\n                        \n                        \n                            GroupBy   (projects/.../builder.ts)\n                        \n                        \n                            JsonSchemaCustom   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaExpand   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaOptions   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaRequired   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaSelect   (projects/.../structured-type.ts)\n                        \n                        \n                            ModelFieldOptions   (projects/.../options.ts)\n                        \n                        \n                            ModelOptions   (projects/.../options.ts)\n                        \n                        \n                            NestedExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ODataCollectionResource   (projects/.../options.ts)\n                        \n                        \n                            ODataContext   (projects/.../helper.ts)\n                        \n                        \n                            ODataEntities   (projects/.../types.ts)\n                        \n                        \n                            ODataEntitiesOptions   (projects/.../options.ts)\n                        \n                        \n                            ODataEntity   (projects/.../types.ts)\n                        \n                        \n                            ODataEntityOptions   (projects/.../options.ts)\n                        \n                        \n                            ODataMetadataType   (projects/.../types.ts)\n                        \n                        \n                            ODataModelEntry   (projects/.../options.ts)\n                        \n                        \n                            ODataModelEventType   (projects/.../options.ts)\n                        \n                        \n                            ODataModelFieldOptions   (projects/.../options.ts)\n                        \n                        \n                            ODataModelRelation   (projects/.../options.ts)\n                        \n                        \n                            ODataModelResource   (projects/.../options.ts)\n                        \n                        \n                            ODataNoneOptions   (projects/.../options.ts)\n                        \n                        \n                            ODataOptions   (projects/.../options.ts)\n                        \n                        \n                            ODataProperty   (projects/.../types.ts)\n                        \n                        \n                            ODataPropertyOptions   (projects/.../options.ts)\n                        \n                        \n                            ODataQueryArguments   (projects/.../options.ts)\n                        \n                        \n                            ODataQueryArgumentsOptions   (projects/.../options.ts)\n                        \n                        \n                            ODataSegment   (projects/.../segments.ts)\n                        \n                        \n                            ODataVersion   (projects/.../types.ts)\n                        \n                        \n                            OrderBy   (projects/.../builder.ts)\n                        \n                        \n                            OrderByObject   (projects/.../builder.ts)\n                        \n                        \n                            OrderByType   (projects/.../builder.ts)\n                        \n                        \n                            Parameter   (projects/.../types.ts)\n                        \n                        \n                            QueryCustomType   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptions   (projects/.../builder.ts)\n                        \n                        \n                            SchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            Select   (projects/.../builder.ts)\n                        \n                        \n                            SelectType   (projects/.../builder.ts)\n                        \n                        \n                            StructuredTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            StructuredTypeFieldConfig   (projects/.../types.ts)\n                        \n                        \n                            Transform   (projects/.../builder.ts)\n                        \n                        \n                            Unpacked   (projects/.../builder.ts)\n                        \n                        \n                            Value   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/query/builder.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Expand\n                \n            \n            \n                \n                        ExpandType | ExpandType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandObject\n                \n            \n            \n                \n                             | NestedExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandType\n                \n            \n            \n                \n                        string | ExpandObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                        FilterType | FilterType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupBy\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NestedExpandOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderBy\n                \n            \n            \n                \n                        OrderByType | OrderByType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByObject\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByType\n                \n            \n            \n                \n                        string | OrderByObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryCustomType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Select\n                \n            \n            \n                \n                        SelectType | SelectType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectType\n                \n            \n            \n                \n                        string | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Transform\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Unpacked\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                            string | Date | number | boolean | QueryCustomType\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    AnnotationConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CacheCacheability\n                \n            \n            \n                \n                        \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CallableConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityContainerConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntitySetConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumTypeFieldConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPolicy\n                \n            \n            \n                \n                        \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataMetadataType\n                \n            \n            \n                \n                        \"minimal\" | \"full\" | \"none\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataVersion\n                \n            \n            \n                \n                        \"2.0\" | \"3.0\" | \"4.0\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Parameter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SchemaConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StructuredTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StructuredTypeFieldConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/utils/durations.ts\n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/resource.ts\n    \n    \n        \n            \n                \n                    \n                    EntityKey\n                \n            \n            \n                \n                             | QueryCustomType | string | number\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/query/syntax.ts\n    \n    \n        \n            \n                \n                    \n                    Field\n                \n            \n            \n                \n                             | Funcs\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Funcs\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/schema/parsers/structured-type.ts\n    \n    \n        \n            \n                \n                    \n                    JsonSchemaCustom\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaRequired\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaSelect\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/models/options.ts\n    \n    \n        \n            \n                \n                    \n                    ModelFieldOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataCollectionResource\n                \n            \n            \n                \n                            ODataEntitySetResource | ODataNavigationPropertyResource | ODataPropertyResource\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelEntry\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelEventType\n                \n            \n            \n                \n                        \"change\" | \"reset\" | \"update\" | \"destroy\" | \"add\" | \"remove\" | \"invalid\" | \"request\" | \"sync\" | \"attach\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelFieldOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelRelation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelResource\n                \n            \n            \n                \n                            ODataEntityResource | ODataSingletonResource | ODataNavigationPropertyResource | ODataPropertyResource\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/helper.ts\n    \n    \n        \n            \n                \n                    \n                    ODataContext\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/responses/types.ts\n    \n    \n        \n            \n                \n                    \n                    ODataEntities\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataEntity\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/options.ts\n    \n    \n        \n            \n                \n                    \n                    ODataEntitiesOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataEntityOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataNoneOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataPropertyOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataQueryArgumentsOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/query/options.ts\n    \n    \n        \n            \n                \n                    \n                    ODataQueryArguments\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path/segments.ts\n    \n    \n        \n            \n                \n                    \n                    ODataSegment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
