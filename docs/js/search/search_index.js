var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiOptions.html",[0,1.431,1,2.211]],["body/interfaces/ApiOptions.html",[0,2.543,1,3.167,2,1.799,3,0.092,4,0.081,5,0.092,6,0.059,7,1.982,8,1.312,9,1.868,10,0.059,11,0.275,12,0.241,13,3.301,14,2.789,15,3.835,16,2.637,17,2.543,18,3.46,19,3.637,20,3.301,21,2.06,22,0.143,23,0.013,24,3.074,25,0.818,26,0.449,27,2.552,28,1.648,29,3.001,30,2.271,31,0.193,32,2.889,33,1.886,34,1.886,35,1.886,36,2.893,37,1.648,38,2.47,39,2.707,40,1.886,41,1.799,42,2.707,43,0.53,44,0.905,45,1.72,46,2.366,47,1.886,48,2.707,49,0.226,50,1.879,51,2.707,52,1.982,53,1.982,54,1.886,55,1.193,56,0.846,57,1.982,58,1.982,59,1.72,60,2.385,61,1.886,62,1.886,63,1.982,64,1.982,65,2.902,66,1.408,67,2.889,68,1.98,69,1.879,70,1.589,71,1.662,72,1.948,73,2.09,74,2.09,75,1.648,76,2.889,77,1.799,78,1.357,79,0.849,80,1.648,81,1.357,82,1.799,83,1.648,84,1.886,85,0.905,86,1.72,87,0.795,88,1.408,89,1.886,90,1.886,91,1.982,92,0.151,93,1.636,94,2.09,95,1.72,96,2.09,97,1.799,98,2.09,99,1.799,100,1.982,101,2.707,102,4.02,103,1.982,104,1.982,105,1.982,106,1.22,107,1.3,108,2.149,109,1.799,110,2.47,111,1.648,112,2.366,113,1.982,114,2.366,115,1.982,116,2.707,117,1.799,118,2.707,119,2.583,120,1.886,121,1.648,122,2.182,123,1.799,124,0.966,125,0.905,126,2.902,127,1.342,128,1.357,129,0.966,130,0.966,131,1.799,132,0.795,133,1.408,134,1.799,135,2.09,136,1.648,137,1.648,138,1.886,139,1.133,140,1.52,141,1.52,142,1.799,143,1.462,144,1.982,145,1.982,146,0.104,147,1.799,148,1.886,149,1.462,150,0.005,151,0.007,152,0.005]],["title/interfaces/Cache.html",[0,1.431,36,1.591]],["body/interfaces/Cache.html",[0,2.571,1,2.781,2,1.868,3,0.096,4,0.084,5,0.096,6,0.1,7,2.058,8,1.26,9,1.847,10,0.061,11,0.17,12,0.153,13,1.868,14,1.578,15,3.085,16,2.001,17,2.278,18,1.958,19,2.058,20,1.868,22,0.14,23,0.013,24,2.837,25,0.816,26,0.462,27,2.606,28,1.712,29,3.082,30,2.332,31,0.194,32,2.95,33,1.958,34,1.958,35,1.958,36,2.973,37,1.712,38,2.537,39,2.781,40,1.958,41,1.868,42,2.781,43,0.551,44,0.94,45,1.787,46,2.431,47,1.958,48,2.781,49,0.227,50,1.93,51,2.781,52,2.058,53,2.058,54,1.958,55,1.204,56,0.869,57,2.058,58,2.058,59,1.787,60,2.415,61,1.958,62,1.958,63,2.058,64,2.058,65,2.953,66,1.462,67,2.95,68,2.022,69,1.93,70,1.602,71,1.799,72,2.001,73,2.171,74,2.171,75,1.712,76,2.95,77,1.868,78,1.409,79,0.881,80,1.712,81,1.409,82,2.653,83,2.826,84,3.234,85,1.335,86,2.537,87,1.173,88,1.462,89,1.958,90,1.958,91,2.058,92,0.157,93,1.681,94,2.171,95,1.787,96,2.171,97,1.868,98,2.171,99,1.868,100,2.058,101,2.781,102,4.06,103,2.058,104,2.058,105,2.058,106,1.267,107,1.335,108,2.173,109,1.868,110,2.537,111,1.712,112,2.431,113,2.058,114,2.431,115,2.058,116,2.781,117,1.868,118,2.781,119,2.653,120,1.958,121,1.712,122,2.241,123,1.868,124,1.003,125,1.552,126,2.953,127,1.379,128,1.409,129,1.003,130,1.003,131,1.868,132,0.826,133,1.462,134,1.868,135,2.171,136,1.712,137,1.712,138,1.958,139,1.157,140,1.578,141,1.578,142,1.868,143,1.518,144,2.058,145,2.058,146,0.178,147,1.868,148,1.958,149,1.518,150,0.005,151,0.008,152,0.005,153,1.251,154,3.082,155,0.26,156,3.617,157,1.212,158,3.617]],["title/classes/CsdlAction.html",[159,0.32,160,2.211]],["body/classes/CsdlAction.html",[3,0.126,4,0.111,5,0.126,6,0.133,10,0.08,11,0.291,12,0.241,22,0.135,23,0.013,25,0.796,31,0.18,43,1.321,49,0.225,55,1.222,92,0.162,124,1.718,127,1.663,129,1.718,130,1.718,143,3.252,146,0.235,150,0.007,151,0.009,152,0.007,155,0.392,159,0.607,160,3.353,161,0.294,162,1.922,163,2.26,164,3.026,165,4.648,166,4.648,167,0.458,168,1.457,169,4.408,170,4.408,171,4.76,172,1.321,173,4.76,174,4.76,175,4.76,176,4.76,177,4.76,178,2.577,179,2.857,180,2.577,181,3.026,182,3.059,183,2.709,184,2.577,185,1.789,186,2.413]],["title/classes/CsdlActionImport.html",[159,0.32,184,2.211]],["body/classes/CsdlActionImport.html",[3,0.132,4,0.116,5,0.132,6,0.129,10,0.084,11,0.301,12,0.21,22,0.132,23,0.013,25,0.773,31,0.182,43,1.321,49,0.227,55,1.238,92,0.163,124,1.772,127,1.715,129,1.772,130,1.772,143,2.682,146,0.21,150,0.007,151,0.009,152,0.007,155,0.376,159,0.615,160,2.705,161,0.309,162,1.869,163,2.198,164,3.176,165,3.834,166,3.834,167,0.463,168,1.529,169,4.007,170,4.007,172,0.905,178,2.705,179,2.998,180,2.705,181,3.176,182,3.876,183,2.843,184,3.459,185,2.883,186,2.489,187,4.996,188,4.996,189,4.996,190,4.996]],["title/classes/CsdlAnnotable.html",[159,0.32,191,2.11]],["body/classes/CsdlAnnotable.html",[3,0.15,4,0.131,5,0.15,6,0.125,8,1.097,10,0.095,11,0.325,12,0.222,22,0.125,23,0.013,25,0.557,31,0.18,43,1.3,49,0.222,55,1.176,92,0.138,124,1.569,127,1.519,129,1.569,130,1.569,146,0.169,150,0.008,151,0.01,152,0.008,155,0.35,159,0.608,161,0.35,162,1.816,167,0.432,172,1.025,186,2.205,191,3.849,192,4.114,193,4.308,194,5.658,195,3.998,196,5.658,197,5.658,198,2.259,199,3.396,200,3.597,201,3.929,202,3.063,203,3.832,204,3.396,205,3.832,206,2.923,207,3.832]],["title/classes/CsdlAnnotation.html",[159,0.32,195,2.017]],["body/classes/CsdlAnnotation.html",[3,0.147,4,0.129,5,0.147,6,0.13,8,1.075,10,0.093,11,0.321,12,0.22,22,0.13,23,0.013,25,0.546,31,0.179,43,1.303,49,0.226,55,1.166,92,0.136,124,1.538,127,1.489,129,1.538,130,1.538,146,0.165,150,0.008,151,0.01,152,0.008,155,0.374,159,0.604,161,0.343,162,1.877,167,0.429,172,1.005,186,2.16,191,3.523,192,4.031,193,3.692,195,3.806,198,2.232,199,3.327,200,3.525,201,4.583,202,3.002,203,5.218,204,3.327,205,3.755,206,2.864,207,3.755,208,5.544,209,5.544,210,6.819]],["title/classes/CsdlAnnotations.html",[159,0.32,199,2.451]],["body/classes/CsdlAnnotations.html",[3,0.143,4,0.126,5,0.143,6,0.128,8,1.301,10,0.091,11,0.316,12,0.234,22,0.132,23,0.013,25,0.533,31,0.177,43,1.305,49,0.226,55,1.153,92,0.134,124,1.5,127,1.452,129,1.5,130,1.5,146,0.161,150,0.008,151,0.01,152,0.008,155,0.387,159,0.598,161,0.334,162,1.861,167,0.424,172,0.98,186,2.107,191,3.946,192,3.931,193,4.334,195,3.954,198,2.197,199,4.03,200,4.855,201,4.555,202,2.927,203,3.661,204,3.245,205,3.661,206,2.793,207,3.661,211,5.407,212,5.407,213,5.407,214,5.407,215,2.359,216,3.931]],["title/classes/CsdlComplexType.html",[159,0.32,217,2.324]],["body/classes/CsdlComplexType.html",[3,0.127,4,0.111,5,0.127,6,0.105,8,1.339,10,0.081,11,0.387,12,0.245,22,0.133,23,0.013,25,0.819,26,0.431,31,0.176,43,1.297,49,0.221,92,0.16,107,1.247,125,1.247,132,1.096,146,0.143,150,0.007,151,0.009,152,0.007,155,0.4,159,0.593,161,0.297,162,1.517,167,0.424,168,1.469,172,1.373,198,2.037,215,3.387,217,3.542,218,2.827,219,2.015,220,5.191,221,2.741,222,5.146,223,5.482,224,5.146,225,3.74,226,3.74,227,4.19,228,4.19,229,4.19,230,4.19,231,4.19,232,4.19,233,4.19,234,2.179,235,2.371,236,3.216,237,2.731,238,3.736,239,3.051,240,3.25,241,3.736]],["title/classes/CsdlEntityContainer.html",[159,0.32,242,2.969]],["body/classes/CsdlEntityContainer.html",[3,0.138,4,0.121,5,0.138,6,0.137,10,0.088,11,0.309,12,0.248,22,0.135,23,0.013,26,0.645,31,0.121,43,1.298,49,0.216,92,0.155,117,4.013,146,0.155,150,0.008,151,0.01,152,0.008,155,0.408,159,0.408,161,0.322,162,1.984,163,1.493,167,0.381,168,1.595,172,1.408,180,4.206,184,4.206,185,1.958,234,3.261,242,4.77,243,4.059,244,4.548,245,7.768,246,7.768,247,7.768,248,7.768,249,5.648,250,5.648,251,5.209,252,5.209,253,4.548,254,4.548,255,5.209,256,4.548,257,4.548,258,3.312,259,3.312]],["title/classes/CsdlEntitySet.html",[159,0.32,249,2.969]],["body/classes/CsdlEntitySet.html",[3,0.149,4,0.131,5,0.149,6,0.136,10,0.095,11,0.324,12,0.237,22,0.134,23,0.013,25,0.763,26,0.506,31,0.131,43,1.287,49,0.219,92,0.159,128,2.196,132,1.287,146,0.168,147,4.105,150,0.008,151,0.01,152,0.008,155,0.403,159,0.441,161,0.348,162,1.97,167,0.4,168,1.725,172,1.248,183,4.523,234,2.559,243,3.994,249,5.008,260,4.92,261,6.939,262,5.382,263,5.635,264,4.92,265,4.92,266,4.92,267,4.92,268,3.816]],["title/classes/CsdlEntityType.html",[159,0.32,237,2.324]],["body/classes/CsdlEntityType.html",[3,0.122,4,0.107,5,0.122,6,0.121,8,1.311,10,0.077,11,0.384,12,0.249,22,0.135,23,0.013,25,0.825,26,0.413,31,0.174,43,1.301,49,0.22,92,0.159,107,1.195,125,1.942,132,1.05,146,0.137,150,0.007,151,0.009,152,0.007,155,0.407,159,0.585,161,0.284,162,1.752,167,0.417,168,1.407,172,1.417,198,1.98,215,3.348,217,2.616,218,3.265,219,1.93,220,5.152,221,2.718,222,5.104,223,5.437,224,5.104,225,3.701,226,3.701,228,4.013,229,4.013,230,4.013,231,4.013,232,4.013,233,4.013,234,2.087,235,2.271,236,3.126,237,3.444,238,4.484,239,4.75,240,3.113,241,3.632,269,3.629,270,4.596,271,4.013]],["title/classes/CsdlEnumMember.html",[159,0.32,272,2.969]],["body/classes/CsdlEnumMember.html",[3,0.156,4,0.137,5,0.156,6,0.132,10,0.099,11,0.333,12,0.226,22,0.128,23,0.013,25,0.58,31,0.164,43,1.277,49,0.216,55,1.241,70,1.665,92,0.163,121,2.784,146,0.175,150,0.009,151,0.01,152,0.009,155,0.384,159,0.554,161,0.364,162,1.916,167,0.41,168,1.801,172,1.066,198,1.925,219,2.47,272,5.511,273,3.431,274,4.645,275,5.581,276,3.984,277,4.645,278,4.645]],["title/classes/CsdlEnumType.html",[159,0.32,276,2.766]],["body/classes/CsdlEnumType.html",[3,0.149,4,0.13,5,0.149,6,0.136,10,0.094,11,0.323,12,0.237,22,0.133,23,0.013,25,0.762,31,0.159,43,1.291,49,0.22,55,0.885,70,1.16,92,0.162,121,3.755,146,0.167,150,0.008,151,0.01,152,0.008,155,0.402,159,0.538,161,0.346,162,1.968,167,0.398,168,1.715,172,1.244,198,1.834,219,2.353,272,5.769,273,3.524,276,4.649,277,6.265,278,6.265,279,5.604,280,4.893,281,5.604,282,5.604,283,5.604]],["title/classes/CsdlFunction.html",[159,0.32,178,2.211]],["body/classes/CsdlFunction.html",[3,0.124,4,0.109,5,0.124,6,0.134,10,0.079,11,0.288,12,0.24,22,0.136,23,0.013,25,0.812,31,0.179,43,1.321,49,0.225,55,1.216,92,0.161,124,1.697,127,1.643,129,1.697,130,1.697,143,3.236,146,0.234,150,0.007,151,0.009,152,0.007,155,0.398,159,0.604,160,2.531,161,0.289,162,1.941,163,2.283,164,2.971,165,4.625,166,4.625,167,0.456,168,1.431,169,4.386,170,4.386,172,1.312,178,3.313,179,4.508,180,2.531,181,2.971,182,3.023,183,2.66,184,2.531,185,1.757,186,2.384,284,4.674,285,4.674,286,4.674,287,4.674,288,4.674,289,4.674,290,4.674]],["title/classes/CsdlFunctionImport.html",[159,0.32,180,2.211]],["body/classes/CsdlFunctionImport.html",[3,0.129,4,0.113,5,0.129,6,0.131,10,0.082,11,0.296,12,0.227,22,0.133,23,0.013,25,0.8,31,0.181,43,1.321,49,0.227,55,1.231,92,0.163,124,1.746,127,1.691,129,1.746,130,1.746,143,2.643,146,0.208,150,0.007,151,0.009,152,0.007,155,0.386,159,0.611,160,2.644,161,0.302,162,1.9,163,2.235,164,3.105,165,3.778,166,3.778,167,0.46,168,1.495,169,3.965,170,3.965,172,1.141,178,2.644,179,2.931,180,3.409,181,4.842,182,3.852,183,4.335,184,2.644,185,1.836,186,2.453,291,4.884,292,4.884,293,4.884,294,4.884,295,4.884]],["title/classes/CsdlInclude.html",[159,0.32,296,2.766]],["body/classes/CsdlInclude.html",[3,0.151,4,0.132,5,0.151,6,0.131,8,1.104,10,0.096,11,0.326,12,0.223,22,0.126,23,0.013,26,0.512,31,0.174,43,1.284,49,0.224,59,2.814,92,0.114,106,2.725,107,2.072,146,0.17,150,0.008,151,0.01,152,0.008,155,0.379,159,0.586,161,0.352,162,1.895,167,0.434,172,1.032,191,3.582,193,3.084,195,3.425,198,1.864,201,3.242,202,3.084,234,2.587,296,5.062,297,4.498,298,4.974,299,5.697,300,6.933,301,2.814,302,3.858,303,4.142,304,4.498,305,4.695,306,4.142,307,4.142]],["title/classes/CsdlIncludeAnnotations.html",[159,0.32,305,2.766]],["body/classes/CsdlIncludeAnnotations.html",[3,0.147,4,0.129,5,0.147,6,0.133,8,1.077,10,0.094,11,0.322,12,0.236,22,0.13,23,0.013,26,0.5,31,0.172,43,1.29,49,0.226,59,2.746,92,0.111,106,1.948,107,1.445,146,0.166,150,0.008,151,0.01,152,0.008,155,0.391,159,0.579,161,0.344,162,1.929,167,0.429,172,1.238,191,3.529,193,3.01,195,3.374,198,1.819,201,4.505,202,3.01,234,2.525,296,4.626,297,4.389,301,2.746,302,3.765,303,4.042,304,4.389,305,5.007,306,5.607,307,5.756,308,5.559,309,5.559,310,5.559,311,5.559,312,5.559]],["title/classes/CsdlKey.html",[159,0.32,238,2.451]],["body/classes/CsdlKey.html",[3,0.142,4,0.125,5,0.142,6,0.122,8,1.295,10,0.09,11,0.381,12,0.16,22,0.112,23,0.013,25,0.798,26,0.482,31,0.182,43,1.273,49,0.217,92,0.157,107,1.395,125,1.395,132,1.225,146,0.16,150,0.008,151,0.01,152,0.008,155,0.339,159,0.614,161,0.332,162,1.773,167,0.442,198,2.187,217,3.053,218,3.305,219,2.252,220,4.626,221,2.653,222,4.981,223,5.307,224,4.981,225,3.605,226,3.605,234,2.436,235,2.65,236,3.452,237,3.053,238,4.368,239,3.41,240,5.158,241,4.703,313,5.365,314,5.365,315,4.684]],["title/classes/CsdlNavigationProperty.html",[159,0.32,226,1.933]],["body/classes/CsdlNavigationProperty.html",[3,0.126,4,0.11,5,0.126,6,0.13,8,1.332,10,0.08,11,0.291,12,0.245,22,0.142,23,0.013,25,0.809,31,0.175,43,1.308,49,0.225,55,1.085,92,0.158,124,1.317,127,2.17,129,1.317,130,1.317,132,1.085,133,1.92,146,0.142,150,0.007,151,0.009,152,0.007,155,0.405,159,0.592,161,0.294,162,1.886,167,0.423,168,1.454,172,1.368,185,1.785,186,1.851,198,2.023,206,2.453,215,3,221,1.608,225,2.248,226,2.926,235,3.824,236,3.194,316,3.216,317,5.011,318,4.8,319,4.8,320,4.8,321,5.113,322,4.531,323,4.531,324,4.749,325,4.749,326,4.749,327,4.749,328,4.749,329,4.147,330,4.147,331,4.147,332,2.85]],["title/classes/CsdlNavigationPropertyBinding.html",[159,0.32,262,2.766]],["body/classes/CsdlNavigationPropertyBinding.html",[3,0.16,4,0.14,5,0.16,6,0.133,10,0.102,11,0.338,12,0.18,22,0.129,23,0.012,31,0.14,43,1.234,49,0.222,92,0.121,128,3.092,132,1.812,146,0.18,150,0.009,151,0.011,152,0.009,155,0.389,159,0.474,161,0.374,162,1.933,167,0.351,198,1.979,200,5.151,262,4.867,333,6.046,334,3.919,335,6.046,336,6.046,337,7.186]],["title/classes/CsdlOnDelete.html",[159,0.32,323,2.451]],["body/classes/CsdlOnDelete.html",[3,0.144,4,0.126,5,0.144,6,0.123,8,1.306,10,0.091,11,0.317,12,0.162,22,0.137,23,0.013,25,0.775,31,0.183,43,1.298,49,0.225,55,1.155,92,0.153,124,1.508,127,2.112,129,1.508,130,1.508,132,1.241,133,2.197,146,0.162,150,0.008,151,0.01,152,0.008,155,0.341,159,0.616,161,0.336,162,1.784,167,0.444,185,2.876,186,2.118,198,2.204,206,2.808,221,1.84,225,2.572,226,2.572,235,3.616,236,3.48,316,3.681,317,4.654,318,3.455,319,3.455,320,3.455,321,3.681,322,4.043,323,4.393,332,3.262,338,5.435,339,5.435,340,5.435]],["title/classes/CsdlParameter.html",[159,0.32,170,2.324]],["body/classes/CsdlParameter.html",[3,0.121,4,0.106,5,0.121,6,0.135,10,0.077,11,0.284,12,0.243,22,0.14,23,0.013,25,0.79,31,0.178,43,1.321,49,0.226,55,1.316,92,0.161,124,2.125,127,2.057,129,2.125,130,2.125,143,2.533,146,0.201,150,0.007,151,0.009,152,0.007,155,0.402,159,0.6,160,2.478,161,0.283,162,1.955,163,2.299,164,2.909,165,3.621,166,3.621,167,0.453,168,1.401,169,3.842,170,4.085,172,1.352,178,2.478,179,2.746,180,2.478,181,2.909,182,2.981,183,2.604,184,2.478,185,1.72,186,2.986,341,4.576,342,4.576,343,4.576,344,4.576,345,4.576,346,4.576,347,4.576,348,4.576]],["title/classes/CsdlProperty.html",[159,0.32,225,1.933]],["body/classes/CsdlProperty.html",[3,0.121,4,0.106,5,0.121,6,0.133,8,1.305,10,0.077,11,0.283,12,0.248,22,0.142,23,0.013,25,0.803,31,0.173,43,1.31,49,0.226,55,1.296,92,0.156,124,2.066,127,2.152,129,2.066,130,2.066,132,1.039,133,1.84,146,0.136,150,0.007,151,0.009,152,0.007,155,0.41,159,0.583,161,0.281,162,1.93,167,0.416,168,1.393,172,1.414,185,1.711,186,2.902,198,1.967,206,3.847,215,2.938,221,1.541,225,2.845,226,2.154,235,3.912,236,3.106,316,3.082,317,4.96,318,2.893,319,2.893,320,2.893,321,3.082,322,3.608,323,3.608,329,3.973,330,3.973,331,3.973,332,4.469,349,4.551,350,4.551,351,4.551,352,4.551,353,4.551,354,4.551,355,4.551]],["title/classes/CsdlPropertyRef.html",[159,0.32,241,2.451]],["body/classes/CsdlPropertyRef.html",[3,0.139,4,0.122,5,0.139,6,0.127,8,1.275,10,0.088,11,0.379,12,0.215,22,0.121,23,0.013,25,0.794,26,0.471,31,0.181,43,1.281,49,0.224,92,0.163,107,2.022,125,1.361,132,1.196,146,0.156,150,0.008,151,0.01,152,0.008,155,0.365,159,0.61,161,0.324,162,1.84,167,0.438,168,1.603,172,0.949,198,2.154,217,2.98,218,3.429,219,2.198,220,4.575,221,2.634,222,4.946,223,5.269,224,4.946,225,3.573,226,3.573,234,2.378,235,2.586,236,3.4,237,2.98,238,3.95,239,3.328,240,3.546,241,4.319,356,4.571,357,5.746]],["title/classes/CsdlReference.html",[159,0.32,302,2.766]],["body/classes/CsdlReference.html",[3,0.143,4,0.126,5,0.143,6,0.132,8,1.302,10,0.091,11,0.316,12,0.242,22,0.132,23,0.013,26,0.487,31,0.17,43,1.294,49,0.219,59,3.881,92,0.108,106,1.897,107,1.407,146,0.161,150,0.008,151,0.01,152,0.008,155,0.398,159,0.573,161,0.335,162,1.914,167,0.424,172,1.324,191,3.947,193,4.254,195,3.881,198,1.772,201,3.081,202,2.931,215,2.363,216,3.936,234,2.459,296,5.321,297,4.274,301,2.674,302,4.551,303,5.556,304,6.203,305,5.321,306,3.936,307,3.936,358,5.414,359,5.414,360,5.414,361,5.414,362,5.414]],["title/classes/CsdlReferentialConstraint.html",[159,0.32,322,2.451]],["body/classes/CsdlReferentialConstraint.html",[3,0.141,4,0.124,5,0.141,6,0.128,8,1.289,10,0.09,11,0.313,12,0.159,22,0.138,23,0.013,25,0.77,31,0.182,43,1.301,49,0.226,55,1.145,92,0.152,124,1.477,127,2.099,129,1.477,130,1.477,132,1.735,133,3.161,146,0.159,150,0.008,151,0.01,152,0.008,155,0.367,159,0.613,161,0.329,162,1.851,167,0.441,185,2.001,186,2.074,198,2.176,206,2.75,221,1.802,225,2.519,226,2.519,235,3.752,236,3.435,316,3.605,317,4.61,318,3.384,319,3.384,320,3.384,321,3.605,322,4.352,323,3.991,332,3.195,363,5.323,364,5.323,365,6.649]],["title/classes/CsdlReturnType.html",[159,0.32,169,2.324]],["body/classes/CsdlReturnType.html",[3,0.123,4,0.108,5,0.123,6,0.134,10,0.078,11,0.287,12,0.244,22,0.139,23,0.013,25,0.793,31,0.179,43,1.321,49,0.225,55,1.319,92,0.154,124,2.136,127,2.068,129,2.136,130,2.136,143,2.563,146,0.203,150,0.007,151,0.009,152,0.007,155,0.398,159,0.603,160,2.522,161,0.288,162,1.939,163,2.281,164,2.961,165,3.664,166,3.664,167,0.455,169,4.113,170,3.876,172,1.36,178,2.522,179,2.796,180,2.522,181,2.961,182,3.016,183,2.651,184,2.522,185,1.751,186,3,366,4.658,367,4.658,368,4.658,369,4.658,370,4.658,371,4.658,372,4.658,373,4.658]],["title/classes/CsdlSchema.html",[159,0.32,374,3.224]],["body/classes/CsdlSchema.html",[3,0.116,4,0.102,5,0.116,6,0.138,8,1.138,10,0.074,11,0.276,12,0.253,22,0.14,23,0.013,26,0.681,31,0.102,43,1.311,49,0.208,92,0.088,106,2.474,107,1.913,146,0.131,150,0.007,151,0.009,152,0.007,155,0.416,159,0.344,160,3.985,161,0.271,162,2.001,163,1.259,167,0.341,172,1.469,178,3.985,185,1.651,191,3.648,193,3.985,195,3.636,199,4.417,202,2.378,204,4.417,215,1.916,216,3.193,217,4.188,218,1.994,234,3.439,237,4.188,242,5.351,243,2.169,273,1.916,276,4.984,298,3.834,301,2.169,374,4.636,375,4.392,376,7.36,377,7.36,378,7.36,379,6.426,380,7.36,381,7.36,382,4.417,383,7.36,384,7.36,385,5.351,386,4.392,387,4.392,388,4.392,389,4.392,390,4.392,391,4.392,392,4.392,393,4.392,394,4.392,395,4.392,396,4.392,397,4.392,398,3.834,399,3.467]],["title/classes/CsdlSingleton.html",[159,0.32,250,2.969]],["body/classes/CsdlSingleton.html",[3,0.155,4,0.136,5,0.155,6,0.135,10,0.098,11,0.332,12,0.225,22,0.141,23,0.013,26,0.526,31,0.136,43,1.276,49,0.221,92,0.161,128,2.28,132,1.336,146,0.174,150,0.009,151,0.01,152,0.009,155,0.398,159,0.458,161,0.362,162,1.957,167,0.409,168,1.791,172,1.06,234,2.657,250,5.123,262,5.438,268,3.962,400,5.85,401,8.03,402,5.85,403,5.85,404,5.85,405,5.85]],["title/classes/CsdlStructuralProperty.html",[159,0.32,317,2.596]],["body/classes/CsdlStructuralProperty.html",[3,0.138,4,0.121,5,0.138,6,0.131,8,1.269,10,0.087,11,0.308,12,0.214,22,0.141,23,0.013,25,0.802,31,0.18,43,1.303,49,0.226,55,1.132,92,0.161,124,1.441,127,2.205,129,1.441,130,1.441,132,1.187,133,2.101,146,0.155,150,0.008,151,0.01,152,0.008,155,0.382,159,0.608,161,0.321,162,1.891,167,0.437,168,1.591,172,0.942,185,1.953,186,2.025,198,2.143,206,2.684,221,1.759,225,2.459,226,2.459,235,3.835,236,3.383,316,3.519,317,4.787,318,3.303,319,3.303,320,3.303,321,3.519,322,3.931,323,3.931,332,3.119,406,5.196,407,5.196,408,5.196,409,5.196]],["title/classes/CsdlStructuredType.html",[159,0.32,220,2.596]],["body/classes/CsdlStructuredType.html",[3,0.127,4,0.111,5,0.127,6,0.135,8,1.203,10,0.08,11,0.387,12,0.245,22,0.133,23,0.013,25,0.819,26,0.429,31,0.176,43,1.296,49,0.221,92,0.16,107,1.242,125,1.242,132,1.091,146,0.142,150,0.007,151,0.009,152,0.007,155,0.4,159,0.593,161,0.295,162,1.95,167,0.424,168,1.462,172,1.371,198,2.031,217,2.718,218,3.634,219,2.005,220,4.639,221,2.738,222,5.142,223,5.478,224,5.142,225,3.735,226,3.735,234,2.169,235,2.36,236,3.206,237,2.718,238,3.725,239,3.037,240,3.235,241,3.725,274,3.771,275,3.771,280,4.17,410,4.17,411,4.17,412,4.17,413,4.17]],["title/classes/CsdlTerm.html",[159,0.32,204,2.451]],["body/classes/CsdlTerm.html",[3,0.124,4,0.108,5,0.124,6,0.139,8,0.904,10,0.078,11,0.288,12,0.251,22,0.141,23,0.013,25,0.712,31,0.168,43,1.313,49,0.227,55,1.3,92,0.15,124,2.082,127,2.016,129,2.082,130,2.082,146,0.139,150,0.007,151,0.009,152,0.007,155,0.415,159,0.567,161,0.288,162,2.007,167,0.395,168,1.428,172,1.443,186,2.925,191,3.156,192,3.391,193,3.308,195,3.366,198,1.999,199,2.799,200,2.965,201,3.477,202,2.525,203,3.158,204,3.667,205,5.083,206,3.878,207,5.083,414,4.664,415,4.664,416,4.664,417,4.664,418,4.664,419,4.664,420,4.664,421,4.664,422,4.664,423,4.664,424,4.664]],["title/classes/CsdlTypeDefinition.html",[159,0.32,385,2.969]],["body/classes/CsdlTypeDefinition.html",[3,0.133,4,0.116,5,0.133,6,0.137,8,1.241,10,0.084,11,0.301,12,0.249,22,0.143,23,0.013,25,0.732,26,0.451,31,0.116,43,1.305,49,0.221,55,1.314,92,0.154,124,2.13,129,2.13,130,2.13,146,0.149,150,0.007,151,0.009,152,0.007,155,0.414,159,0.393,161,0.31,162,1.989,167,0.372,168,1.535,172,1.423,186,2.992,191,3.839,193,4.158,195,3.793,202,2.715,215,2.188,216,3.645,234,2.277,301,2.477,332,4.609,385,4.655,425,5.014,426,7.679,427,5.014,428,5.014,429,5.014,430,5.014,431,5.014,432,5.014,433,5.014,434,5.014]],["title/classes/Field.html",[66,1.651,159,0.32]],["body/classes/Field.html",[3,0.077,4,0.068,5,0.077,6,0.099,8,0.565,10,0.089,11,0.206,12,0.087,22,0.115,23,0.013,26,0.695,31,0.068,32,2.604,43,1.075,44,2.238,46,3.128,49,0.182,50,1.982,66,2.132,68,0.987,70,0.603,76,1.44,79,1.671,92,0.132,97,2.265,100,1.658,106,1.021,107,0.758,108,0.863,123,1.505,124,0.808,125,0.758,127,0.783,128,1.136,129,0.808,130,0.808,132,1.34,133,1.178,139,1.571,143,1.223,146,0.087,147,2.265,150,0.004,151,0.007,152,0.004,155,0.267,159,0.344,160,1.578,161,0.18,163,1.511,165,1.749,166,1.749,167,0.169,168,0.892,169,1.658,170,1.658,178,1.578,179,1.749,180,1.578,182,2.166,183,1.658,184,1.578,185,1.982,186,1.136,195,1.44,198,0.954,199,1.749,200,1.853,201,1.658,203,2.97,204,1.749,205,1.973,206,1.505,207,1.973,217,1.658,218,1.323,221,0.987,222,1.853,224,1.853,225,1.379,226,1.379,235,1.44,237,1.658,238,1.749,239,1.853,241,1.749,242,2.119,243,2.166,249,2.119,250,2.119,258,1.853,259,2.788,261,2.544,262,1.973,268,1.973,272,2.119,273,1.914,276,1.973,277,2.301,278,2.301,296,1.973,301,2.166,302,2.97,303,2.119,305,1.973,306,2.119,307,2.119,318,1.853,319,1.853,320,1.853,322,1.749,323,1.749,332,1.749,334,1.44,374,3.462,379,2.544,385,2.119,398,2.544,399,2.301,435,2.544,436,6.422,437,2.914,438,4.385,439,7.57,440,2.075,441,0.758,442,2.544,443,2.119,444,3.462,445,1.057,446,2.544,447,3.829,448,2.914,449,2.119,450,6.259,451,6.804,452,2.914,453,2.914,454,2.914,455,2.914,456,2.914,457,2.914,458,2.914,459,2.914,460,2.914,461,2.914,462,2.914,463,2.914,464,2.914,465,2.914,466,2.914,467,1.853,468,2.914,469,2.914,470,2.914,471,2.914,472,2.914,473,2.914,474,2.914,475,2.914,476,2.914,477,2.119,478,2.914,479,2.914,480,2.914,481,2.914,482,2.914,483,2.914,484,2.914,485,2.914,486,2.914,487,2.914,488,2.914,489,2.914,490,2.914,491,2.914,492,2.914,493,2.914,494,2.914,495,3.571,496,2.914,497,2.914,498,2.914,499,2.914,500,2.914,501,2.914,502,2.914,503,2.914,504,2.914,505,2.914,506,2.914,507,2.914,508,2.914,509,2.914,510,2.914,511,2.914,512,2.914,513,2.914,514,2.914,515,2.914,516,2.914,517,2.914,518,2.914,519,2.914,520,2.914,521,2.914,522,2.914,523,2.914,524,2.914,525,2.914,526,2.914,527,2.914,528,2.914,529,2.914,530,2.914,531,2.914,532,2.914,533,2.914,534,2.914,535,2.914,536,2.914,537,2.914,538,2.914,539,2.544,540,4.385,541,5.272,542,2.914,543,2.914,544,2.914,545,2.301,546,2.914,547,2.914,548,5.866,549,4.385,550,2.914,551,2.914,552,2.914,553,2.914,554,2.914,555,2.914,556,7.655,557,2.914,558,4.385,559,2.914,560,4.385,561,2.914,562,2.914,563,2.265,564,2.914,565,2.914,566,2.914,567,2.914,568,2.914,569,2.914,570,2.914,571,2.914,572,2.914,573,2.914,574,2.914,575,2.914,576,2.914,577,2.914,578,2.914,579,3.176,580,2.914,581,1.973,582,2.632,583,2.914,584,2.119,585,2.914,586,5.272,587,4.385,588,4.163,589,1.773,590,2.914,591,2.914,592,2.914,593,2.914,594,2.914,595,2.914,596,1.853,597,1.973,598,2.914,599,2.914]],["title/classes/ODataAnnotation.html",[159,0.32,600,1.933]],["body/classes/ODataAnnotation.html",[3,0.151,4,0.133,5,0.151,6,0.139,10,0.096,11,0.375,12,0.251,22,0.141,23,0.013,25,0.684,26,0.513,31,0.133,49,0.223,55,1.095,92,0.114,102,4.213,103,4.256,104,4.256,105,4.256,146,0.17,150,0.008,151,0.01,152,0.008,155,0.416,159,0.447,161,0.353,167,0.331,441,1.483,600,3.284,601,5.705,602,6.939,603,6.939,604,2.913,605,5.705,606,5.705,607,5.705,608,5.705,609,5.705,610,3.627,611,5.705,612,4.504]],["title/classes/ODataAnnotations.html",[159,0.32,613,2.766]],["body/classes/ODataAnnotations.html",[3,0.091,4,0.08,5,0.091,6,0.129,8,1.126,9,1.897,10,0.058,11,0.274,12,0.216,14,2.774,16,2.264,21,1.987,22,0.137,23,0.013,24,2.774,26,0.605,30,2.887,31,0.148,44,1.824,49,0.211,50,2.389,56,1.433,60,2.152,71,1.5,79,1.208,87,1.651,92,0.158,108,1.721,139,1.126,146,0.19,150,0.005,151,0.007,152,0.005,153,1.208,155,0.382,157,1.371,159,0.498,161,0.213,167,0.288,221,2.448,382,2.975,441,0.895,445,1.249,495,3.357,582,2.066,589,2.349,604,1.445,613,4.897,614,2.503,615,4.224,616,3.736,617,4.593,618,1.863,619,4.622,620,2.188,621,3.442,622,4.305,623,3.442,624,3.442,625,3.442,626,3.604,627,3.442,628,3.442,629,4.898,630,3.442,631,2.718,632,3.442,633,3.442,634,3.442,635,2.975,636,1.959,637,2.188,638,3.604,639,3.604,640,2.188,641,1.959,642,2.188,643,2.503,644,2.503,645,4.043,646,2.774,647,2.503,648,3.815,649,3.604,650,3.604,651,3.604,652,4.224,653,3.604,654,4.224,655,2.503,656,2.503,657,1.629,658,3.694,659,3.001,660,2.503,661,4.224,662,3.604,663,4.224,664,3.694,665,2.503,666,2.066,667,2.503,668,2.503,669,2.503,670,2.503,671,3.604,672,3.604,673,2.503,674,2.503,675,2.503,676,2.503,677,2.503,678,2.503,679,2.503,680,2.503,681,2.503,682,4.224,683,2.503,684,2.503,685,2.503,686,3.604,687,5.102,688,3.604,689,3.604,690,3.604,691,3.694,692,2.503,693,1.959,694,2.503,695,2.503,696,2.503,697,2.503,698,2.503,699,2.066,700,3.799,701,4.224,702,2.503,703,3.604,704,2.066,705,2.503,706,2.066,707,2.503,708,2.503]],["title/classes/ODataApiOptions.html",[159,0.32,709,3.565]],["body/classes/ODataApiOptions.html",[1,4.083,3,0.115,4,0.101,5,0.115,6,0.139,10,0.073,11,0.274,12,0.241,13,3.392,14,2.865,15,3.895,16,2.558,17,2.3,18,3.555,19,3.736,20,3.392,21,1.966,22,0.14,23,0.013,24,3.063,25,0.79,26,0.59,30,3.188,31,0.101,32,3.243,39,2.343,46,3.107,47,3.555,48,3.148,49,0.204,50,1.627,51,2.343,52,3.736,53,3.736,54,2.343,55,0.683,56,0.984,57,2.463,58,2.463,59,2.138,60,2.223,61,3.555,70,0.896,92,0.087,93,1.416,146,0.129,150,0.006,151,0.009,152,0.006,155,0.415,159,0.339,161,0.267,167,0.251,441,1.125,445,1.57,545,3.416,618,2.185,631,3.416,637,3.696,640,2.751,641,2.463,709,5.076,710,4.327,711,2.872,712,2.64,713,4.327,714,1.75,715,4.327,716,3.003,717,2.872,718,4.327,719,4.327,720,4.327,721,4.327,722,4.327,723,4.327,724,4.327,725,4.327,726,4.327,727,4.327,728,4.327,729,5.814,730,5.814,731,7.541,732,7.541,733,7.541,734,7.541,735,7.541,736,7.541,737,7.541,738,7.541,739,4.327,740,4.327,741,4.327,742,4.327,743,4.327,744,4.327,745,3.778,746,3.778,747,3.778,748,3.778,749,4.327,750,3.416,751,4.327,752,3.778,753,4.327,754,4.327,755,4.327,756,3.778,757,4.327,758,4.327,759,4.327,760,4.327,761,4.327,762,4.327,763,4.327,764,3.778]],["title/classes/ODataBaseService.html",[159,0.32,765,3.224]],["body/classes/ODataBaseService.html",[3,0.076,4,0.067,5,0.076,6,0.132,9,2.125,10,0.048,12,0.23,17,2.809,22,0.138,23,0.013,26,0.523,27,3.587,28,1.355,31,0.067,41,3.626,49,0.174,56,0.984,70,1.08,92,0.158,93,1.707,111,3.569,132,1.603,141,3.673,146,0.245,150,0.004,151,0.006,152,0.004,153,1.055,155,0.394,157,1.799,159,0.224,161,0.177,167,0.251,172,1.348,221,0.969,243,3.725,582,5.063,589,3.347,618,1.627,714,1.158,765,3.417,766,2.864,767,6.785,768,6.785,769,6.273,770,2.872,771,2.5,772,4.227,773,4.555,774,2.864,775,4.119,776,5.451,777,4.763,778,6.838,779,6.153,780,6.183,781,2.864,782,5.325,783,2.864,784,2.864,785,2.864,786,2.864,787,5.451,788,6.838,789,6.183,790,2.864,791,2.864,792,2.864,793,2.864,794,2.864,795,4.555,796,5.782,797,5.782,798,2.864,799,3.793,800,2.864,801,2.864,802,1.821,803,2.864,804,2.261,805,2.261,806,2.261,807,1.63,808,2.864,809,5.217,810,4.328,811,2.864]],["title/classes/ODataBatchRequest.html",[159,0.32,812,3.565]],["body/classes/ODataBatchRequest.html",[3,0.075,4,0.066,5,0.075,6,0.11,8,1.005,9,1.456,10,0.105,11,0.202,12,0.155,13,2.218,16,2.727,17,0.993,20,1.464,21,1.553,22,0.118,23,0.013,26,0.667,27,2.262,28,1.341,31,0.1,43,0.654,44,0.737,49,0.221,55,0.981,56,1.313,75,2.737,79,1.905,85,1.348,87,1.321,88,1.146,92,0.104,97,3.378,125,0.737,137,2.941,139,1.389,140,1.237,146,0.155,149,1.19,150,0.004,151,0.006,152,0.004,153,1.046,154,1.701,155,0.315,157,1.223,159,0.336,161,0.175,163,1.781,167,0.164,198,0.928,334,1.4,440,1.341,444,3.39,445,1.028,450,2.061,539,2.475,563,2.218,579,2.325,589,3.202,616,2.218,635,3.471,636,1.613,641,1.613,642,1.802,657,2.454,770,2.561,777,2.444,779,2.061,812,4.526,813,2.475,814,4.526,815,6.255,816,4.294,817,4.294,818,3.917,819,2.834,820,3.679,821,2.834,822,2.834,823,4.294,824,5.209,825,2.834,826,4.294,827,4.294,828,2.834,829,2.834,830,5.184,831,2.475,832,1.065,833,2.238,834,3.769,835,2.061,836,4.907,837,3.122,838,5.184,839,3.749,840,4.294,841,4.526,842,2.834,843,2.834,844,4.519,845,4.294,846,4.294,847,4.294,848,2.834,849,4.294,850,2.834,851,3.749,852,2.834,853,2.834,854,3.769,855,2.95,856,2.238,857,3.749,858,2.834,859,2.238,860,2.834,861,2.325,862,5.184,863,2.475,864,4.205,865,2.238,866,4.093,867,1.958,868,2.475,869,4.526,870,3.749,871,2.834,872,2.475,873,4.3,874,2.834,875,2.834,876,3.749,877,2.834,878,2.834,879,2.834,880,2.238,881,6.54,882,2.834,883,4.526,884,2.834,885,2.475,886,2.834,887,4.294,888,2.061,889,2.73,890,2.834,891,2.834,892,5.784,893,2.834,894,3.769,895,1.464,896,4.294,897,4.294,898,1.701,899,2.834,900,2.834,901,1.919,902,4.294,903,5.184,904,5.05,905,2.834,906,5.784,907,3.951,908,3.769,909,5.184,910,5.184,911,2.834,912,2.834,913,2.834,914,2.834,915,2.834,916,2.834,917,2.475,918,2.908,919,2.834,920,2.834,921,2.834,922,2.834,923,4.294,924,2.834,925,2.834,926,4.294,927,2.834,928,2.834,929,4.294,930,2.834,931,4.294,932,2.834,933,2.834,934,2.475,935,2.834,936,2.834,937,2.834,938,2.238,939,4.294,940,5.184,941,2.73,942,2.475,943,3.122,944,2.834,945,2.834,946,2.238,947,3.749,948,2.834,949,2.834,950,3.749,951,2.834,952,2.834,953,2.834,954,2.834,955,2.834,956,2.834,957,2.834,958,2.238,959,2.834,960,2.834,961,2.834,962,2.834,963,2.834,964,2.834,965,7.165,966,4.294,967,5.784,968,2.834,969,6.215,970,5.784,971,4.294,972,2.834,973,2.834,974,2.834,975,5.184,976,2.834,977,2.834,978,2.834,979,2.834,980,1.919,981,2.834,982,2.834,983,2.834,984,2.834,985,2.834,986,2.238,987,2.834,988,2.834,989,2.834,990,2.834,991,2.834,992,2.834,993,2.834,994,2.834,995,2.834,996,2.834,997,2.834,998,2.834,999,2.834,1000,2.834,1001,2.834]],["title/classes/ODataCache.html",[159,0.32,1002,2.596]],["body/classes/ODataCache.html",[0,1.096,3,0.083,4,0.073,5,0.083,6,0.136,10,0.053,11,0.218,12,0.235,21,1.935,22,0.139,23,0.013,25,0.598,26,0.583,27,3.468,28,1.48,31,0.107,36,2.994,37,1.48,38,3.001,44,1.764,45,1.545,49,0.206,55,1.108,56,1.314,70,1.258,71,1.656,79,1.48,82,1.616,83,3.322,85,1.685,86,2.284,87,1.646,92,0.162,93,1.024,125,1.579,139,0.896,146,0.235,150,0.005,151,0.007,152,0.005,153,1.126,154,3.646,155,0.407,157,1.862,159,0.245,161,0.193,167,0.268,221,2.376,441,0.813,445,1.135,449,2.274,620,1.988,700,1.693,711,2.284,807,1.78,820,4.468,832,2.283,833,2.469,855,3.995,865,2.469,867,1.565,873,4.869,889,1.988,894,2.274,895,1.616,918,2.118,941,4.826,946,2.469,1002,2.939,1003,2.731,1004,4.713,1005,5.257,1006,3.998,1007,4.417,1008,3.998,1009,3.65,1010,3.998,1011,3.998,1012,3.998,1013,3.65,1014,3.65,1015,3.65,1016,3.65,1017,3.65,1018,3.65,1019,4.623,1020,3.128,1021,2.469,1022,3.128,1023,4.581,1024,3.128,1025,2.469,1026,3.128,1027,3.128,1028,3.131,1029,3.128,1030,2.469,1031,3.128,1032,2.469,1033,3.128,1034,2.469,1035,3.128,1036,3.361,1037,3.128,1038,3.361,1039,3.128,1040,4.933,1041,3.361,1042,3.128,1043,2.469,1044,3.128,1045,3.361,1046,3.128,1047,3.128,1048,3.131,1049,3.128,1050,2.731,1051,2.731,1052,2.731,1053,4.036,1054,2.731,1055,4.036,1056,4.754,1057,2.731,1058,3.361,1059,2.731,1060,2.731,1061,4.036,1062,2.731,1063,4.036,1064,2.731,1065,3.131,1066,4.036,1067,2.731,1068,2.731,1069,2.731,1070,2.731,1071,2.731,1072,2.731,1073,2.731,1074,2.731,1075,6.292,1076,2.731,1077,5.304,1078,2.731,1079,4.036,1080,2.731,1081,2.731,1082,2.731,1083,2.731,1084,2.731,1085,2.731,1086,2.118,1087,2.731,1088,2.731,1089,2.731,1090,2.731]],["title/interfaces/ODataCacheEntry.html",[0,1.431,1023,2.596]],["body/interfaces/ODataCacheEntry.html",[0,1.407,2,2.075,3,0.106,4,0.093,5,0.106,6,0.068,10,0.068,11,0.26,12,0.203,22,0.114,23,0.013,26,0.641,27,3.297,28,1.901,31,0.128,36,3.11,37,1.901,38,3.362,44,1.437,45,1.984,49,0.207,55,1.247,56,1.372,70,0.832,71,1.683,79,1.658,83,3.576,85,1.044,86,1.984,87,1.63,92,0.143,125,1.437,139,1.071,150,0.006,151,0.008,152,0.006,154,3.317,159,0.315,167,0.233,221,2.139,441,1.044,445,1.457,449,2.92,700,2.175,711,1.984,807,2.286,820,4.229,832,2.375,833,3.171,855,3.873,865,3.171,867,1.871,873,4.83,889,2.553,894,2.92,895,2.075,918,2.72,941,4.017,946,3.171,1002,2.553,1003,3.507,1004,4.594,1005,5.522,1006,2.92,1007,2.92,1008,2.92,1010,2.92,1011,2.92,1012,2.92,1023,4.327,1028,2.72,1036,2.92,1038,2.92,1040,4.948,1041,2.92,1045,2.92,1048,2.72,1050,3.507,1051,3.507,1052,3.507,1053,4.825,1054,3.507,1055,6.231,1056,5.352,1057,3.507,1058,4.018,1059,3.507,1060,3.507,1061,4.825,1062,3.507,1063,4.825,1064,3.507,1065,3.743,1066,4.825,1067,3.507,1068,3.507,1069,3.507,1070,3.507,1071,3.507,1072,3.507,1073,3.507,1074,3.507,1075,6.72,1076,3.507,1077,5.942,1078,3.507,1079,4.825,1080,3.507,1081,3.507,1082,3.507,1083,3.507,1084,3.507,1085,3.507,1086,2.72,1087,3.507,1088,3.507,1089,3.507,1090,3.507]],["title/classes/ODataCallable.html",[159,0.32,1091,3.224]],["body/classes/ODataCallable.html",[3,0.114,4,0.1,5,0.114,6,0.14,9,1.082,10,0.072,11,0.273,12,0.244,21,1.88,22,0.142,23,0.013,25,0.72,26,0.588,31,0.1,49,0.214,56,1.302,60,1.456,68,2.474,69,2.176,70,1.45,72,2.256,78,2.256,81,2.256,85,1.118,92,0.16,93,1.407,99,2.221,107,1.701,114,3.314,139,0.833,143,2.748,144,3.725,145,3.725,146,0.229,150,0.006,151,0.009,152,0.006,153,1.411,155,0.419,157,1.814,159,0.337,161,0.266,167,0.25,334,3.914,440,3.701,441,1.118,618,2.176,712,2.629,714,2.341,717,2.124,770,3.233,802,2.734,1091,4.571,1092,4.3,1093,3.233,1094,3.475,1095,4.517,1096,5.789,1097,4.3,1098,4.3,1099,4.3,1100,4.3,1101,5.091,1102,4.3,1103,2.581,1104,4.3,1105,2.86,1106,4.3,1107,4.3,1108,2.86,1109,4.3,1110,4.3,1111,2.86,1112,4.3,1113,3.395,1114,4.3,1115,4.3,1116,2.912,1117,3.097,1118,1.953,1119,6.545,1120,4.3,1121,5.789,1122,4.3,1123,4.3,1124,4.3,1125,2.447,1126,3.395,1127,3.395,1128,4.209,1129,4.3,1130,4.3,1131,3.127,1132,3.395,1133,2.912,1134,3.725,1135,3.395,1136,5.528,1137,2.447,1138,2.447,1139,2.447]],["title/classes/ODataCallableParser.html",[159,0.32,1101,2.969]],["body/classes/ODataCallableParser.html",[3,0.092,4,0.081,5,0.092,6,0.135,9,2.134,10,0.058,11,0.234,12,0.234,17,2.234,21,1.566,22,0.14,23,0.013,25,0.628,26,0.573,31,0.116,44,0.901,49,0.219,56,1.358,60,2.791,65,1.574,68,2.654,69,2.192,70,0.718,71,0.817,72,2.273,76,3.337,78,1.35,80,3.018,81,2.485,85,0.901,87,1.138,92,0.157,106,2.539,107,1.884,114,3.018,126,1.574,127,0.931,139,1.13,141,2.783,146,0.225,150,0.005,151,0.007,152,0.005,153,1.214,155,0.404,157,1.659,159,0.39,161,0.214,167,0.201,168,1.061,172,1.156,218,2.262,268,4.318,273,2.174,441,0.901,445,1.257,467,2.203,579,2.697,610,2.203,612,2.736,659,2.573,711,2.461,712,2.262,714,1.401,782,3.622,832,1.303,861,1.876,867,1.173,898,2.99,1093,3.15,1094,2.99,1101,3.622,1103,2.08,1105,2.461,1108,2.461,1111,1.712,1117,2.358,1118,1.574,1125,4.219,1134,3.844,1137,1.972,1138,1.972,1139,1.972,1140,3.026,1141,4.981,1142,3.465,1143,3.465,1144,3.465,1145,4.604,1146,3.465,1147,3.465,1148,3.465,1149,3.465,1150,3.465,1151,3.465,1152,4.349,1153,3.465,1154,3.465,1155,4.349,1156,3.465,1157,5.567,1158,3.158,1159,3.319,1160,3.026,1161,4.349,1162,3.167,1163,3.167,1164,3.026,1165,3.026,1166,2.347,1167,2.347,1168,2.347,1169,2.347,1170,2.347,1171,3.374,1172,2.347,1173,2.347,1174,2.347,1175,2.736,1176,1.972,1177,2.835,1178,4.349,1179,3.026,1180,5.092,1181,3.026,1182,3.026,1183,1.79,1184,2.08,1185,2.08,1186,1.972,1187,5.567,1188,6.326,1189,4.349,1190,2.99,1191,2.358,1192,2.697,1193,3.026,1194,3.026,1195,3.026,1196,3.026,1197,3.026,1198,3.026]],["title/classes/ODataEntitiesAnnotations.html",[159,0.32,691,2.596]],["body/classes/ODataEntitiesAnnotations.html",[3,0.085,4,0.074,5,0.085,6,0.132,8,1.19,9,1.863,10,0.054,11,0.262,12,0.224,14,2.679,16,2.171,21,1.987,22,0.138,23,0.013,24,2.679,26,0.588,30,2.134,31,0.143,44,1.885,49,0.211,50,2.308,56,1.425,60,2.079,71,1.448,79,1.145,87,1.614,92,0.158,108,1.65,139,1.08,146,0.195,150,0.005,151,0.007,152,0.005,153,1.145,155,0.411,157,1.613,159,0.481,161,0.198,163,1.347,167,0.186,215,2.985,221,2.393,382,3.685,441,0.831,445,1.16,495,3.182,582,1.919,589,2.252,604,1.342,613,5.279,614,2.325,615,4.05,616,3.887,617,4.678,618,1.766,619,3.416,622,4.158,626,3.416,629,4.972,635,2.82,636,1.82,637,2.033,638,3.416,639,3.416,640,2.033,641,1.82,642,2.033,643,2.325,644,2.325,645,3.926,646,2.679,647,2.325,648,3.685,649,3.416,650,3.416,651,3.416,652,4.05,653,3.416,654,4.05,655,2.325,656,2.325,657,1.513,658,3.541,659,2.878,660,2.325,661,4.05,662,3.416,663,4.05,664,3.541,665,2.325,666,1.919,667,2.325,668,2.325,669,2.325,670,2.325,671,4.464,672,3.416,673,2.325,674,2.325,675,2.325,676,2.325,677,2.325,678,2.325,679,2.325,680,2.325,681,2.325,682,4.05,683,2.325,684,2.325,685,2.325,686,4.464,687,4.972,688,3.416,689,4.05,690,3.416,691,4.158,692,2.325,693,3.17,694,2.325,695,4.05,696,2.325,697,4.05,698,2.325,699,3.343,700,3.703,701,4.05,702,2.325,703,3.416,704,3.343,705,2.325,706,3.343,707,2.325,708,2.325,1199,3.198,1200,2.525,1201,2.525,1202,2.525,1203,3.198,1204,3.198,1205,3.198,1206,2.525,1207,2.525,1208,2.525,1209,2.525,1210,3.198,1211,2.792,1212,3.198,1213,3.198,1214,3.198,1215,3.198,1216,3.198,1217,3.198,1218,3.198,1219,3.198,1220,3.198,1221,3.198,1222,3.198,1223,3.198,1224,3.198,1225,2.792,1226,3.198]],["title/classes/ODataEntityAnnotations.html",[159,0.32,664,2.596]],["body/classes/ODataEntityAnnotations.html",[3,0.082,4,0.072,5,0.082,6,0.136,8,1.17,9,1.845,10,0.052,11,0.303,12,0.231,14,2.946,16,2.126,21,2.003,22,0.139,23,0.013,24,2.634,26,0.579,30,2.079,31,0.14,44,1.939,49,0.213,50,2.268,56,1.421,60,2.043,71,1.424,79,1.115,87,1.596,92,0.16,108,1.616,132,1.045,139,1.057,146,0.201,150,0.005,151,0.007,152,0.005,153,1.115,155,0.416,157,1.649,159,0.473,161,0.191,163,1.312,167,0.179,215,2.946,221,2.366,382,3.622,441,0.802,445,1.119,495,3.099,582,1.852,589,2.206,604,1.295,613,5.243,614,2.244,615,3.966,616,3.854,617,4.647,618,1.72,619,3.328,622,4.087,626,3.328,629,4.909,635,2.747,636,1.756,637,1.962,638,3.328,639,3.328,640,1.962,641,1.756,642,1.962,643,2.244,644,2.244,645,3.868,646,2.634,647,2.244,648,3.622,649,3.328,650,3.328,651,3.328,652,3.966,653,3.328,654,3.966,655,2.244,656,2.244,657,1.46,658,3.468,659,2.818,660,2.244,661,3.966,662,3.328,663,3.966,664,4.097,665,2.244,666,3.274,667,3.966,668,2.244,669,3.966,670,2.244,671,4.388,672,3.328,673,3.966,674,2.244,675,3.966,676,2.244,677,3.966,678,2.244,679,3.966,680,2.244,681,3.966,682,3.966,683,2.244,684,3.328,685,2.244,686,4.388,687,4.909,688,3.328,689,3.966,690,3.328,691,3.468,692,2.244,693,1.756,694,2.244,695,2.244,696,2.244,697,2.244,698,2.244,699,1.852,700,3.656,701,3.966,702,2.244,703,3.328,704,1.852,705,2.244,706,1.852,707,2.244,708,2.244,1200,2.436,1201,2.436,1202,2.436,1206,2.436,1207,2.436,1208,2.436,1209,2.436,1211,2.694,1225,2.694,1227,3.086,1228,3.086,1229,3.086,1230,3.086,1231,3.086,1232,3.086,1233,3.086,1234,3.086,1235,3.086,1236,3.086,1237,3.086,1238,3.086,1239,3.086,1240,3.086,1241,3.086,1242,3.086,1243,3.086,1244,3.086,1245,3.086,1246,3.086,1247,3.086,1248,3.086,1249,3.086,1250,3.086,1251,3.086,1252,3.086,1253,3.086]],["title/classes/ODataEntityContainer.html",[159,0.32,1254,3.224]],["body/classes/ODataEntityContainer.html",[3,0.139,4,0.122,5,0.139,6,0.137,10,0.088,11,0.31,12,0.196,22,0.134,23,0.013,25,0.516,26,0.679,31,0.122,49,0.174,56,1.114,85,1.361,92,0.156,108,2.131,116,4.088,117,3.718,139,1.275,146,0.196,150,0.008,151,0.01,152,0.008,153,1.603,155,0.408,157,1.235,159,0.41,161,0.324,163,1.501,167,0.304,243,2.586,244,4.571,253,4.571,254,4.571,256,4.571,257,5.746,258,3.328,301,2.586,440,3.892,441,1.361,600,3.682,604,3.022,618,2.474,646,2.285,712,2.989,714,2.661,770,3.555,802,3.328,832,2.474,1095,4.766,1116,3.546,1117,2.478,1118,2.378,1133,3.546,1254,5.196,1255,7.117,1256,4.184,1257,5.233,1258,3.4,1259,5.236,1260,2.705,1261,5.236,1262,5.236,1263,5.236,1264,5.236,1265,3.546,1266,2.705,1267,2.705]],["title/classes/ODataEntityService.html",[159,0.32,1268,3.565]],["body/classes/ODataEntityService.html",[3,0.087,4,0.076,5,0.087,6,0.105,8,0.928,9,2.092,10,0.055,12,0.237,17,2.652,22,0.141,23,0.013,26,0.508,27,3.418,31,0.076,41,3.211,43,1.051,56,0.555,70,1.287,85,1.245,87,1.094,92,0.159,93,1.85,111,3.266,125,0.853,132,1.42,136,1.553,141,3.658,146,0.249,150,0.005,151,0.007,152,0.005,153,1.167,155,0.406,157,1.877,159,0.257,161,0.203,172,1.39,215,3.418,221,2.413,243,3.68,582,4.989,589,3.3,618,1.8,714,1.327,765,6.321,767,6.609,768,6.609,769,6.026,776,5.771,777,4.693,778,6.609,779,6.044,780,5.976,782,5.504,787,5.771,788,6.609,789,5.976,795,4.936,796,5.449,797,5.449,799,4.111,807,1.867,837,4.111,1268,4.181,1269,3.281,1270,4.788,1271,5.654,1272,3.281,1273,6.216,1274,3.281,1275,4.788,1276,4.519,1277,3.281,1278,3.281,1279,3.281,1280,3.281,1281,3.281,1282,3.281,1283,3.281,1284,3.281,1285,3.281,1286,3.281,1287,3.281,1288,3.281,1289,3.281,1290,3.281,1291,3.281,1292,3.281,1293,2.865,1294,2.865,1295,3.281,1296,3.281,1297,3.281]],["title/classes/ODataEntitySet.html",[159,0.32,1257,2.969]],["body/classes/ODataEntitySet.html",[3,0.133,4,0.116,5,0.133,6,0.138,10,0.084,11,0.301,12,0.21,17,1.755,21,1.345,22,0.138,23,0.013,25,0.63,26,0.634,31,0.116,49,0.211,56,1.193,85,1.302,92,0.157,108,2.088,118,4.022,139,1.24,146,0.21,147,3.642,148,3.817,150,0.007,151,0.009,152,0.007,153,1.559,155,0.413,157,1.509,159,0.392,161,0.309,163,1.435,167,0.291,260,4.372,264,4.372,265,4.372,266,4.372,267,4.372,301,2.474,440,3.824,441,1.302,600,3.633,604,2.96,618,2.405,646,2.185,712,2.906,714,2.025,770,3.483,802,3.184,832,1.882,861,2.711,867,1.695,1094,3.84,1095,4.712,1108,3.16,1116,3.391,1117,2.37,1118,2.274,1128,3.641,1131,3.641,1133,3.391,1183,2.587,1186,2.85,1255,7.18,1256,4.067,1257,4.652,1258,3.305,1260,2.587,1265,3.391,1266,2.587,1267,2.587,1298,6.398,1299,5.008,1300,5.008,1301,5.008,1302,5.008,1303,5.008,1304,5.008,1305,5.008,1306,5.008]],["title/classes/ODataEntityTypeKey.html",[159,0.32,1307,2.766]],["body/classes/ODataEntityTypeKey.html",[3,0.05,4,0.044,5,0.05,6,0.077,9,2.056,10,0.032,11,0.187,12,0.118,21,0.835,22,0.126,23,0.013,25,0.653,26,0.492,31,0.118,44,1.196,49,0.213,55,0.803,56,1.359,60,2.405,65,2.09,66,2.872,67,1.959,68,2.372,69,1.168,70,1.62,71,1.563,72,1.211,78,1.211,79,1.649,80,1.877,81,1.211,87,1.851,88,1.86,92,0.153,93,0.617,95,1.535,106,1.39,107,1.632,108,0.558,112,1.471,122,2.391,124,0.523,125,0.49,126,0.856,127,0.506,128,2.583,129,0.523,130,0.523,131,0.974,132,1.051,133,1.86,134,0.974,136,0.892,137,0.892,139,1.062,140,0.822,141,2.221,142,2.63,146,0.056,149,1.932,150,0.003,151,0.005,152,0.003,155,0.201,159,0.36,161,0.116,167,0.295,218,2.09,219,0.791,273,1.356,440,3.404,441,0.808,445,0.684,467,1.198,563,2.993,579,1.683,581,1.276,589,2.215,596,1.198,597,1.276,600,1.877,604,1.305,610,3.85,620,1.198,646,0.822,657,3.137,659,2.377,666,1.131,700,2.491,711,1.535,714,1.603,716,0.974,717,2.706,832,1.491,861,2.147,864,2.26,867,1.855,889,1.198,895,2.377,898,3.478,1093,1.535,1105,1.959,1108,0.931,1111,1.959,1117,2.593,1118,0.856,1125,3.923,1134,2.897,1137,1.073,1138,1.073,1139,1.073,1158,2.491,1159,4.253,1161,3.635,1162,2.521,1163,1.976,1166,1.276,1167,2.105,1168,1.276,1169,1.276,1170,2.105,1171,2.105,1172,1.276,1173,2.105,1174,1.276,1176,1.073,1177,2.257,1183,0.974,1184,1.865,1185,1.131,1186,1.073,1190,1.865,1191,1.877,1192,2.491,1258,0.974,1260,1.606,1266,0.974,1267,0.974,1307,2.686,1308,3.345,1309,2.714,1310,1.646,1311,0.974,1312,3.633,1313,1.276,1314,1.073,1315,1.276,1316,2.049,1317,2.26,1318,1.976,1319,2.26,1320,3.983,1321,2.26,1322,3.116,1323,1.02,1324,1.488,1325,1.683,1326,2.26,1327,1.488,1328,1.488,1329,3.131,1330,1.488,1331,2.454,1332,1.276,1333,1.488,1334,1.488,1335,1.488,1336,4.019,1337,1.488,1338,4.019,1339,1.488,1340,2.884,1341,2.454,1342,3.131,1343,2.454,1344,2.454,1345,2.26,1346,1.488,1347,1.488,1348,1.488,1349,1.488,1350,1.976,1351,2.897,1352,1.976,1353,4.781,1354,1.488,1355,2.761,1356,3.131,1357,1.488,1358,1.488,1359,1.488,1360,1.488,1361,1.37,1362,1.488,1363,1.488,1364,1.488,1365,1.488,1366,2.454,1367,2.26,1368,2.454,1369,2.454,1370,2.26,1371,1.37,1372,2.26,1373,3.137,1374,1.073,1375,1.488,1376,1.488,1377,2.454,1378,1.488,1379,1.488,1380,1.488,1381,2.26,1382,1.37,1383,1.976,1384,2.454,1385,2.454,1386,2.454,1387,2.454,1388,2.454,1389,2.454,1390,1.488,1391,4.325,1392,3.131,1393,1.488,1394,3.447,1395,3.447,1396,1.276,1397,2.686,1398,1.488,1399,1.488,1400,1.488,1401,1.488,1402,1.488,1403,1.488,1404,1.488,1405,1.488,1406,1.488,1407,1.488,1408,1.488,1409,1.488,1410,1.488,1411,1.488,1412,1.488,1413,1.488,1414,1.488,1415,1.488,1416,1.488,1417,1.488,1418,1.488,1419,1.488,1420,2.884,1421,2.26,1422,1.37,1423,1.37,1424,1.37,1425,1.488,1426,2.454,1427,1.488,1428,1.488,1429,2.521,1430,1.488,1431,1.488,1432,1.488,1433,1.488,1434,1.488,1435,4.063,1436,3.345,1437,1.488,1438,1.488,1439,1.488,1440,1.488,1441,1.488,1442,1.488,1443,2.26,1444,1.488,1445,1.488,1446,1.488,1447,1.606,1448,3.85,1449,2.454,1450,1.488,1451,1.488,1452,3.633,1453,1.488,1454,1.488,1455,1.488,1456,1.37,1457,1.488,1458,1.488,1459,1.488,1460,1.488,1461,1.488,1462,1.488,1463,1.131,1464,1.488,1465,1.488,1466,1.276,1467,1.488,1468,1.488,1469,1.488,1470,1.488,1471,1.488,1472,1.488,1473,1.488,1474,1.488,1475,1.488,1476,1.37,1477,1.488,1478,2.454,1479,2.454,1480,2.454,1481,1.488,1482,1.488,1483,1.276,1484,1.488,1485,1.488,1486,1.488,1487,1.488,1488,1.488,1489,2.454,1490,4.019,1491,1.488,1492,1.488,1493,2.454,1494,1.488,1495,1.488,1496,2.454,1497,1.488,1498,1.073,1499,2.454,1500,1.488,1501,1.488,1502,1.37,1503,1.488,1504,1.488,1505,1.488,1506,3.131,1507,1.488,1508,1.488]],["title/classes/ODataEnumType.html",[159,0.32,1509,3.224]],["body/classes/ODataEnumType.html",[3,0.102,4,0.09,5,0.102,6,0.14,9,0.973,10,0.065,11,0.253,12,0.234,21,1.798,22,0.141,23,0.013,25,0.53,26,0.602,31,0.09,49,0.21,55,1.111,56,1.342,66,2.176,68,2.096,69,2.023,70,1.548,71,1.27,72,2.098,78,2.098,81,2.098,85,1.61,92,0.164,93,1.265,99,1.997,107,1.61,108,1.834,110,3.308,121,2.931,122,2.922,139,1.043,146,0.236,150,0.006,151,0.008,152,0.006,153,1.312,155,0.419,157,1.87,159,0.303,161,0.239,163,1.543,167,0.224,219,1.623,269,3.053,274,3.053,275,4.25,301,1.91,315,3.376,357,3.376,411,3.376,413,3.376,440,3.609,441,1.005,600,3.331,604,2.6,618,2.023,646,1.687,712,2.445,714,2.176,717,1.91,770,3.059,802,2.458,832,1.453,1093,3.308,1094,3.231,1095,4.374,1105,2.659,1108,2.659,1111,2.659,1113,3.053,1116,2.619,1117,1.83,1118,1.756,1125,2.2,1126,3.053,1127,3.053,1128,2.811,1131,2.811,1132,3.053,1133,2.619,1135,3.053,1136,5.286,1137,2.2,1138,2.2,1139,2.2,1158,3.625,1256,3.422,1258,2.781,1260,1.997,1265,2.619,1266,1.997,1267,1.997,1435,2.321,1509,4.25,1510,8.293,1511,5.383,1512,5.383,1513,5.383,1514,3.867,1515,3.867,1516,3.867,1517,7.626,1518,3.867,1519,5.118,1520,3.867,1521,5.383,1522,5.383,1523,3.867,1524,5.383,1525,3.867,1526,3.867,1527,3.867,1528,3.867,1529,3.376,1530,3.053,1531,3.053,1532,3.867,1533,5.383,1534,3.867,1535,3.867]],["title/classes/ODataEnumTypeFieldParser.html",[159,0.32,1519,2.969]],["body/classes/ODataEnumTypeFieldParser.html",[3,0.107,4,0.094,5,0.107,6,0.124,9,2.04,10,0.068,11,0.261,12,0.165,22,0.13,23,0.013,25,0.623,26,0.612,31,0.129,49,0.221,55,1.165,56,1.338,60,2.559,66,2.557,68,1.874,69,1.513,70,1.565,71,1.492,72,1.568,78,1.568,79,0.981,81,1.568,85,1.046,87,1.444,92,0.162,106,2.216,107,1.644,108,1.873,109,2.079,110,2.734,119,3.519,120,2.179,121,2.619,122,1.756,123,3.519,128,2.157,132,1.264,139,1.073,146,0.165,150,0.006,151,0.008,152,0.006,153,1.348,155,0.362,157,0.949,159,0.434,161,0.249,163,1.153,167,0.234,168,1.694,219,1.69,410,3.514,412,3.514,440,1.905,441,1.046,563,2.079,600,3.38,604,2.655,646,1.756,657,2.619,711,1.988,712,1.828,717,1.988,832,1.513,861,2.179,867,1.362,895,2.079,1093,1.988,1105,1.988,1108,1.988,1111,1.988,1117,2.993,1118,1.828,1158,2.179,1161,4.088,1176,2.29,1177,3.149,1183,3.267,1184,2.415,1185,2.415,1186,2.29,1191,2.619,1256,3.518,1258,2.859,1260,2.079,1266,2.079,1267,2.079,1311,2.079,1313,2.725,1314,2.29,1315,2.725,1316,2.079,1332,2.725,1350,2.558,1351,2.29,1352,2.558,1373,2.996,1383,2.558,1429,2.558,1435,2.415,1448,3.518,1519,4.599,1530,4.994,1531,3.177,1536,6.443,1537,4.832,1538,4.024,1539,3.514,1540,3.514,1541,5.947,1542,3.514,1543,3.514,1544,3.514,1545,4.832,1546,3.514,1547,3.514,1548,3.514,1549,5.522,1550,3.514,1551,4.832,1552,3.514,1553,3.514,1554,3.514,1555,3.514,1556,3.514,1557,3.514,1558,2.926,1559,3.514,1560,3.514,1561,3.514,1562,4.832]],["title/classes/ODataEnumTypeParser.html",[159,0.32,1158,2.211]],["body/classes/ODataEnumTypeParser.html",[3,0.091,4,0.08,5,0.091,6,0.136,9,2.057,10,0.058,11,0.233,12,0.235,21,1.881,22,0.14,23,0.013,25,0.663,26,0.57,31,0.115,49,0.223,55,1.14,56,1.294,60,2.728,66,1.386,68,1.962,69,2.179,70,1.559,71,1.744,72,2.259,78,1.926,79,0.835,81,2.259,85,0.891,87,1.536,92,0.162,93,1.122,106,2.53,107,1.877,108,1.015,109,1.771,110,3.134,119,2.553,120,3.138,121,3.003,122,2.53,123,3.474,128,1.926,132,1.129,139,0.958,146,0.215,150,0.005,151,0.007,152,0.005,153,1.204,155,0.406,157,1.704,159,0.387,161,0.212,167,0.199,168,1.049,172,1.15,219,1.439,269,2.706,271,2.993,356,2.993,440,1.622,441,0.891,563,1.771,600,2.743,604,2.075,646,1.496,657,2.339,711,2.442,712,2.245,714,1.386,717,1.693,832,1.289,861,1.856,867,1.161,895,1.771,1093,2.863,1094,2.966,1103,2.057,1105,2.442,1108,2.442,1111,2.442,1117,2.743,1118,1.557,1158,2.676,1161,3.808,1176,1.951,1177,2.813,1183,2.994,1184,2.057,1185,2.057,1186,1.951,1191,2.339,1258,1.771,1266,1.771,1267,1.771,1309,2.993,1310,2.993,1311,1.771,1313,2.322,1314,1.951,1315,2.322,1316,1.771,1332,2.322,1350,3.685,1351,1.951,1352,2.179,1373,2.676,1383,2.179,1429,2.179,1435,2.057,1448,3.142,1519,4.214,1529,2.993,1530,4.576,1531,2.706,1536,7.036,1539,2.993,1540,2.993,1541,5.539,1542,2.993,1543,2.993,1544,2.993,1545,4.315,1546,2.993,1547,2.993,1548,2.993,1549,5.061,1550,2.993,1551,4.315,1552,2.993,1553,2.993,1554,2.993,1555,2.993,1556,2.993,1557,2.993,1558,4.613,1559,2.993,1560,2.993,1561,2.993,1562,4.315,1563,4.943,1564,3.428,1565,3.428,1566,3.428,1567,3.428,1568,3.428,1569,2.993,1570,3.428,1571,3.428]],["title/classes/ODataInMemoryCache.html",[159,0.32,1572,3.565]],["body/classes/ODataInMemoryCache.html",[3,0.103,4,0.091,5,0.103,6,0.113,8,1.05,10,0.066,11,0.255,12,0.246,21,2.052,22,0.142,23,0.013,25,0.662,26,0.487,27,3.387,31,0.091,36,1.521,44,1.748,49,0.194,55,0.855,56,0.661,70,1.289,71,1.586,82,2.016,83,2.945,85,1.836,86,1.928,87,1.613,92,0.165,93,1.277,125,1.408,146,0.246,150,0.006,151,0.008,152,0.006,153,1.32,154,3.252,155,0.422,157,1.944,159,0.306,161,0.241,167,0.314,215,3.596,221,2.276,620,2.481,807,2.221,820,4.544,832,1.467,855,4.417,873,4.807,888,2.838,941,4.996,1002,5.294,1004,3.939,1005,4.95,1006,3.939,1007,4.525,1008,3.939,1009,5.308,1010,3.939,1011,3.939,1012,3.939,1013,4.278,1014,4.278,1015,4.278,1016,4.278,1017,4.278,1018,5.308,1021,3.081,1023,4.49,1025,3.081,1028,4.215,1030,3.081,1032,3.081,1034,3.081,1036,2.838,1038,2.838,1040,3.939,1041,2.838,1043,3.081,1045,2.838,1048,4.215,1056,2.643,1086,2.643,1572,4.731,1573,3.903,1574,3.903,1575,3.408,1576,3.408,1577,3.903,1578,3.903,1579,3.408,1580,3.408,1581,3.408,1582,3.408,1583,3.408,1584,3.408,1585,3.408,1586,3.408,1587,3.408,1588,3.408,1589,3.408,1590,3.408,1591,3.408,1592,3.408,1593,3.408,1594,3.081,1595,3.081,1596,3.081]],["title/classes/ODataInStorageCache.html",[159,0.32,1597,3.224]],["body/classes/ODataInStorageCache.html",[0,1.29,3,0.098,4,0.086,5,0.098,6,0.11,8,1.008,10,0.062,11,0.245,12,0.244,16,1.434,21,2.023,22,0.142,23,0.013,25,0.646,26,0.467,27,3.343,31,0.086,36,1.434,44,1.703,49,0.21,55,0.952,56,0.623,70,1.249,71,1.546,75,1.742,79,0.897,82,1.902,83,2.854,85,1.797,86,1.818,87,1.684,92,0.166,93,1.205,125,1.568,139,0.713,146,0.244,150,0.005,151,0.008,152,0.005,153,1.267,154,3.121,155,0.419,157,1.93,159,0.288,161,0.227,163,1.055,167,0.302,215,3.569,221,2.218,589,2.103,617,3.619,620,2.34,807,2.095,820,4.519,824,2.676,832,1.955,855,4.359,856,2.906,873,4.713,888,2.676,907,2.34,908,2.676,941,4.936,1002,5.26,1004,3.781,1005,4.859,1006,3.781,1007,4.384,1008,3.781,1009,5.173,1010,3.781,1011,3.781,1012,3.781,1013,4.106,1014,4.106,1015,4.106,1016,4.106,1017,4.106,1018,5.173,1021,2.906,1023,4.561,1025,2.906,1028,4.084,1030,2.906,1032,2.906,1034,2.906,1036,2.676,1038,2.676,1040,3.781,1041,2.676,1043,2.906,1045,2.676,1048,4.084,1056,2.493,1058,3.781,1086,2.493,1575,3.214,1576,3.214,1579,3.214,1580,3.214,1581,3.214,1582,3.214,1583,3.214,1584,3.214,1585,3.214,1586,3.214,1587,3.214,1588,3.214,1589,3.214,1590,3.214,1591,3.214,1592,3.214,1593,3.214,1594,2.906,1595,2.906,1596,2.906,1597,4.106,1598,3.214,1599,3.681,1600,3.681,1601,3.681,1602,2.906,1603,5.721,1604,3.214,1605,3.214,1606,3.214,1607,3.214,1608,3.214,1609,3.214,1610,3.214,1611,3.214,1612,3.214]],["title/modules/ODataModule.html",[1613,3.224,1614,2.969]],["body/modules/ODataModule.html",[3,0.15,4,0.131,5,0.15,6,0.116,12,0.169,22,0.095,23,0.013,26,0.736,31,0.16,43,0.862,56,1.169,89,4.035,90,4.308,92,0.113,139,1.097,146,0.169,150,0.008,151,0.01,152,0.008,153,1.379,155,0.287,157,1.335,159,0.443,163,1.622,441,1.471,450,5.02,636,3.22,772,5.642,775,4.467,1614,5.418,1615,4.467,1616,4.94,1617,7.452,1618,5.642,1619,6.904,1620,5.658,1621,5.658,1622,7.452,1623,6.904,1624,6.506,1625,4.114,1626,6.904,1627,5.658,1628,5.658,1629,7.452,1630,5.658,1631,4.94,1632,5.658,1633,4.94,1634,6.904,1635,5.658,1636,5.658,1637,4.94,1638,5.658]],["title/classes/ODataParameterParser.html",[159,0.32,1145,3.224]],["body/classes/ODataParameterParser.html",[3,0.093,4,0.081,5,0.093,6,0.136,9,2.13,10,0.059,11,0.236,12,0.229,17,1.76,21,1.349,22,0.138,23,0.013,25,0.716,26,0.576,31,0.117,44,1.526,49,0.216,56,1.341,60,2.775,65,1.592,68,2.633,69,1.318,70,1.04,71,1.385,72,2.288,76,3.741,78,1.958,80,3.034,81,2.498,85,0.912,87,1.147,92,0.156,106,2.057,107,1.526,114,2.378,126,2.666,127,1.576,139,1.138,141,2.798,146,0.202,150,0.005,151,0.007,152,0.005,153,1.224,155,0.407,157,1.754,159,0.394,161,0.217,167,0.203,168,1.538,172,0.91,218,3.082,268,2.375,273,2.961,441,0.912,445,1.272,467,2.229,579,2.72,610,2.229,612,2.768,659,2.595,711,1.732,712,1.592,782,2.549,832,1.318,861,1.899,867,1.187,898,3.015,1093,3.167,1101,2.549,1103,2.104,1105,1.732,1108,1.732,1111,2.482,1117,2.378,1118,1.592,1125,4.233,1134,3.861,1137,1.995,1138,1.995,1139,1.995,1140,3.061,1145,4.635,1152,3.061,1155,3.061,1157,5.597,1158,3.179,1159,3.341,1160,3.061,1161,4.364,1162,3.194,1163,3.194,1164,3.061,1165,3.061,1166,2.375,1167,4.341,1168,2.375,1169,4.341,1170,2.375,1171,3.402,1172,4.341,1173,2.375,1174,2.375,1175,2.768,1176,1.995,1177,2.859,1178,4.386,1179,3.061,1180,5.125,1181,3.061,1182,3.061,1183,1.811,1184,2.104,1185,2.104,1186,1.995,1187,5.597,1188,6.348,1189,4.386,1190,3.015,1191,2.378,1192,2.72,1193,3.061,1194,3.061,1195,3.061,1196,3.061,1197,3.061,1198,3.061,1639,5.024,1640,3.506,1641,3.506,1642,3.506,1643,3.506,1644,3.506,1645,3.506,1646,3.506,1647,3.506,1648,3.506,1649,3.506,1650,3.506,1651,3.506,1652,3.506]],["title/classes/ODataPathSegments.html",[159,0.32,834,2.969]],["body/classes/ODataPathSegments.html",[3,0.078,4,0.068,5,0.078,6,0.13,10,0.074,11,0.207,12,0.211,17,2.477,21,1.779,22,0.135,23,0.013,25,0.58,26,0.529,31,0.137,44,1.375,49,0.218,50,1.655,56,1.373,70,1.628,71,1.248,79,1.674,85,0.762,87,1.796,92,0.161,93,1.731,125,2.081,132,1.006,139,1.14,140,1.922,146,0.216,150,0.007,151,0.007,152,0.004,153,1.073,155,0.388,157,1.738,159,0.345,161,0.181,163,1.686,167,0.17,172,0.798,182,2.175,185,1.655,259,2.8,273,1.279,334,3.823,441,1.529,443,3.202,445,1.063,477,3.202,563,3.422,579,1.587,584,2.131,616,3.039,693,2.506,716,1.514,717,2.613,777,1.668,799,2.131,818,3.984,834,3.846,835,3.202,836,5.709,844,3.202,866,4.177,867,1.491,901,1.985,938,3.477,980,2.982,1191,2.084,1260,1.514,1276,4.996,1311,1.514,1314,1.668,1316,2.275,1355,1.759,1374,3.348,1394,4.27,1395,4.27,1396,1.985,1397,3.583,1447,1.514,1653,5.241,1654,1.985,1655,4.619,1656,3.845,1657,4.177,1658,4.277,1659,3.845,1660,5.906,1661,4.404,1662,3.845,1663,2.931,1664,4.177,1665,2.931,1666,3.845,1667,5.709,1668,2.931,1669,3.845,1670,2.931,1671,3.845,1672,2.931,1673,3.202,1674,2.931,1675,2.931,1676,2.931,1677,2.931,1678,2.931,1679,2.931,1680,2.931,1681,2.931,1682,2.931,1683,3.984,1684,1.985,1685,2.131,1686,2.559,1687,2.314,1688,3.845,1689,2.559,1690,4.619,1691,5.136,1692,2.559,1693,2.559,1694,3.845,1695,2.559,1696,2.559,1697,2.559,1698,2.559,1699,3.845,1700,2.559,1701,2.314,1702,2.559,1703,2.559,1704,2.559,1705,2.559,1706,2.559,1707,2.559,1708,4.619,1709,2.559,1710,2.559,1711,2.559,1712,2.559,1713,2.559,1714,2.559,1715,2.559,1716,3.845,1717,2.559,1718,2.131,1719,2.131,1720,2.131,1721,2.131,1722,2.559,1723,3.845,1724,2.559,1725,2.559,1726,3.845,1727,2.559,1728,2.559,1729,2.559,1730,2.559,1731,2.559,1732,2.559,1733,2.559,1734,2.559,1735,2.559,1736,2.559,1737,2.559,1738,2.559,1739,2.559,1740,2.559,1741,2.559,1742,3.845,1743,2.559,1744,2.559,1745,2.559,1746,2.559,1747,2.314,1748,2.559,1749,2.559,1750,3.845,1751,2.559,1752,3.845,1753,2.559,1754,4.619,1755,2.559,1756,2.559,1757,2.559,1758,2.559,1759,4.619,1760,2.559,1761,2.559,1762,2.559]],["title/classes/ODataPropertyAnnotations.html",[159,0.32,658,2.596]],["body/classes/ODataPropertyAnnotations.html",[3,0.09,4,0.079,5,0.09,6,0.106,8,1.225,9,1.892,10,0.057,11,0.272,12,0.215,14,2.758,16,2.248,21,1.981,22,0.138,23,0.013,24,2.758,26,0.603,30,2.231,31,0.147,44,1.816,49,0.211,50,2.376,56,1.431,60,2.14,71,1.491,79,1.197,87,1.645,92,0.158,108,1.709,139,1.118,146,0.188,150,0.005,151,0.007,152,0.005,153,1.197,155,0.381,157,1.581,159,0.495,161,0.21,167,0.197,215,3.049,221,2.439,382,2.949,441,0.884,445,1.233,495,3.327,582,2.041,589,2.333,604,1.427,613,5.338,614,2.472,615,4.195,616,3.942,617,4.731,618,1.847,619,3.572,622,4.28,626,3.572,629,5.08,635,2.949,636,1.935,637,2.161,638,3.572,639,3.572,640,2.161,641,1.935,642,2.161,643,2.472,644,2.472,645,4.024,646,2.758,647,2.472,648,3.793,649,3.572,650,3.572,651,3.572,652,4.195,653,3.572,654,4.195,655,2.472,656,2.472,657,1.609,658,4.262,659,2.98,660,2.472,661,4.195,662,3.572,663,4.195,664,3.668,665,2.472,666,2.041,667,2.472,668,2.472,669,2.472,670,2.472,671,3.572,672,3.572,673,2.472,674,2.472,675,2.472,676,2.472,677,2.472,678,2.472,679,2.472,680,2.472,681,2.472,682,4.195,683,2.472,684,2.472,685,2.472,686,3.572,687,5.08,688,3.572,689,3.572,690,3.572,691,3.668,692,2.472,693,1.935,694,2.472,695,2.472,696,2.472,697,2.472,698,2.472,699,2.041,700,3.783,701,4.195,702,2.472,703,3.572,704,2.041,705,2.472,706,2.041,707,2.472,708,2.472,1200,2.684,1201,2.684,1202,2.684,1206,2.684,1207,2.684,1208,2.684,1209,2.684,1763,3.4,1764,3.4,1765,3.4]],["title/classes/ODataQueryOptions.html",[159,0.32,1766,3.224]],["body/classes/ODataQueryOptions.html",[3,0.088,4,0.077,5,0.088,6,0.131,9,1.847,10,0.056,11,0.228,12,0.198,17,1.697,21,1.532,22,0.129,23,0.013,25,0.477,26,0.435,31,0.146,44,1.628,49,0.211,55,0.901,56,1.366,70,1.549,71,1.637,77,1.722,79,0.812,84,3.602,85,1.483,87,1.43,88,2.307,92,0.158,125,1.259,139,0.939,146,0.207,149,2.396,150,0.005,151,0.007,152,0.005,153,1.18,155,0.39,157,1.731,159,0.38,161,0.206,167,0.281,172,0.878,273,1.455,334,3.428,441,0.867,588,2.632,596,2.12,616,3.235,645,3.425,699,3.425,704,3.425,706,3.425,818,4.241,859,2.632,867,1.932,901,2.258,980,2.258,1065,3.281,1183,2.503,1190,2.001,1191,1.578,1192,2.623,1311,1.722,1318,2.12,1323,3.602,1325,3.602,1351,1.897,1373,3.089,1374,3.786,1447,3.585,1463,2.907,1466,2.258,1483,2.258,1498,1.897,1658,4.554,1673,2.424,1683,2.258,1684,2.258,1685,2.424,1718,2.424,1719,2.424,1720,2.424,1721,2.424,1766,4.505,1767,5.658,1768,2.424,1769,6.059,1770,4.844,1771,4.982,1772,4.23,1773,4.844,1774,3.334,1775,3.334,1776,4.23,1777,6.297,1778,3.334,1779,3.334,1780,3.334,1781,4.23,1782,3.334,1783,3.825,1784,3.334,1785,3.334,1786,3.334,1787,3.334,1788,3.334,1789,4.505,1790,4.837,1791,2.911,1792,2.632,1793,4.505,1794,2.911,1795,3.825,1796,2.911,1797,2.911,1798,2.911,1799,2.911,1800,2.911,1801,2.911,1802,2.911,1803,2.911,1804,2.911,1805,2.911,1806,2.911,1807,2.911,1808,2.911,1809,2.911,1810,2.911,1811,2.911,1812,2.911,1813,4.23,1814,2.911,1815,2.911,1816,2.911,1817,2.911,1818,2.911,1819,2.911,1820,2.911,1821,2.632,1822,2.632,1823,2.911,1824,2.911,1825,2.911,1826,6.858,1827,2.911,1828,2.911,1829,2.911,1830,2.911,1831,2.911,1832,4.982,1833,2.911,1834,2.911,1835,2.911,1836,2.911,1837,2.911,1838,2.911,1839,4.23,1840,4.23,1841,2.911,1842,2.911,1843,2.911,1844,2.911,1845,2.911,1846,2.911,1847,2.911,1848,6.53,1849,2.911,1850,2.911,1851,2.911,1852,4.982,1853,2.911,1854,2.911,1855,4.23,1856,4.23,1857,2.911,1858,2.911,1859,2.911,1860,2.911,1861,2.911,1862,2.911,1863,2.911,1864,2.911,1865,2.911]],["title/classes/ODataReferential.html",[159,0.32,1326,2.969]],["body/classes/ODataReferential.html",[3,0.05,4,0.044,5,0.05,6,0.077,9,2.056,10,0.032,11,0.187,12,0.056,21,0.835,22,0.126,23,0.013,25,0.653,26,0.493,31,0.118,44,1.197,49,0.213,55,0.804,56,1.359,60,2.406,65,2.091,66,2.873,67,1.96,68,2.372,69,1.169,70,1.62,71,1.564,72,1.212,78,1.212,79,1.65,80,1.878,81,1.212,87,1.851,88,1.861,92,0.151,93,0.617,95,1.536,106,1.39,107,1.507,108,0.559,112,1.472,122,2.392,124,0.523,125,0.49,126,0.857,127,0.507,128,2.583,129,0.523,130,0.523,131,0.974,132,1.252,133,2.216,134,0.974,136,0.893,137,0.893,139,1.062,140,0.823,141,2.222,142,2.631,146,0.056,149,1.933,150,0.003,151,0.005,152,0.003,155,0.201,159,0.361,161,0.117,167,0.296,218,2.091,219,0.792,273,1.357,440,3.405,441,0.809,445,0.684,467,1.199,563,2.994,579,1.684,581,1.278,589,2.216,596,1.199,597,1.278,600,1.878,604,1.306,610,3.851,620,1.199,646,0.823,657,3.137,659,2.378,666,1.132,700,2.493,711,1.536,714,1.604,716,0.974,717,2.707,832,1.492,861,2.149,864,2.261,867,1.856,889,1.199,895,2.378,898,3.479,1093,1.536,1105,1.96,1108,0.932,1111,1.96,1117,2.594,1118,0.857,1125,3.924,1134,2.898,1137,1.074,1138,1.074,1139,1.074,1158,2.493,1159,4.254,1161,3.636,1162,2.523,1163,1.977,1166,1.278,1167,2.106,1168,1.278,1169,1.278,1170,2.106,1171,2.106,1172,1.278,1173,2.106,1174,1.278,1176,1.074,1177,2.258,1183,0.974,1184,1.867,1185,1.132,1186,1.074,1190,1.867,1191,1.878,1192,2.493,1258,0.974,1260,1.607,1266,0.974,1267,0.974,1307,2.106,1308,3.347,1311,0.974,1312,3.635,1313,1.278,1314,1.074,1315,1.278,1316,2.05,1317,2.261,1318,1.977,1319,2.261,1320,3.985,1321,2.261,1322,3.118,1323,1.021,1324,1.489,1325,1.684,1326,2.885,1327,1.489,1328,1.489,1329,3.133,1330,1.489,1331,2.456,1332,1.278,1333,1.489,1334,1.489,1335,1.489,1336,4.021,1337,1.489,1338,4.021,1339,1.489,1340,2.885,1341,2.456,1342,3.133,1343,2.456,1344,2.456,1345,2.261,1346,1.489,1347,1.489,1348,1.489,1349,1.489,1350,1.977,1351,2.898,1352,1.977,1353,4.783,1354,1.489,1355,2.763,1356,3.133,1357,1.489,1358,1.489,1359,1.489,1360,1.489,1361,1.372,1362,1.489,1363,1.489,1364,1.489,1365,1.489,1366,2.456,1367,2.261,1368,2.456,1369,2.456,1370,2.261,1371,1.372,1372,2.261,1373,3.139,1374,1.074,1375,1.489,1376,1.489,1377,2.456,1378,1.489,1379,1.489,1380,1.489,1381,2.261,1382,1.372,1383,1.977,1384,2.456,1385,2.456,1386,2.456,1387,2.456,1388,2.456,1389,2.456,1390,1.489,1391,4.327,1392,3.133,1393,1.489,1394,3.449,1395,3.449,1396,1.278,1397,2.688,1398,1.489,1399,1.489,1400,1.489,1401,1.489,1402,1.489,1403,1.489,1404,1.489,1405,1.489,1406,1.489,1407,1.489,1408,1.489,1409,1.489,1410,1.489,1411,1.489,1412,1.489,1413,1.489,1414,1.489,1415,1.489,1416,1.489,1417,1.489,1418,1.489,1419,1.489,1420,2.885,1421,2.261,1422,1.372,1423,1.372,1424,1.372,1425,1.489,1426,2.456,1427,1.489,1428,1.489,1429,2.523,1430,1.489,1431,1.489,1432,1.489,1433,1.489,1434,1.489,1435,4.064,1436,3.347,1437,1.489,1438,1.489,1439,1.489,1440,1.489,1441,1.489,1442,1.489,1443,2.261,1444,1.489,1445,1.489,1446,1.489,1447,1.607,1448,3.851,1449,2.456,1450,1.489,1451,1.489,1452,3.635,1453,1.489,1454,1.489,1455,1.489,1456,1.372,1457,1.489,1458,1.489,1459,1.489,1460,1.489,1461,1.489,1462,1.489,1463,1.132,1464,1.489,1465,1.489,1466,1.278,1467,1.489,1468,1.489,1469,1.489,1470,1.489,1471,1.489,1472,1.489,1473,1.489,1474,1.489,1475,1.489,1476,1.372,1477,1.489,1478,2.456,1479,2.456,1480,2.456,1481,1.489,1482,1.489,1483,1.278,1484,1.489,1485,1.489,1486,1.489,1487,1.489,1488,1.489,1489,2.456,1490,4.021,1491,1.489,1492,1.489,1493,2.456,1494,1.489,1495,1.489,1496,2.456,1497,1.489,1498,1.074,1499,2.456,1500,1.489,1501,1.489,1502,1.372,1503,1.489,1504,1.489,1505,1.489,1506,3.133,1507,1.489,1508,1.489,1866,3.11,1867,1.886]],["title/classes/ODataRequest.html",[159,0.32,820,2.211]],["body/classes/ODataRequest.html",[3,0.089,4,0.078,5,0.089,6,0.136,10,0.056,11,0.229,12,0.214,13,2.516,14,1.466,15,3.246,16,2.6,17,2.438,18,3.102,20,3.246,21,1.308,22,0.134,23,0.013,25,0.685,26,0.6,31,0.078,36,3.037,37,2.712,38,3.437,48,1.818,49,0.216,50,1.262,54,1.818,56,1.064,71,1.352,75,2.712,79,1.626,87,1.589,88,1.969,92,0.115,97,1.735,108,0.995,146,0.1,149,2.045,150,0.005,151,0.007,152,0.005,154,3.439,155,0.407,159,0.263,161,0.208,167,0.195,334,3.546,445,1.218,451,6.688,563,2.96,589,2.316,618,1.831,635,3.772,636,1.911,641,1.911,648,2.016,657,2.974,716,1.735,748,2.932,750,2.652,752,2.932,756,2.932,770,3.296,777,3.959,779,4.569,820,2.637,837,4.569,854,4.569,867,2.537,894,3.541,895,1.735,904,5.003,907,3.995,918,3.88,943,2.442,947,5.003,950,5.487,958,2.652,1311,1.735,1316,2.96,1323,1.818,1325,1.818,1355,2.016,1868,3.358,1869,6.284,1870,5.73,1871,5.73,1872,4.252,1873,4.87,1874,2.932,1875,3.358,1876,3.358,1877,3.358,1878,3.358,1879,3.358,1880,3.358,1881,6.284,1882,3.358,1883,3.358,1884,3.358,1885,5.73,1886,5.73,1887,3.358,1888,3.358,1889,3.358,1890,3.358,1891,3.358,1892,3.358,1893,3.358,1894,3.358,1895,3.358,1896,3.358,1897,3.358,1898,3.358,1899,2.932,1900,2.932,1901,2.932,1902,3.358,1903,3.358,1904,3.358,1905,3.358,1906,3.358,1907,3.358,1908,3.358,1909,4.87,1910,3.358,1911,3.358,1912,3.358,1913,4.87,1914,6.284,1915,3.358,1916,4.87,1917,4.87,1918,5.73,1919,3.358,1920,3.358,1921,3.358,1922,3.358,1923,6.284,1924,3.358,1925,3.358,1926,3.358,1927,3.358,1928,3.358,1929,3.358,1930,3.358,1931,3.358,1932,3.358,1933,3.358,1934,3.358,1935,3.358,1936,4.87,1937,3.358,1938,3.358,1939,3.358,1940,3.358,1941,3.358,1942,3.358,1943,3.358,1944,3.358,1945,4.87,1946,3.358,1947,3.358,1948,3.358,1949,3.358,1950,3.358,1951,3.358,1952,4.87,1953,3.358,1954,3.358,1955,3.358,1956,3.358,1957,3.358,1958,3.358,1959,3.358,1960,3.358,1961,3.358,1962,3.358,1963,3.358,1964,3.358]],["title/classes/ODataResponse.html",[159,0.32,855,2.324]],["body/classes/ODataResponse.html",[3,0.071,4,0.062,5,0.071,6,0.129,8,0.799,9,2.054,10,0.045,11,0.194,12,0.181,16,2.75,21,1.511,22,0.137,23,0.013,26,0.668,31,0.062,33,3.286,34,1.455,35,1.455,44,1.834,46,1.272,49,0.194,55,0.651,56,1.219,68,2.389,69,1.886,70,1.636,71,1.795,75,3.031,79,1.969,83,3.339,87,1.571,92,0.133,93,0.879,108,0.796,111,3.468,132,1.673,139,1.292,140,1.173,146,0.199,150,0.004,151,0.006,152,0.004,153,1.005,155,0.386,157,1.776,159,0.211,161,0.166,167,0.156,243,3.619,441,1.304,442,2.346,445,0.975,450,4.657,451,5.057,581,3.398,589,3.255,617,4.462,618,1.55,635,2.475,636,1.529,641,1.529,642,1.708,645,3.377,648,3.377,658,2.621,664,2.621,691,2.621,750,4.442,770,3.294,777,3.795,804,3.961,805,3.961,806,3.961,815,2.346,820,3.611,824,4.657,831,5.592,837,4.091,839,2.346,841,2.346,854,4.091,855,3.645,867,0.91,873,3.011,898,1.613,907,4.837,908,4.657,918,4.878,941,3.189,942,3.6,943,1.954,958,5.686,986,3.961,1159,2.346,1162,1.708,1163,1.708,1192,1.455,1316,2.592,1367,1.954,1370,1.954,1371,1.954,1372,2.998,1373,1.455,1374,3.202,1498,1.529,1872,3.6,1874,2.346,1899,2.346,1900,2.346,1901,2.346,1965,2.687,1966,2.687,1967,3.255,1968,5.017,1969,4.123,1970,5.017,1971,4.123,1972,5.686,1973,2.687,1974,2.687,1975,2.687,1976,2.687,1977,2.687,1978,6.881,1979,2.687,1980,4.123,1981,2.687,1982,2.687,1983,2.687,1984,2.687,1985,2.687,1986,2.687,1987,2.687,1988,2.687,1989,2.687,1990,2.687,1991,2.687,1992,4.123,1993,2.687,1994,2.687,1995,4.123,1996,2.687,1997,2.687,1998,2.687,1999,2.687,2000,2.687,2001,2.687,2002,2.687,2003,2.687,2004,2.687,2005,2.687,2006,2.687,2007,2.687,2008,2.687,2009,2.687,2010,2.687,2011,5.017,2012,2.687,2013,2.687,2014,2.687,2015,2.346,2016,2.687,2017,2.687,2018,2.687,2019,2.687,2020,2.687,2021,2.687,2022,2.687,2023,2.687,2024,3.6,2025,2.687,2026,2.687,2027,2.687,2028,2.687,2029,2.687,2030,5.627,2031,5.017,2032,5.592,2033,5.017,2034,5.017,2035,5.017,2036,5.017,2037,5.627,2038,5.627]],["title/classes/ODataResponseOptions.html",[159,0.32,1972,3.224]],["body/classes/ODataResponseOptions.html",[3,0.116,4,0.101,5,0.116,6,0.139,9,1.773,10,0.073,11,0.275,12,0.248,22,0.136,23,0.013,24,3.074,25,0.745,26,0.593,30,3.199,31,0.101,32,3.479,36,2.745,42,3.166,43,1.004,44,1.714,45,2.888,46,3.333,47,3.57,49,0.211,50,2.478,51,3.814,55,0.923,56,0.99,61,3.57,62,3.57,63,3.752,64,4.179,70,1.211,79,1.063,85,1.714,92,0.141,139,0.846,146,0.21,150,0.006,151,0.009,152,0.006,153,1.425,155,0.416,157,1.661,159,0.342,161,0.27,167,0.253,441,1.134,444,3.445,445,1.583,545,4.616,616,3.638,618,2.198,631,3.445,637,3.717,640,2.774,711,2.888,712,2.655,714,1.764,716,3.02,745,3.81,746,3.81,747,3.81,764,3.81,867,1.979,917,5.757,1373,3.814,1443,4.794,1463,2.619,1967,3.445,1972,5.206,2015,3.81,2024,3.81,2039,4.364,2040,5.847,2041,5.847,2042,5.847,2043,5.847,2044,4.364,2045,4.364,2046,4.364,2047,4.364,2048,4.364,2049,4.364,2050,4.364,2051,5.847,2052,4.364,2053,5.847,2054,4.364,2055,5.847,2056,4.364,2057,4.364,2058,4.364,2059,5.847,2060,5.847,2061,4.364,2062,4.364,2063,4.364,2064,4.364,2065,4.364,2066,4.364,2067,4.364,2068,4.364,2069,4.364,2070,4.364,2071,4.364,2072,4.364,2073,4.364,2074,4.364,2075,4.364,2076,4.364,2077,4.364,2078,4.364,2079,4.364,2080,4.364,2081,4.364]],["title/classes/ODataSchema.html",[159,0.32,1095,2.451]],["body/classes/ODataSchema.html",[3,0.094,4,0.082,5,0.094,6,0.138,10,0.06,11,0.238,12,0.23,21,1.359,22,0.142,23,0.013,25,0.349,26,0.67,31,0.082,43,1.199,49,0.219,56,1.303,68,1.713,71,1.393,85,1.316,87,1.348,88,1.432,92,0.149,101,3.487,106,2.069,107,1.535,108,1.748,109,3.327,111,3.048,113,3.877,114,2.794,115,3.36,117,3.05,139,1.32,146,0.232,149,1.487,150,0.005,151,0.008,152,0.005,153,1.233,155,0.412,157,1.72,159,0.278,161,0.219,163,1.015,167,0.206,218,1.609,243,2.5,258,2.252,273,1.546,301,1.75,399,4.661,441,0.921,600,3.224,604,2.479,618,1.902,646,1.546,659,1.83,712,2.298,714,3.015,770,3.684,832,2.421,854,5.151,943,2.576,1091,5.085,1093,3.5,1095,3.037,1103,2.126,1118,2.298,1134,3.665,1175,2.797,1176,2.016,1177,2.88,1191,3.353,1254,4.661,1256,3.217,1257,3.679,1258,2.614,1260,1.83,1265,2.399,1266,1.83,1267,1.83,1498,2.016,1509,5.085,1657,2.797,2082,3.542,2083,5.061,2084,5.061,2085,5.061,2086,5.061,2087,5.061,2088,5.061,2089,3.542,2090,3.542,2091,3.542,2092,3.542,2093,5.085,2094,3.542,2095,3.542,2096,3.542,2097,3.542,2098,3.542,2099,5.061,2100,3.542,2101,5.061,2102,3.542,2103,5.061,2104,3.542,2105,5.061,2106,3.542,2107,5.061,2108,3.542,2109,3.542,2110,3.542,2111,3.542,2112,3.542,2113,3.542,2114,3.542,2115,3.542,2116,3.542,2117,3.542,2118,3.542,2119,3.093,2120,5.904,2121,3.542,2122,3.542,2123,3.542,2124,5.061,2125,3.542,2126,3.093,2127,5.061,2128,3.542,2129,3.542,2130,3.542,2131,3.542,2132,3.542,2133,3.542,2134,3.542,2135,3.542,2136,3.542,2137,3.542,2138,3.542,2139,3.542,2140,6.441,2141,3.542,2142,3.542,2143,3.542,2144,5.155,2145,3.542,2146,3.542,2147,3.542,2148,3.542,2149,3.542,2150,3.542]],["title/injectables/ODataServiceFactory.html",[1618,2.969,2151,3.565]],["body/injectables/ODataServiceFactory.html",[3,0.145,4,0.127,5,0.145,6,0.129,8,1.31,10,0.092,12,0.219,22,0.133,23,0.013,26,0.689,31,0.127,49,0.223,56,1.144,71,1.594,92,0.147,139,1.31,146,0.235,150,0.008,151,0.01,152,0.008,153,1.647,155,0.372,157,1.594,159,0.575,167,0.317,172,1.225,182,3.625,243,2.699,258,3.473,259,4.873,334,3.964,771,4.77,772,5.574,773,7.175,775,5.793,1618,4.914,1625,3.973,2151,5.9,2152,4.77,2153,5.464,2154,5.464,2155,5.464,2156,5.464,2157,7.666,2158,5.464,2159,5.464,2160,7.666,2161,5.464,2162,6.758]],["title/classes/ODataStructuredType.html",[159,0.32,2093,3.224]],["body/classes/ODataStructuredType.html",[3,0.073,4,0.064,5,0.073,6,0.138,9,1.431,10,0.046,11,0.197,12,0.24,14,1.828,21,2.087,22,0.142,23,0.013,25,0.745,26,0.58,31,0.064,49,0.198,56,1.316,66,1.109,68,2.074,69,1.574,70,1.546,71,1.737,72,1.632,78,1.632,79,1.386,81,1.632,85,1.089,87,1.582,92,0.159,93,2.198,99,1.417,107,1.321,108,1.505,112,2.691,122,2.482,126,2.307,128,1.98,136,2.404,137,2.404,138,2.751,139,0.985,140,2.217,146,0.228,150,0.004,151,0.006,152,0.004,153,1.02,155,0.416,157,1.834,159,0.215,161,0.169,163,0.786,167,0.159,219,1.151,227,2.394,301,1.355,440,3.278,441,0.713,589,1.109,597,3.441,600,2.899,604,2.133,618,1.574,646,1.197,657,2.404,712,1.902,714,1.693,716,2.938,717,3.026,770,2.51,802,1.743,832,1.574,867,1.72,895,1.417,1093,2.51,1094,2.513,1095,3.875,1103,1.646,1105,2.069,1108,2.069,1111,2.069,1113,2.165,1116,1.857,1117,1.298,1118,1.245,1125,1.561,1126,2.165,1127,2.165,1128,1.994,1131,1.994,1132,2.165,1133,1.857,1134,2.891,1135,2.165,1136,4.836,1137,1.561,1138,1.561,1139,1.561,1159,3.236,1183,1.417,1192,1.485,1256,2.662,1258,2.163,1260,1.417,1265,1.857,1266,1.417,1267,1.417,1293,4.436,1294,2.394,1307,3.441,1320,3.694,1322,3.851,1340,1.994,1345,1.994,1350,3.23,1351,1.561,1352,1.743,1355,3.413,1381,3.045,1382,1.994,1420,4.453,1421,3.694,1422,1.994,1423,1.994,1424,1.994,1429,1.743,1435,1.646,1436,3.694,1448,1.743,1456,1.994,1463,2.513,1476,4.135,1498,1.561,1502,4.453,1537,2.394,1558,3.045,1569,2.394,1821,2.165,1822,2.165,2093,5.303,2144,4.436,2163,8.224,2164,5.687,2165,5.687,2166,5.08,2167,3.656,2168,4.188,2169,2.742,2170,2.742,2171,2.742,2172,2.742,2173,2.742,2174,2.742,2175,2.742,2176,2.742,2177,2.742,2178,2.742,2179,2.742,2180,2.742,2181,2.742,2182,2.742,2183,2.742,2184,2.742,2185,2.742,2186,2.742,2187,2.742,2188,2.742,2189,6.125,2190,4.188,2191,2.742,2192,2.742,2193,2.742,2194,2.742,2195,2.394,2196,2.742,2197,2.742,2198,5.08,2199,4.188,2200,2.742,2201,4.188,2202,5.08,2203,2.742,2204,4.188,2205,2.742,2206,2.742,2207,4.188,2208,2.742,2209,2.742,2210,2.742,2211,4.188,2212,6.717,2213,7.363,2214,2.742,2215,2.742,2216,2.742,2217,2.742,2218,5.08,2219,2.742,2220,2.742,2221,2.742,2222,2.742,2223,2.742,2224,2.742,2225,2.742]],["title/classes/ODataStructuredTypeParser.html",[159,0.32,1159,2.324]],["body/classes/ODataStructuredTypeParser.html",[3,0.043,4,0.038,5,0.043,6,0.126,9,2.051,10,0.028,11,0.169,12,0.22,21,1.37,22,0.135,23,0.013,25,0.651,26,0.459,31,0.109,44,1.094,49,0.215,55,0.742,56,1.335,60,2.532,65,1.912,66,2.766,67,1.77,68,2.35,69,1.582,70,1.628,71,1.637,72,1.64,78,1.396,79,1.577,80,1.696,81,1.64,85,0.931,87,1.838,88,1.702,92,0.157,93,1.378,95,1.364,106,1.903,107,1.643,108,0.484,112,1.992,122,2.49,124,0.454,125,0.425,126,0.743,127,0.439,128,2.463,129,0.454,130,0.454,131,0.845,132,0.961,133,1.702,134,0.845,136,1.696,137,1.696,139,0.989,140,1.564,141,2.37,142,2.429,146,0.193,149,1.767,150,0.002,151,0.004,152,0.002,153,0.673,155,0.376,157,1.527,159,0.33,161,0.101,163,0.791,167,0.273,172,0.763,218,1.912,219,0.687,273,1.205,440,3.285,441,0.718,445,0.593,467,1.04,563,2.805,579,1.495,581,1.107,589,2.063,596,1.04,597,2.426,600,1.696,604,1.159,610,3.628,646,0.714,657,2.991,659,2.175,666,0.981,700,2.279,711,1.77,712,0.743,714,1.702,716,0.845,717,2.52,832,1.347,861,1.94,864,2.007,867,1.727,889,1.04,895,2.175,898,3.259,1093,2.079,1094,1.657,1103,0.981,1105,2.079,1108,1.364,1111,2.079,1117,2.414,1118,0.743,1125,3.762,1134,2.676,1137,0.931,1138,0.931,1139,0.931,1158,2.279,1159,4.308,1161,3.425,1162,2.278,1163,1.755,1166,1.107,1167,1.87,1168,1.107,1169,1.107,1170,1.87,1171,1.87,1172,1.107,1173,1.87,1174,1.107,1176,0.931,1177,2.039,1183,0.845,1184,1.657,1185,0.981,1186,0.931,1190,1.657,1191,1.696,1192,2.279,1258,0.845,1260,2.175,1266,0.845,1267,0.845,1307,2.426,1308,5.438,1311,0.845,1312,3.323,1313,1.107,1314,0.931,1315,1.107,1316,1.851,1317,2.007,1318,1.755,1319,2.007,1320,3.948,1321,2.007,1322,3.455,1323,0.885,1324,1.291,1325,1.495,1326,2.007,1327,1.291,1328,1.291,1329,2.829,1330,1.291,1331,2.18,1332,1.107,1333,1.291,1334,1.291,1335,1.291,1336,3.713,1337,1.291,1338,3.713,1339,1.291,1340,2.605,1341,2.18,1342,2.829,1343,2.18,1344,2.18,1345,2.007,1346,1.291,1347,1.291,1348,1.291,1349,1.291,1350,2.676,1351,2.676,1352,1.755,1353,4.505,1354,1.291,1355,2.526,1356,2.829,1357,1.291,1358,1.291,1359,1.291,1360,1.291,1361,1.189,1362,1.291,1363,1.291,1364,1.291,1365,1.291,1366,2.18,1367,2.007,1368,2.18,1369,2.18,1370,2.007,1371,1.189,1372,2.007,1373,2.94,1374,0.931,1375,1.291,1376,1.291,1377,2.18,1378,1.291,1379,1.291,1380,1.291,1381,2.605,1382,1.189,1383,1.755,1384,2.18,1385,2.18,1386,2.18,1387,2.18,1388,2.18,1389,2.18,1390,1.291,1391,4.028,1392,2.829,1393,1.291,1394,3.185,1395,3.185,1396,1.107,1397,2.426,1398,1.291,1399,1.291,1400,1.291,1401,1.291,1402,1.291,1403,1.291,1404,1.291,1405,1.291,1406,1.291,1407,1.291,1408,1.291,1409,1.291,1410,1.291,1411,1.291,1412,1.291,1413,1.291,1414,1.291,1415,1.291,1416,1.291,1417,1.291,1418,1.291,1419,1.291,1420,3.419,1421,2.007,1422,1.189,1423,1.189,1424,1.189,1425,1.291,1426,2.18,1427,1.291,1428,1.291,1429,2.278,1430,1.291,1431,1.291,1432,1.291,1433,2.18,1434,1.291,1435,3.885,1436,3.061,1437,1.291,1438,2.829,1439,1.291,1440,1.291,1441,1.291,1442,1.291,1443,2.007,1444,2.829,1445,1.291,1446,1.291,1447,1.426,1448,3.628,1449,2.18,1450,1.291,1451,1.291,1452,3.323,1453,1.291,1454,1.291,1455,1.291,1456,1.189,1457,1.291,1458,1.291,1459,2.18,1460,1.291,1461,1.291,1462,1.291,1463,0.981,1464,1.291,1465,1.291,1466,1.107,1467,1.291,1468,1.291,1469,1.291,1470,1.291,1471,1.291,1472,1.291,1473,1.291,1474,1.291,1475,1.291,1476,3.061,1477,1.291,1478,2.18,1479,2.18,1480,2.18,1481,1.291,1482,1.291,1483,1.107,1484,1.291,1485,1.291,1486,1.291,1487,1.291,1488,1.291,1489,2.18,1490,3.713,1491,1.291,1492,1.291,1493,2.18,1494,1.291,1495,1.291,1496,2.18,1497,1.291,1498,0.931,1499,2.18,1500,1.291,1501,1.291,1502,2.007,1503,1.291,1504,1.291,1505,1.291,1506,2.829,1507,1.291,1508,1.291,1558,2.007,2167,2.41,2195,1.428,2226,2.761,2227,2.761,2228,1.635,2229,1.635,2230,1.635,2231,1.635,2232,1.635,2233,1.635,2234,1.635,2235,1.635,2236,1.635,2237,1.635,2238,1.635,2239,1.635,2240,1.635,2241,1.635,2242,1.635,2243,1.635,2244,1.635,2245,1.635,2246,1.635,2247,1.635,2248,1.635,2249,1.635,2250,1.635]],["title/classes/OptionHandler.html",[159,0.32,1783,3.224]],["body/classes/OptionHandler.html",[3,0.082,4,0.072,5,0.082,6,0.134,9,1.626,10,0.077,12,0.226,17,1.611,21,1.735,22,0.134,23,0.013,25,0.539,26,0.413,31,0.141,44,1.869,49,0.216,55,1.02,56,1.352,70,1.632,71,1.652,77,1.604,79,0.756,84,2.964,85,1.68,87,1.382,88,2.213,92,0.162,125,1.195,139,0.891,146,0.226,149,2.298,150,0.005,151,0.007,152,0.005,153,1.12,155,0.402,157,1.845,159,0.36,161,0.192,167,0.267,172,0.833,258,2.922,273,1.355,334,3.691,441,0.807,588,2.451,596,1.973,616,1.604,618,1.728,645,3.286,699,3.286,704,3.286,706,3.286,818,2.102,859,4.322,867,1.853,901,2.102,980,2.102,1065,3.113,1190,1.863,1191,1.469,1192,2.489,1311,1.604,1318,1.973,1323,3.499,1325,3.499,1351,2.616,1373,3.277,1374,3.677,1447,3.495,1463,2.759,1466,2.102,1483,2.102,1498,1.767,1658,2.257,1673,3.342,1683,2.102,1684,2.102,1685,2.257,1718,2.257,1719,2.257,1720,2.257,1721,2.257,1766,2.451,1767,5.806,1768,2.257,1769,5.908,1771,2.71,1772,2.71,1776,2.71,1777,5.798,1781,2.71,1783,3.629,1789,4.376,1790,4.698,1791,2.71,1792,2.451,1793,4.322,1794,2.71,1795,3.629,1796,2.71,1797,2.71,1798,2.71,1799,2.71,1800,2.71,1801,2.71,1802,2.71,1803,2.71,1804,2.71,1805,2.71,1806,2.71,1807,2.71,1808,2.71,1809,2.71,1810,2.71,1811,2.71,1812,2.71,1813,4.014,1814,2.71,1815,2.71,1816,2.71,1817,2.71,1818,2.71,1819,2.71,1820,2.71,1821,2.451,1822,2.451,1823,2.71,1824,4.014,1825,2.71,1826,6.767,1827,5.284,1828,2.71,1829,2.71,1830,4.014,1831,5.284,1832,4.78,1833,4.014,1834,2.71,1835,4.014,1836,2.71,1837,2.71,1838,2.71,1839,4.014,1840,4.014,1841,4.014,1842,2.71,1843,2.71,1844,4.014,1845,2.71,1846,2.71,1847,2.71,1848,6.412,1849,2.71,1850,2.71,1851,4.014,1852,4.78,1853,2.71,1854,4.014,1855,5.284,1856,4.014,1857,2.71,1858,4.014,1859,2.71,1860,2.71,1861,2.71,1862,4.014,1863,2.71,1864,4.014,1865,2.71,2251,4.597,2252,4.597,2253,4.597,2254,4.597,2255,3.104,2256,3.104,2257,3.104,2258,3.104,2259,3.104,2260,3.104,2261,3.104,2262,3.104,2263,3.104,2264,3.104,2265,3.104,2266,3.104,2267,3.104,2268,3.104,2269,3.104,2270,3.104,2271,2.71,2272,3.104]],["title/interfaces/Options.html",[0,1.431,9,1.028]],["body/interfaces/Options.html",[0,2.585,1,2.819,2,1.905,3,0.098,4,0.086,5,0.098,6,0.062,7,2.099,8,1.271,9,1.897,10,0.062,11,0.284,12,0.196,13,1.905,14,1.609,15,3.118,16,2.029,17,2.298,18,1.997,19,2.099,20,1.905,22,0.14,23,0.013,24,2.862,25,0.822,26,0.468,27,2.634,28,1.745,29,3.125,30,2.365,31,0.194,32,3.417,33,1.997,34,1.997,35,1.997,36,2.936,37,1.745,38,2.572,39,2.819,40,1.997,41,1.905,42,2.819,43,0.562,44,0.959,45,1.822,46,3.274,47,3.551,48,2.819,49,0.227,50,1.957,51,2.819,52,2.099,53,2.099,54,1.997,55,1.209,56,0.881,57,2.099,58,2.099,59,1.822,60,2.43,61,1.997,62,1.997,63,2.099,64,2.099,65,2.978,66,1.491,67,2.982,68,2.043,69,1.957,70,1.608,71,1.693,72,2.029,73,2.213,74,2.213,75,1.745,76,2.982,77,1.905,78,1.437,79,0.899,80,1.745,81,1.437,82,1.905,83,1.745,84,1.997,85,0.959,86,1.822,87,0.842,88,1.491,89,1.997,90,1.997,91,2.099,92,0.153,93,1.704,94,2.213,95,1.822,96,2.213,97,1.905,98,2.213,99,1.905,100,2.099,101,2.819,102,4.08,103,2.099,104,2.099,105,2.099,106,1.292,107,1.354,108,2.185,109,1.905,110,2.572,111,1.745,112,2.464,113,2.099,114,2.464,115,2.099,116,2.819,117,1.905,118,2.819,119,2.69,120,1.997,121,1.745,122,2.272,123,1.905,124,1.023,125,0.959,126,2.978,127,1.398,128,1.437,129,1.023,130,1.023,131,1.905,132,0.842,133,1.491,134,1.905,135,2.213,136,1.745,137,1.745,138,1.997,139,1.17,140,1.609,141,1.609,142,1.905,143,1.548,144,2.099,145,2.099,146,0.11,147,1.905,148,1.997,149,1.548,150,0.005,151,0.008,152,0.005]],["title/interfaces/OptionsHelper.html",[0,1.431,60,1.382]],["body/interfaces/OptionsHelper.html",[0,2.573,1,2.788,2,1.875,3,0.096,4,0.084,5,0.096,6,0.061,7,2.065,8,1.333,9,1.889,10,0.061,11,0.282,12,0.213,13,1.875,14,1.584,15,3.091,16,2.006,17,2.281,18,1.965,19,2.065,20,1.875,22,0.141,23,0.013,24,3.117,25,0.825,26,0.463,27,2.611,28,1.718,29,3.908,30,3.123,31,0.194,32,2.956,33,1.965,34,1.965,35,1.965,36,2.925,37,1.718,38,2.543,39,2.788,40,1.965,41,1.875,42,2.788,43,0.553,44,0.943,45,1.793,46,2.437,47,1.965,48,2.788,49,0.227,50,2.584,51,3.723,52,2.065,53,2.065,54,1.965,55,1.205,56,0.871,57,2.065,58,2.065,59,1.793,60,2.487,61,3.526,62,1.965,63,2.065,64,2.065,65,2.957,66,1.467,67,2.956,68,2.026,69,1.935,70,1.603,71,1.685,72,2.006,73,2.178,74,2.178,75,1.718,76,2.956,77,1.875,78,1.414,79,0.884,80,1.718,81,1.414,82,1.875,83,1.718,84,1.965,85,0.943,86,1.793,87,0.829,88,1.467,89,1.965,90,1.965,91,2.065,92,0.153,93,1.685,94,2.178,95,1.793,96,2.178,97,1.875,98,2.178,99,1.875,100,2.065,101,2.788,102,4.063,103,2.065,104,2.065,105,2.065,106,1.272,107,1.338,108,2.175,109,1.875,110,2.543,111,1.718,112,2.437,113,2.065,114,2.437,115,2.065,116,2.788,117,1.875,118,2.788,119,2.66,120,1.965,121,1.718,122,2.247,123,1.875,124,1.007,125,0.943,126,2.957,127,1.383,128,1.414,129,1.007,130,1.007,131,1.875,132,0.829,133,1.467,134,1.875,135,2.178,136,1.718,137,1.718,138,1.965,139,1.16,140,1.584,141,1.584,142,1.875,143,1.524,144,2.065,145,2.065,146,0.108,147,1.875,148,1.965,149,1.524,150,0.005,151,0.008,152,0.005]],["title/interfaces/Parser.html",[0,1.431,68,1.382]],["body/interfaces/Parser.html",[0,2.549,1,2.723,2,1.814,3,0.093,4,0.082,5,0.093,6,0.108,7,1.999,8,1.243,9,1.995,10,0.059,11,0.165,12,0.175,13,1.814,14,1.533,15,3.035,16,1.96,17,2.248,18,1.902,19,1.999,20,1.814,22,0.14,23,0.013,24,2.8,25,0.814,26,0.452,27,2.564,28,1.662,29,3.019,30,2.284,31,0.193,32,2.903,33,1.902,34,1.902,35,1.902,36,2.9,37,1.662,38,2.485,39,2.723,40,1.902,41,1.814,42,2.723,43,0.535,44,0.913,45,1.735,46,2.38,47,1.902,48,2.723,49,0.226,50,1.891,51,2.723,52,1.999,53,1.999,54,1.902,55,1.196,56,0.851,57,1.999,58,1.999,59,1.735,60,2.661,61,1.902,62,1.902,63,1.999,64,1.999,65,3.491,66,1.42,67,2.903,68,2.172,69,2.412,70,1.642,71,1.835,72,2.5,73,2.108,74,2.108,75,1.662,76,2.903,77,1.814,78,1.96,79,0.856,80,1.662,81,2.29,82,1.814,83,1.662,84,1.902,85,0.913,86,1.735,87,0.802,88,1.42,89,1.902,90,1.902,91,1.999,92,0.157,93,1.646,94,2.108,95,1.735,96,2.108,97,1.814,98,2.108,99,1.814,100,1.999,101,2.723,102,4.029,103,1.999,104,1.999,105,1.999,106,1.231,107,1.308,108,2.154,109,1.814,110,2.485,111,1.662,112,2.38,113,1.999,114,2.38,115,1.999,116,2.723,117,1.814,118,2.723,119,2.598,120,1.902,121,1.662,122,2.195,123,1.814,124,0.974,125,0.913,126,2.914,127,1.351,128,1.369,129,0.974,130,0.974,131,1.814,132,0.802,133,1.42,134,1.814,135,2.108,136,1.662,137,1.662,138,1.902,139,1.139,140,1.533,141,1.533,142,1.814,143,1.475,144,1.999,145,1.999,146,0.191,147,1.814,148,1.902,149,1.475,150,0.005,151,0.007,152,0.005,153,1.226,155,0.298,157,1.386,172,1.065,1105,1.735,1111,1.735,2273,3.512,2274,3.512,2275,3.512]],["title/interfaces/ResponseOptions.html",[0,1.431,62,2.211]],["body/interfaces/ResponseOptions.html",[0,2.584,1,2.816,2,1.902,3,0.098,4,0.086,5,0.098,6,0.062,7,2.095,8,1.34,9,1.856,10,0.062,11,0.284,12,0.195,13,1.902,14,1.606,15,3.115,16,2.027,17,2.296,18,1.993,19,2.095,20,1.902,22,0.14,23,0.013,24,2.86,25,0.818,26,0.467,27,2.632,28,1.742,29,3.121,30,2.362,31,0.194,32,2.979,33,1.993,34,1.993,35,1.993,36,2.935,37,1.742,38,2.569,39,2.816,40,1.993,41,1.902,42,3.548,43,0.561,44,0.957,45,1.818,46,2.461,47,1.993,48,2.816,49,0.227,50,1.955,51,2.816,52,2.095,53,2.095,54,1.993,55,1.239,56,0.88,57,2.095,58,2.095,59,1.818,60,2.497,61,1.993,62,2.816,63,3.729,64,3.729,65,2.976,66,1.488,67,2.979,68,2.041,69,1.955,70,1.608,71,1.693,72,2.027,73,2.209,74,2.209,75,1.742,76,2.979,77,1.902,78,1.434,79,0.897,80,1.742,81,1.434,82,1.902,83,1.742,84,1.993,85,0.957,86,1.818,87,0.841,88,1.488,89,1.993,90,1.993,91,2.095,92,0.153,93,1.702,94,2.209,95,1.818,96,2.209,97,1.902,98,2.209,99,1.902,100,2.095,101,2.816,102,4.078,103,2.095,104,2.095,105,2.095,106,1.29,107,1.352,108,2.184,109,1.902,110,2.569,111,1.742,112,2.461,113,2.095,114,2.461,115,2.095,116,2.816,117,1.902,118,2.816,119,2.686,120,1.993,121,1.742,122,2.269,123,1.902,124,1.021,125,0.957,126,2.976,127,1.396,128,1.434,129,1.021,130,1.021,131,1.902,132,0.841,133,1.488,134,1.902,135,2.209,136,1.742,137,1.742,138,1.993,139,1.169,140,1.606,141,1.606,142,1.902,143,1.545,144,2.095,145,2.095,146,0.11,147,1.902,148,1.993,149,1.545,150,0.005,151,0.008,152,0.005]],["title/classes/SegmentHandler.html",[159,0.32,1664,3.224]],["body/classes/SegmentHandler.html",[3,0.081,4,0.071,5,0.081,6,0.127,10,0.077,12,0.192,17,2.51,22,0.13,23,0.013,25,0.664,26,0.541,31,0.14,44,0.797,49,0.218,50,1.712,56,1.38,70,1.65,71,1.69,79,1.699,85,1.184,87,1.782,92,0.159,125,2.112,132,1.04,139,1.166,146,0.222,150,0.007,151,0.007,152,0.005,153,1.11,155,0.377,157,1.69,159,0.357,161,0.189,163,1.557,167,0.178,172,1.09,182,2.25,185,1.712,259,2.895,273,1.338,334,3.854,441,1.184,443,3.311,445,1.112,477,3.311,563,3.479,579,1.66,584,2.229,616,1.583,618,1.712,693,2.592,716,1.583,717,2.684,777,1.744,799,2.229,818,2.076,834,2.229,835,3.311,836,5.317,844,3.311,866,2.42,867,1.542,901,2.076,938,3.595,980,3.084,1191,2.155,1276,5.07,1311,1.583,1314,1.744,1316,2.353,1355,1.84,1374,1.744,1394,4.353,1395,4.353,1396,2.076,1397,3.68,1447,1.583,1653,5.118,1654,2.076,1655,2.676,1657,2.42,1658,2.229,1659,2.676,1660,5.779,1662,2.676,1664,3.595,1666,2.676,1667,5.779,1669,2.676,1671,2.676,1673,2.229,1683,4.073,1684,2.076,1685,2.229,1686,2.676,1687,2.42,1688,3.976,1689,2.676,1690,4.744,1691,5.252,1692,2.676,1693,2.676,1694,3.976,1695,2.676,1696,2.676,1697,2.676,1698,2.676,1699,3.976,1700,2.676,1701,2.42,1702,2.676,1703,2.676,1704,2.676,1705,2.676,1706,2.676,1707,2.676,1708,4.744,1709,2.676,1710,2.676,1711,2.676,1712,2.676,1713,2.676,1714,2.676,1715,2.676,1716,3.976,1717,2.676,1718,2.229,1719,2.229,1720,2.229,1721,2.229,1722,2.676,1723,3.976,1724,2.676,1725,2.676,1726,3.976,1727,2.676,1728,2.676,1729,2.676,1730,2.676,1731,2.676,1732,2.676,1733,2.676,1734,2.676,1735,2.676,1736,2.676,1737,2.676,1738,2.676,1739,2.676,1740,2.676,1741,2.676,1742,3.976,1743,2.676,1744,2.676,1745,2.676,1746,2.676,1747,2.42,1748,2.676,1749,3.976,1750,3.976,1751,3.976,1752,3.976,1753,3.976,1754,4.744,1755,5.252,1756,2.676,1757,5.252,1758,3.976,1759,4.744,1760,5.252,1761,2.676,1762,5.252,2271,2.676,2276,3.065,2277,3.065,2278,3.065,2279,3.065,2280,3.065,2281,3.065,2282,3.065,2283,3.065,2284,3.065,2285,3.065,2286,3.065]],["title/interfaces/StoragePayload.html",[0,1.431,1602,3.224]],["body/interfaces/StoragePayload.html",[0,1.846,2,2.722,3,0.14,4,0.122,5,0.14,6,0.089,8,1.021,10,0.089,11,0.311,16,2.949,21,1.774,22,0.136,23,0.013,26,0.594,31,0.122,36,2.053,49,0.22,55,1.194,56,0.892,75,3.582,79,1.284,87,1.648,92,0.151,125,1.37,139,1.021,150,0.008,151,0.01,152,0.008,159,0.413,163,1.51,167,0.306,589,3.216,617,4.332,807,2.998,820,3.908,824,5.502,832,1.981,855,4.108,856,4.16,873,3.162,888,3.831,907,4.811,908,5.502,1002,4.2,1005,5.125,1023,3.35,1028,3.568,1048,3.568,1056,3.568,1058,4.804,1086,3.568,1594,4.16,1595,4.16,1596,4.16,1597,4.16,1598,4.6,1602,5.216,1603,6.607,1604,4.6,1605,4.6,1606,4.6,1607,4.6,1608,4.6,1609,4.6,1610,4.6,1611,4.6,1612,4.6]],["title/interfaces/StructuredTypeFieldOptions.html",[0,1.431,65,1.855]],["body/interfaces/StructuredTypeFieldOptions.html",[0,2.591,1,2.835,2,1.92,3,0.099,4,0.086,5,0.099,6,0.063,7,2.115,8,1.345,9,1.861,10,0.063,11,0.285,13,1.92,14,1.622,15,3.132,16,2.041,17,2.306,18,2.013,19,2.115,20,1.92,22,0.14,23,0.013,24,2.872,25,0.819,26,0.471,27,2.646,28,1.759,29,3.143,30,2.378,31,0.194,32,2.995,33,2.013,34,2.013,35,2.013,36,2.943,37,1.759,38,2.587,39,2.835,40,2.013,41,1.92,42,2.835,43,0.566,44,0.966,45,1.836,46,2.478,47,2.013,48,2.835,49,0.227,50,1.968,51,2.835,52,2.115,53,2.115,54,2.013,55,1.212,56,0.886,57,2.115,58,2.115,59,1.836,60,2.504,61,2.013,62,2.013,63,2.115,64,2.115,65,3.151,66,2.661,67,3.427,68,2.052,69,1.968,70,1.611,71,1.698,72,2.041,73,2.231,74,2.231,75,1.759,76,2.995,77,1.92,78,1.449,79,0.906,80,1.759,81,1.449,82,1.92,83,1.759,84,2.013,85,0.966,86,1.836,87,0.849,88,1.503,89,2.013,90,2.013,91,2.115,92,0.154,93,1.714,94,2.231,95,1.836,96,2.231,97,1.92,98,2.231,99,1.92,100,2.115,101,2.835,102,4.089,103,2.115,104,2.115,105,2.115,106,1.302,107,1.361,108,2.19,109,1.92,110,2.587,111,1.759,112,2.478,113,2.115,114,2.478,115,2.115,116,2.835,117,1.92,118,2.835,119,2.705,120,2.013,121,1.759,122,2.285,123,1.92,124,1.031,125,0.966,126,2.989,127,1.406,128,1.449,129,1.031,130,1.031,131,1.92,132,0.849,133,1.503,134,1.92,135,2.231,136,1.759,137,1.759,138,2.013,139,1.175,140,1.622,141,1.622,142,1.92,143,1.561,144,2.115,145,2.115,146,0.111,147,1.92,148,2.013,149,1.561,150,0.006,151,0.008,152,0.006]],["title/dependencies.html",[2287,3.402,2288,4.292]],["body/dependencies.html",[23,0.013,28,2.997,150,0.009,151,0.011,152,0.009,1625,4.604,2288,5.529,2289,6.333,2290,8.436,2291,6.333,2292,6.333,2293,6.333,2294,7.385,2295,7.385,2296,6.333,2297,6.333,2298,6.333,2299,6.333,2300,6.333,2301,6.333,2302,6.333,2303,6.333,2304,6.333]],["title/miscellaneous/enumerations.html",[2305,2.163,2306,4.292]],["body/miscellaneous/enumerations.html",[6,0.132,10,0.091,22,0.113,23,0.013,50,2.522,70,1.794,107,1.404,132,1.532,150,0.008,151,0.01,152,0.008,163,1.923,182,3.314,185,2.522,259,4.265,435,4.714,436,5.857,443,4.878,446,4.714,447,4.714,477,4.878,693,3.818,699,4.026,704,4.026,706,4.026,835,4.878,844,4.878,851,4.714,1314,3.073,1323,3.632,1325,3.632,1447,3.466,1653,3.657,1654,4.543,1767,3.926,1768,4.878,1777,5.297,1789,4.543,1790,4.878,1793,5.297,1795,5.297,2305,3.433,2306,4.714,2307,5.4,2308,6.709,2309,4.263,2310,4.263,2311,6.709,2312,5.297,2313,4.714,2314,6.709,2315,4.263,2316,5.4,2317,5.4,2318,5.4,2319,5.4,2320,4.263,2321,4.714,2322,6.709,2323,6.709,2324,6.709,2325,6.709,2326,6.709]],["title/miscellaneous/functions.html",[382,2.95,2305,2.163]],["body/miscellaneous/functions.html",[6,0.129,9,1.153,10,0.077,12,0.254,17,2.116,22,0.114,23,0.013,49,0.218,70,1.399,89,2.48,92,0.17,125,1.191,138,3.27,146,0.254,150,0.007,151,0.009,152,0.007,157,1.926,163,1.731,172,1.224,334,2.263,382,2.749,648,2.749,813,4,863,5.898,868,4,869,5.272,870,5.898,872,4,876,4,883,4,885,4,907,3.839,986,3.617,1616,4,1631,4,1637,5.272,1653,3.102,1654,4.089,1667,3.617,1683,4.089,1687,4.767,1701,3.617,1789,3.102,2305,2.912,2309,4.767,2310,3.617,2312,6.555,2315,3.617,2320,3.617,2327,6.038,2328,4.581,2329,6.038,2330,6.038,2331,6.038,2332,6.038,2333,6.038,2334,6.038,2335,6.038,2336,4.581,2337,6.038,2338,6.038,2339,7.463,2340,6.038,2341,6.038,2342,6.038,2343,6.038,2344,6.038,2345,6.038,2346,6.038,2347,6.038,2348,6.755,2349,4.581,2350,4.581,2351,4.581,2352,4,2353,4.581,2354,4.581,2355,4.581,2356,6.691,2357,6.038,2358,4.581,2359,4.581,2360,4,2361,4.581,2362,4.581,2363,4.581,2364,4.581,2365,4.581,2366,4.581,2367,4.581,2368,6.038,2369,6.038,2370,4.581,2371,4.581,2372,4.581,2373,4.581,2374,4.581,2375,6.038,2376,4.581,2377,4.581,2378,4.581]],["title/index.html",[10,0.057,2379,2.971,2380,2.971]],["body/index.html",[4,0.097,23,0.013,26,0.698,31,0.15,36,2.211,37,1.976,40,2.26,46,3.051,77,3.854,79,1.383,88,1.688,91,2.376,92,0.084,108,2.21,111,3.423,125,1.085,148,3.072,150,0.006,151,0.008,152,0.006,159,0.505,243,2.062,449,3.035,584,3.035,693,2.376,714,1.688,716,2.931,770,2.803,772,3.035,777,4.246,807,2.376,867,1.413,880,4.48,934,4.954,1065,2.827,1316,3.33,1323,3.072,1325,3.072,1383,2.654,1447,3.33,1613,4.48,1614,4.126,1618,4.126,1624,6.039,1625,4.687,1633,4.954,1656,4.954,1684,4.684,1747,3.296,1967,6.473,2032,7.071,2381,7.875,2382,4.175,2383,4.175,2384,4.175,2385,4.175,2386,4.175,2387,4.175,2388,4.175,2389,5.674,2390,6.917,2391,4.175,2392,4.175,2393,6.917,2394,4.175,2395,4.175,2396,4.175,2397,5.674,2398,4.175,2399,6.039,2400,4.175,2401,5.674,2402,4.175,2403,4.175,2404,4.175,2405,5.674,2406,4.175,2407,6.039,2408,5.674,2409,4.175,2410,4.175,2411,4.175,2412,4.175,2413,4.175,2414,4.175,2415,4.175,2416,4.175,2417,4.175,2418,5.674,2419,4.175,2420,4.175,2421,4.175,2422,4.175,2423,4.175,2424,4.175,2425,7.963,2426,4.175,2427,6.446,2428,5.674,2429,7.234,2430,6.917,2431,4.175,2432,4.175,2433,4.175,2434,4.175,2435,4.175,2436,4.175,2437,4.175,2438,4.175,2439,4.175,2440,4.175,2441,4.175,2442,5.674,2443,4.175,2444,5.674,2445,4.175,2446,5.674,2447,5.674,2448,5.674,2449,4.175,2450,5.674,2451,4.175,2452,4.175,2453,4.175,2454,4.175,2455,4.175,2456,4.175,2457,4.175,2458,4.175,2459,6.446,2460,4.175,2461,5.674,2462,4.175,2463,4.175,2464,4.175,2465,4.175,2466,4.175,2467,4.175,2468,4.175,2469,5.674,2470,4.175,2471,5.674,2472,4.175,2473,4.175,2474,4.175,2475,4.175,2476,4.175,2477,4.175,2478,4.175,2479,4.175,2480,4.175,2481,4.175,2482,4.175,2483,4.175,2484,4.175,2485,4.175,2486,5.674,2487,5.674,2488,4.175,2489,4.175,2490,4.175,2491,4.175,2492,4.175]],["title/license.html",[2379,2.971,2380,2.971,2493,2.971]],["body/license.html",[23,0.01,150,0.009,151,0.01,152,0.009,185,2.199,814,5.107,1361,5.497,2119,5.107,2126,5.107,2399,5.107,2407,6.151,2493,5.107,2494,5.85,2495,7.561,2496,5.85,2497,5.85,2498,5.85,2499,5.85,2500,7.045,2501,5.85,2502,5.85,2503,5.85,2504,5.85,2505,5.85,2506,5.85,2507,7.045,2508,8.377,2509,5.85,2510,5.85,2511,5.85,2512,5.85,2513,7.045,2514,5.85,2515,5.85,2516,5.85,2517,5.85,2518,5.85,2519,5.85,2520,5.85,2521,5.85,2522,7.045,2523,5.85,2524,5.85,2525,5.85,2526,5.85,2527,5.85,2528,5.85,2529,7.045,2530,7.045,2531,5.85,2532,5.85,2533,5.85,2534,5.85,2535,5.85,2536,5.85,2537,5.85,2538,5.85,2539,5.85,2540,5.85,2541,5.85,2542,5.85,2543,5.85,2544,5.85,2545,5.85,2546,5.85,2547,5.85,2548,5.85,2549,5.85,2550,5.85,2551,5.85,2552,5.85,2553,5.85,2554,5.85,2555,5.85,2556,5.85,2557,5.85,2558,5.85,2559,5.85,2560,5.85]],["title/modules.html",[1615,4.413]],["body/modules.html",[23,0.011,150,0.01,151,0.011,152,0.01,1614,4.881,1615,5.3,2561,6.713]],["title/overview.html",[2562,4.88]],["body/overview.html",[2,3.434,23,0.011,150,0.01,151,0.011,152,0.01,161,0.411,867,2.251,880,5.249,1613,5.249,2152,5.804,2562,5.804,2563,6.648,2564,6.648]],["title/miscellaneous/typealiases.html",[2305,2.163,2565,4.916]],["body/miscellaneous/typealiases.html",[6,0.136,7,2.397,10,0.071,15,2.949,21,2.296,22,0.144,23,0.013,24,2.492,25,0.415,32,2.82,33,2.281,34,2.281,35,2.281,36,2.828,37,1.994,38,2.82,39,2.281,40,2.281,41,2.176,42,3.091,43,0.642,44,1.095,45,2.081,49,0.203,55,0.901,67,2.82,70,1.182,76,2.82,90,3.091,95,2.081,101,3.091,102,3.091,110,2.82,112,2.702,114,2.702,116,3.091,118,3.091,119,2.949,150,0.006,151,0.008,152,0.006,219,3.046,622,3.867,780,4.508,789,4.508,796,4.508,797,4.508,804,4.508,805,4.508,806,4.508,857,4.985,1276,4.151,1308,3.063,1317,4.151,1318,2.678,1319,4.151,1321,4.151,1322,3.867,1323,3.091,1325,3.091,1447,2.949,1653,2.853,1654,3.867,1660,4.508,1767,3.063,1768,4.151,1789,3.867,1790,4.151,1792,4.508,2305,2.678,2309,6.541,2310,3.326,2312,6.608,2313,3.678,2315,3.326,2320,3.326,2321,4.985,2352,4.985,2356,3.678,2360,4.985,2566,8.345,2567,4.213,2568,4.213,2569,6.477,2570,5.71,2571,6.943,2572,6.943,2573,5.71,2574,5.71,2575,5.71,2576,5.71,2577,6.943,2578,5.71,2579,5.71,2580,6.477,2581,5.71,2582,4.213,2583,5.71,2584,5.71,2585,5.71,2586,5.71,2587,5.71,2588,6.477,2589,6.943,2590,6.943,2591,5.71,2592,6.943,2593,5.71,2594,4.213,2595,4.213,2596,4.213,2597,4.213,2598,4.213,2599,5.71,2600,4.213,2601,4.213,2602,4.213,2603,4.213]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":563,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["0.11.4",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["07/schema",{"_index":1487,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["1",{"_index":867,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{},"overview.html":{}}}],["1.1.11",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2564,"title":{},"body":{"overview.html":{}}}],["12.0.4",{"_index":2290,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":880,"title":{},"body":{"classes/ODataBatchRequest.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":33,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["2.0.0",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":905,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["2019",{"_index":2496,"title":{},"body":{"license.html":{}}}],["3",{"_index":2480,"title":{},"body":{"index.html":{}}}],["3.0",{"_index":34,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["4",{"_index":2475,"title":{},"body":{"index.html":{}}}],["4.0",{"_index":35,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["6.6.0",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["88",{"_index":2563,"title":{},"body":{"overview.html":{}}}],["9a",{"_index":1394,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["_context",{"_index":615,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["_functions",{"_index":686,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["_options",{"_index":1968,"title":{},"body":{"classes/ODataResponse.html":{}}}],["_properties",{"_index":681,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["_segments",{"_index":1655,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["a.type",{"_index":1360,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["above",{"_index":2528,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":891,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["abstract",{"_index":221,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["acc",{"_index":1191,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["acc.every((c",{"_index":2123,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc.parameters",{"_index":2127,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc.params",{"_index":1703,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["acc.paths.push(path",{"_index":1702,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["accept",{"_index":13,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["accept.length",{"_index":1931,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push",{"_index":1929,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`odata.metadata=${this.api.options.accept?.metadata",{"_index":1926,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accessors",{"_index":618,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataCallable.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["action",{"_index":185,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["action.ts",{"_index":164,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["action.ts:1",{"_index":284,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:12",{"_index":171,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:14",{"_index":175,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:15",{"_index":177,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:16",{"_index":174,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:17",{"_index":173,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:18",{"_index":176,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:22",{"_index":291,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:24",{"_index":295,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:25",{"_index":293,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:26",{"_index":292,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:27",{"_index":294,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:3",{"_index":288,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:31",{"_index":187,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:33",{"_index":190,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:34",{"_index":188,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:35",{"_index":189,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:39",{"_index":341,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:4",{"_index":290,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:41",{"_index":343,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:42",{"_index":348,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:43",{"_index":344,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:44",{"_index":342,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:45",{"_index":345,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:46",{"_index":346,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:47",{"_index":347,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:5",{"_index":286,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:51",{"_index":367,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:53",{"_index":373,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:54",{"_index":369,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:55",{"_index":368,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:56",{"_index":370,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:57",{"_index":371,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:58",{"_index":372,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:6",{"_index":285,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:7",{"_index":287,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:8",{"_index":289,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["actionimport",{"_index":491,"title":{},"body":{"classes/Field.html":{}}}],["actionimports",{"_index":245,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["actions",{"_index":376,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["add",{"_index":1656,"title":{},"body":{"classes/ODataPathSegments.html":{},"index.html":{}}}],["add(name",{"_index":1662,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["addbody",{"_index":2327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addbody(options",{"_index":2350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["added",{"_index":2316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["additionalitems",{"_index":1414,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["addressinfo",{"_index":2460,"title":{},"body":{"index.html":{}}}],["aggregate",{"_index":2352,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["airport",{"_index":2435,"title":{},"body":{"index.html":{}}}],["airport.get().subscribe(console.log",{"_index":2465,"title":{},"body":{"index.html":{}}}],["airports",{"_index":2425,"title":{},"body":{"index.html":{}}}],["airports.entity(\"cyyz\").get({fetchpolicy",{"_index":2439,"title":{},"body":{"index.html":{}}}],["airports.get().subscribe(console.log",{"_index":2464,"title":{},"body":{"index.html":{}}}],["airports.query.filter().clear",{"_index":2455,"title":{},"body":{"index.html":{}}}],["airports.query.filter().push({location",{"_index":2449,"title":{},"body":{"index.html":{}}}],["airports.tojson",{"_index":2451,"title":{},"body":{"index.html":{}}}],["airportsservice",{"_index":2421,"title":{},"body":{"index.html":{}}}],["airportsservice.entities",{"_index":2426,"title":{},"body":{"index.html":{}}}],["alias",{"_index":107,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2356,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":949,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["and/or",{"_index":2520,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2381,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2289,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2291,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":636,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"modules/ODataModule.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["angular/compiler",{"_index":2292,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1625,"title":{},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":2293,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["angularodataentity",{"_index":2394,"title":{},"body":{"index.html":{}}}],["annot",{"_index":604,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["annot.type",{"_index":611,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["annotation",{"_index":301,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["annotation.ts",{"_index":192,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{}}}],["annotation.ts:1",{"_index":196,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:15",{"_index":209,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:16",{"_index":210,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:19",{"_index":414,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:2",{"_index":197,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:21",{"_index":419,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:22",{"_index":424,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:23",{"_index":416,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:24",{"_index":417,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:25",{"_index":415,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:26",{"_index":420,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:27",{"_index":418,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:28",{"_index":421,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:29",{"_index":422,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:30",{"_index":423,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:5",{"_index":212,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:7",{"_index":214,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:9",{"_index":213,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotationconfig",{"_index":102,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["annotationlist",{"_index":193,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["annotations",{"_index":108,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["annotations=${this.api.options.prefer?.includeannotations",{"_index":1943,"title":{},"body":{"classes/ODataRequest.html":{}}}],["annotationslist",{"_index":377,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["annots",{"_index":2032,"title":{},"body":{"classes/ODataResponse.html":{},"index.html":{}}}],["annots.data(payload",{"_index":2033,"title":{},"body":{"classes/ODataResponse.html":{}}}],["any)[f.name",{"_index":1452,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["any[]).map((v",{"_index":1376,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["api",{"_index":770,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"index.html":{}}}],["apiconfig",{"_index":90,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"modules/ODataModule.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apinameorentitytype",{"_index":773,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataServiceFactory.html":{}}}],["apioptions",{"_index":1,"title":{"interfaces/ApiOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["aports",{"_index":2434,"title":{},"body":{"index.html":{}}}],["app",{"_index":2411,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":2416,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":2414,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2417,"title":{},"body":{"index.html":{}}}],["application/json;${accept.join",{"_index":1933,"title":{},"body":{"classes/ODataRequest.html":{}}}],["application_http",{"_index":849,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["application_json",{"_index":839,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["appliesto",{"_index":207,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["appmodule",{"_index":2405,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2557,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1846,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.find((v",{"_index":1849,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.push(obj",{"_index":1850,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["array",{"_index":1318,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(config.keys",{"_index":1425,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["array.isarray(this.keys",{"_index":1461,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["array.isarray(value",{"_index":1162,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["arraybuffer",{"_index":1885,"title":{},"body":{"classes/ODataRequest.html":{}}}],["assertarray",{"_index":1831,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assertobject",{"_index":2251,"title":{},"body":{"classes/OptionHandler.html":{}}}],["assertobject(create",{"_index":1844,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assign",{"_index":2252,"title":{},"body":{"classes/OptionHandler.html":{}}}],["assign(values",{"_index":1864,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["associated",{"_index":2509,"title":{},"body":{"license.html":{}}}],["at(index",{"_index":1841,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attach",{"_index":1270,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["attach(value",{"_index":1272,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["attach>(value",{"_index":1295,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["attr",{"_index":588,"title":{},"body":{"classes/Field.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attr?.nodevalue",{"_index":591,"title":{},"body":{"classes/Field.html":{}}}],["attribute",{"_index":446,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["attribute_abstract",{"_index":531,"title":{},"body":{"classes/Field.html":{}}}],["attribute_action",{"_index":528,"title":{},"body":{"classes/Field.html":{}}}],["attribute_alias",{"_index":498,"title":{},"body":{"classes/Field.html":{}}}],["attribute_applies_to",{"_index":536,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_term",{"_index":535,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_type",{"_index":506,"title":{},"body":{"classes/Field.html":{}}}],["attribute_contains_target",{"_index":520,"title":{},"body":{"classes/Field.html":{}}}],["attribute_default_value",{"_index":515,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set",{"_index":529,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set_path",{"_index":522,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_type",{"_index":524,"title":{},"body":{"classes/Field.html":{}}}],["attribute_extends",{"_index":534,"title":{},"body":{"classes/Field.html":{}}}],["attribute_function",{"_index":527,"title":{},"body":{"classes/Field.html":{}}}],["attribute_has_stream",{"_index":519,"title":{},"body":{"classes/Field.html":{}}}],["attribute_include_in_service_document",{"_index":530,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_bound",{"_index":521,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_composable",{"_index":523,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_flags",{"_index":533,"title":{},"body":{"classes/Field.html":{}}}],["attribute_max_length",{"_index":510,"title":{},"body":{"classes/Field.html":{}}}],["attribute_name",{"_index":504,"title":{},"body":{"classes/Field.html":{}}}],["attribute_namespace",{"_index":499,"title":{},"body":{"classes/Field.html":{}}}],["attribute_nullable",{"_index":509,"title":{},"body":{"classes/Field.html":{}}}],["attribute_open_type",{"_index":507,"title":{},"body":{"classes/Field.html":{}}}],["attribute_partner",{"_index":516,"title":{},"body":{"classes/Field.html":{}}}],["attribute_path",{"_index":525,"title":{},"body":{"classes/Field.html":{}}}],["attribute_precision",{"_index":511,"title":{},"body":{"classes/Field.html":{}}}],["attribute_property",{"_index":517,"title":{},"body":{"classes/Field.html":{}}}],["attribute_qualifier",{"_index":501,"title":{},"body":{"classes/Field.html":{}}}],["attribute_referenced_property",{"_index":518,"title":{},"body":{"classes/Field.html":{}}}],["attribute_scale",{"_index":512,"title":{},"body":{"classes/Field.html":{}}}],["attribute_srid",{"_index":514,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target",{"_index":526,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target_namespace",{"_index":502,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term",{"_index":503,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term_namespace",{"_index":500,"title":{},"body":{"classes/Field.html":{}}}],["attribute_type",{"_index":508,"title":{},"body":{"classes/Field.html":{}}}],["attribute_underlying_type",{"_index":532,"title":{},"body":{"classes/Field.html":{}}}],["attribute_unicode",{"_index":513,"title":{},"body":{"classes/Field.html":{}}}],["attribute_uri",{"_index":497,"title":{},"body":{"classes/Field.html":{}}}],["attribute_value",{"_index":505,"title":{},"body":{"classes/Field.html":{}}}],["attribute_version",{"_index":496,"title":{},"body":{"classes/Field.html":{}}}],["attributes",{"_index":495,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["attributes(data",{"_index":626,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["attributes.getnameditem('version",{"_index":590,"title":{},"body":{"classes/Field.html":{}}}],["attrs",{"_index":1502,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["attrs[field.name",{"_index":1505,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["authors",{"_index":2547,"title":{},"body":{"license.html":{}}}],["average",{"_index":2325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backend",{"_index":1608,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backend.setitem(key",{"_index":1609,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backward",{"_index":1731,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["base",{"_index":136,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["base64",{"_index":1400,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["baseterm",{"_index":205,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["basetype",{"_index":222,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["basic",{"_index":2477,"title":{},"body":{"index.html":{}}}],["batch",{"_index":844,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["batch.request.method",{"_index":969,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batch_prefix",{"_index":843,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batchboundary",{"_index":926,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["beforeunload",{"_index":1607,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["binary",{"_index":851,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["binding",{"_index":268,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["binding.ts",{"_index":333,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:1",{"_index":336,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:2",{"_index":337,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["blob",{"_index":1886,"title":{},"body":{"classes/ODataRequest.html":{}}}],["body",{"_index":907,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/functions.html":{}}}],["bool",{"_index":103,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":144,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boundary",{"_index":881,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary.split('=')[1",{"_index":884,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix",{"_index":838,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix}${changesetboundary}${boundary_prefix_suffix",{"_index":971,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix}${this.batchboundary}${boundary_prefix_suffix",{"_index":983,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundarydelimiter",{"_index":883,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["boundarydelimiter.length",{"_index":886,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundaryend",{"_index":887,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["break",{"_index":1443,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["browse",{"_index":2561,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["buildaggregate",{"_index":2329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildaggregate(aggregate",{"_index":2351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildentry",{"_index":1006,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["buildentry(payload",{"_index":1021,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["builder",{"_index":1684,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["buildexpand",{"_index":2330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildexpand(expands",{"_index":2353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter",{"_index":2331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter(filters",{"_index":2355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby",{"_index":2332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby(groupby",{"_index":2359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby",{"_index":2333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby(orderby",{"_index":2361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildpathandquery",{"_index":1683,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["buildpathandquery(options",{"_index":1809,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["buildpathandquery(undefined",{"_index":2362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtransforms",{"_index":2334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtransforms(transforms",{"_index":2363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl",{"_index":2335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl(path",{"_index":2365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builtfilters",{"_index":2373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c",{"_index":2126,"title":{},"body":{"classes/ODataSchema.html":{},"license.html":{}}}],["c.istypeof(type",{"_index":1370,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["c.name",{"_index":2124,"title":{},"body":{"classes/ODataSchema.html":{}}}],["c.parameters",{"_index":2128,"title":{},"body":{"classes/ODataSchema.html":{}}}],["cache",{"_index":36,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cache_control",{"_index":1993,"title":{},"body":{"classes/ODataResponse.html":{}}}],["cacheability",{"_index":63,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["cachecacheability",{"_index":42,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["cachecontrol",{"_index":2024,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["cachecontrol.split(',').foreach((directive",{"_index":2074,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["cached",{"_index":1077,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["california",{"_index":2450,"title":{},"body":{"index.html":{}}}],["callable",{"_index":1175,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{}}}],["callable.configure",{"_index":2150,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callable_binding_parameter",{"_index":1157,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["callableconfig",{"_index":114,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callableconfigs",{"_index":2120,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.map",{"_index":2130,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.reduce",{"_index":2122,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callables",{"_index":113,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["callaction",{"_index":767,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["callaction(params",{"_index":776,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["callfunction",{"_index":768,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["callfunction(params",{"_index":787,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["case",{"_index":917,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponseOptions.html":{}}}],["catch",{"_index":578,"title":{},"body":{"classes/Field.html":{}}}],["caught",{"_index":98,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ch",{"_index":1440,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["ch.findchildparser(predicate",{"_index":1442,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["changed",{"_index":2318,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changeset",{"_index":967,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changeset_prefix",{"_index":852,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetboundary",{"_index":965,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetendline",{"_index":994,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetid",{"_index":966,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetresponses",{"_index":992,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["channel",{"_index":915,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["charge",{"_index":2504,"title":{},"body":{"license.html":{}}}],["check",{"_index":584,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["checkversion(document",{"_index":583,"title":{},"body":{"classes/Field.html":{}}}],["childparser",{"_index":1444,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["childparser((c",{"_index":1369,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["childparser(predicate",{"_index":2237,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["children",{"_index":597,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["chunk[0].split",{"_index":998,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["chunks",{"_index":985,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["city",{"_index":2444,"title":{},"body":{"index.html":{}}}],["claim",{"_index":2550,"title":{},"body":{"license.html":{}}}],["class",{"_index":159,"title":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["classes",{"_index":161,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"overview.html":{}}}],["clear",{"_index":1769,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["clearkey",{"_index":1757,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["clearparameters",{"_index":1762,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["client",{"_index":775,"title":{},"body":{"classes/ODataBaseService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{}}}],["clone",{"_index":616,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["close",{"_index":968,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["code",{"_index":903,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["collection",{"_index":126,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["collectionoperator",{"_index":2368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete.html#_toc406398229",{"_index":739,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["complete.html#_toc406398230",{"_index":740,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["complete.html#_toc406398236",{"_index":743,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["complete.html#_toc406398237",{"_index":744,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["complete.html#_toc406398238",{"_index":741,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["complete.html#_toc406398240",{"_index":742,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["complextype",{"_index":470,"title":{},"body":{"classes/Field.html":{}}}],["complextypes",{"_index":378,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["compodoc",{"_index":2485,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":2408,"title":{},"body":{"index.html":{}}}],["composable",{"_index":145,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["computed",{"_index":1312,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["computed?.bool",{"_index":1362,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["conditions",{"_index":2527,"title":{},"body":{"license.html":{}}}],["config",{"_index":714,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"index.html":{}}}],["config.accept",{"_index":759,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.alias",{"_index":2112,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.annotations",{"_index":1265,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["config.base",{"_index":1422,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["config.bound",{"_index":1122,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.callables",{"_index":2121,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.collection",{"_index":2207,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.composable",{"_index":1124,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.configure",{"_index":2148,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.containers",{"_index":2133,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entities",{"_index":2117,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entitysetpath",{"_index":1120,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.entitysets",{"_index":1263,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["config.entitytype",{"_index":1303,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["config.enums",{"_index":2114,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.etag",{"_index":763,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.fetchpolicy",{"_index":757,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.fields",{"_index":1431,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["config.flags",{"_index":1542,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["config.headers",{"_index":751,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.keys.map((key",{"_index":1427,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["config.members",{"_index":1531,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["config.model",{"_index":2201,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.name",{"_index":1118,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["config.namespace",{"_index":2111,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.open",{"_index":1424,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["config.params",{"_index":749,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.prefer",{"_index":761,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.return",{"_index":1179,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["config.service",{"_index":1305,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["config.stringasenum",{"_index":747,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.stripmetadata",{"_index":755,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.version",{"_index":745,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.withcredentials",{"_index":753,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["configs",{"_index":89,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"modules/ODataModule.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":1093,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["configure(undefined",{"_index":1103,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["connection",{"_index":2559,"title":{},"body":{"license.html":{}}}],["console.log(\"airport",{"_index":2441,"title":{},"body":{"index.html":{}}}],["console.log(\"airports",{"_index":2430,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":2433,"title":{},"body":{"index.html":{}}}],["console.log(\"people",{"_index":2462,"title":{},"body":{"index.html":{}}}],["console.log(json",{"_index":2452,"title":{},"body":{"index.html":{}}}],["console.log(query",{"_index":2454,"title":{},"body":{"index.html":{}}}],["const",{"_index":79,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["constants",{"_index":445,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["constructor",{"_index":167,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{}}}],["constructor(action",{"_index":338,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["constructor(annot",{"_index":602,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["constructor(annotationlist",{"_index":194,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["constructor(api",{"_index":927,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["constructor(client",{"_index":771,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataServiceFactory.html":{}}}],["constructor(config",{"_index":712,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["constructor(init",{"_index":1872,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["constructor(name",{"_index":168,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{}}}],["constructor(namespace",{"_index":298,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlSchema.html":{}}}],["constructor(o",{"_index":2255,"title":{},"body":{"classes/OptionHandler.html":{}}}],["constructor(options",{"_index":1772,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["constructor(path",{"_index":335,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["constructor(private",{"_index":1747,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor(property",{"_index":363,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["constructor(propertyrefs",{"_index":313,"title":{},"body":{"classes/CsdlKey.html":{}}}],["constructor(protected",{"_index":2161,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["constructor(public",{"_index":198,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["constructor(request",{"_index":819,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["constructor(segment",{"_index":2276,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["constructor(segments",{"_index":1659,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["constructor(target",{"_index":211,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["constructor(term",{"_index":208,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["constructor(termnamespace",{"_index":308,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["constructor(type",{"_index":366,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["constructor(undefined",{"_index":620,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataReferential.html":{}}}],["constructor(uri",{"_index":358,"title":{},"body":{"classes/CsdlReference.html":{}}}],["constructor(xml",{"_index":538,"title":{},"body":{"classes/Field.html":{}}}],["container",{"_index":399,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{}}}],["container.entitysets",{"_index":2138,"title":{},"body":{"classes/ODataSchema.html":{}}}],["container.ts",{"_index":244,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:10",{"_index":257,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:11",{"_index":255,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:12",{"_index":252,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:22",{"_index":1261,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:26",{"_index":1259,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:5",{"_index":251,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:7",{"_index":256,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:8",{"_index":254,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:9",{"_index":253,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["containers",{"_index":115,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["containstarget",{"_index":318,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["content",{"_index":826,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content.join(newline",{"_index":920,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_id",{"_index":850,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_transfer_encoding",{"_index":848,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_type",{"_index":841,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["contentid",{"_index":993,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contents",{"_index":2396,"title":{},"body":{"index.html":{}}}],["contenttype",{"_index":986,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["contenttype.indexof(application_json",{"_index":2014,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split",{"_index":878,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttype.split(';')[1].trim",{"_index":882,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttypeparts",{"_index":877,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttypeparts.length",{"_index":879,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["context",{"_index":619,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["continueonerror",{"_index":58,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["contract",{"_index":2554,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2522,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2507,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2495,"title":{},"body":{"license.html":{}}}],["count",{"_index":693,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["countdistinct",{"_index":2326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countryregion",{"_index":2445,"title":{},"body":{"index.html":{}}}],["create",{"_index":1351,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["createsettings",{"_index":1637,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["createsettings(configs",{"_index":1631,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":2384,"title":{},"body":{"index.html":{}}}],["creation",{"_index":94,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["csdl",{"_index":234,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdl/csdl",{"_index":439,"title":{},"body":{"classes/Field.html":{}}}],["csdlaction",{"_index":160,"title":{"classes/CsdlAction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlactionimport",{"_index":184,"title":{"classes/CsdlActionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlannotable",{"_index":191,"title":{"classes/CsdlAnnotable.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotable:2",{"_index":216,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotation",{"_index":195,"title":{"classes/CsdlAnnotation.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["csdlannotations",{"_index":199,"title":{"classes/CsdlAnnotations.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdlcomplextype",{"_index":217,"title":{"classes/CsdlComplexType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlentitycontainer",{"_index":242,"title":{"classes/CsdlEntityContainer.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlentityset",{"_index":249,"title":{"classes/CsdlEntitySet.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["csdlentitytype",{"_index":237,"title":{"classes/CsdlEntityType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlenummember",{"_index":272,"title":{"classes/CsdlEnumMember.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["csdlenumtype",{"_index":276,"title":{"classes/CsdlEnumType.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunction",{"_index":178,"title":{"classes/CsdlFunction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunctionimport",{"_index":180,"title":{"classes/CsdlFunctionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlinclude",{"_index":296,"title":{"classes/CsdlInclude.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlincludeannotations",{"_index":305,"title":{"classes/CsdlIncludeAnnotations.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlkey",{"_index":238,"title":{"classes/CsdlKey.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationproperty",{"_index":226,"title":{"classes/CsdlNavigationProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationpropertybinding",{"_index":262,"title":{"classes/CsdlNavigationPropertyBinding.html":{}},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlondelete",{"_index":323,"title":{"classes/CsdlOnDelete.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlparameter",{"_index":170,"title":{"classes/CsdlParameter.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlproperty",{"_index":225,"title":{"classes/CsdlProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlpropertyref",{"_index":241,"title":{"classes/CsdlPropertyRef.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlreference",{"_index":302,"title":{"classes/CsdlReference.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlreferentialconstraint",{"_index":322,"title":{"classes/CsdlReferentialConstraint.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlreturntype",{"_index":169,"title":{"classes/CsdlReturnType.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlschema",{"_index":374,"title":{"classes/CsdlSchema.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlsingleton",{"_index":250,"title":{"classes/CsdlSingleton.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlstructuralproperty",{"_index":317,"title":{"classes/CsdlStructuralProperty.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["csdlstructuralproperty:3",{"_index":329,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:4",{"_index":331,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:5",{"_index":330,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuredtype",{"_index":220,"title":{"classes/CsdlStructuredType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["csdlstructuredtype:10",{"_index":231,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:11",{"_index":229,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:12",{"_index":232,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:13",{"_index":228,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:8",{"_index":230,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:9",{"_index":233,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlterm",{"_index":204,"title":{"classes/CsdlTerm.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdltypedefinition",{"_index":385,"title":{"classes/CsdlTypeDefinition.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["current",{"_index":939,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["custom",{"_index":1324,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["customheaders",{"_index":1917,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[accept",{"_index":1932,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_match_header",{"_index":1921,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_none_match_header",{"_index":1924,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[prefer",{"_index":1948,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customizations",{"_index":2482,"title":{},"body":{"index.html":{}}}],["customparams",{"_index":1952,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customparams['$expand",{"_index":1955,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customparams['$select",{"_index":1953,"title":{},"body":{"classes/ODataRequest.html":{}}}],["damages",{"_index":2551,"title":{},"body":{"license.html":{}}}],["data",{"_index":617,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["data(data",{"_index":629,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["dataservices",{"_index":559,"title":{},"body":{"classes/Field.html":{}}}],["date",{"_index":95,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["date.now",{"_index":865,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["dates",{"_index":1685,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate",{"_index":1726,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(this.options",{"_index":1810,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["deal",{"_index":2511,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2560,"title":{},"body":{"license.html":{}}}],["deep",{"_index":2481,"title":{},"body":{"index.html":{}}}],["def",{"_index":1855,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["default",{"_index":93,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["default_fetch_policy",{"_index":729,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["default_strip_metadata",{"_index":730,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["default_timeout",{"_index":1053,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["default_version",{"_index":637,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponseOptions.html":{}}}],["defaults",{"_index":1476,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["defaultvalue",{"_index":206,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["defined",{"_index":155,"title":{},"body":{"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["definition",{"_index":398,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["definition.ts",{"_index":425,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:10",{"_index":434,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:11",{"_index":432,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:3",{"_index":427,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:5",{"_index":429,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:6",{"_index":433,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:7",{"_index":428,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:8",{"_index":430,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:9",{"_index":431,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["delete",{"_index":980,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["delete'].indexof(req.method",{"_index":1074,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["delete'].indexof(this.method",{"_index":1920,"title":{},"body":{"classes/ODataRequest.html":{}}}],["deleting",{"_index":2386,"title":{},"body":{"index.html":{}}}],["delivered",{"_index":914,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["deltalink",{"_index":697,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["demo",{"_index":2391,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":2288,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":1638,"title":{},"body":{"modules/ODataModule.html":{}}}],["description",{"_index":1966,"title":{},"body":{"classes/ODataResponse.html":{}}}],["deserialize",{"_index":69,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["deserialize(type",{"_index":1975,"title":{},"body":{"classes/ODataResponse.html":{}}}],["deserialize(value",{"_index":1105,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Parser.html":{}}}],["diego",{"_index":2497,"title":{},"body":{"license.html":{}}}],["directive",{"_index":2081,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directive.startswith(max_age",{"_index":2075,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["distribute",{"_index":2518,"title":{},"body":{"license.html":{}}}],["document",{"_index":541,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement",{"_index":552,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.attributes",{"_index":549,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.getelementsbytagname",{"_index":561,"title":{},"body":{"classes/Field.html":{}}}],["documentation",{"_index":2399,"title":{},"body":{"index.html":{},"license.html":{}}}],["domparser",{"_index":540,"title":{},"body":{"classes/Field.html":{}}}],["down",{"_index":1838,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["duration",{"_index":2321,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dynamic",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1517,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["e.istypeof(type",{"_index":2140,"title":{},"body":{"classes/ODataSchema.html":{}}}],["editlink",{"_index":673,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["edm.binary",{"_index":1389,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.boolean'].indexof(this.type",{"_index":1411,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.byte",{"_index":1405,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.date",{"_index":1385,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.datetimeoffset",{"_index":1387,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.decimal",{"_index":1409,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.double'].indexof(this.type",{"_index":1410,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.guid",{"_index":1388,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.int16",{"_index":1404,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.int32",{"_index":1403,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.int64",{"_index":1402,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.sbyte'].indexof",{"_index":1406,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.string",{"_index":1384,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.timeofday",{"_index":1386,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edmx:dataservices",{"_index":455,"title":{},"body":{"classes/Field.html":{}}}],["edmx:edmx",{"_index":453,"title":{},"body":{"classes/Field.html":{}}}],["edmx:include",{"_index":459,"title":{},"body":{"classes/Field.html":{}}}],["edmx:includeannotations",{"_index":461,"title":{},"body":{"classes/Field.html":{}}}],["edmx:reference",{"_index":457,"title":{},"body":{"classes/Field.html":{}}}],["element",{"_index":560,"title":{},"body":{"classes/Field.html":{}}}],["empty",{"_index":1827,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["encode",{"_index":81,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["encode(params",{"_index":1152,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["encode(value",{"_index":78,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["encodes",{"_index":73,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["endline",{"_index":988,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["endregion",{"_index":149,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entities",{"_index":111,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entity",{"_index":243,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["entity(\"cyyz",{"_index":2436,"title":{},"body":{"index.html":{}}}],["entity(key",{"_index":1275,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["entitycontainer",{"_index":379,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["entitycontainerconfig",{"_index":116,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityContainer.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entityid",{"_index":652,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["entitykey",{"_index":1276,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["entityset",{"_index":182,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["entityset(path",{"_index":2155,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["entitysetconfig",{"_index":118,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitysetpath",{"_index":143,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitysets",{"_index":117,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitytype",{"_index":147,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitytypes",{"_index":380,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["entries",{"_index":1004,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry",{"_index":1040,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry.lastread",{"_index":1070,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["entry.pattern",{"_index":1071,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["entry.payload",{"_index":1064,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["enu.configure",{"_index":2146,"title":{},"body":{"classes/ODataSchema.html":{}}}],["enum",{"_index":273,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["enumerations",{"_index":2306,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":109,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enums.toname(this.members",{"_index":1553,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enums.tonames(this.members",{"_index":1548,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enums.tovalue(this.members",{"_index":1547,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enums.tovalues(this.members",{"_index":1545,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumtype",{"_index":467,"title":{},"body":{"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["enumtypeconfig",{"_index":110,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["enumtypefieldconfig",{"_index":119,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["enumtypes",{"_index":381,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["errata02",{"_index":735,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["error",{"_index":97,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["error(\"batch",{"_index":948,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["error('batch",{"_index":944,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["error('field",{"_index":1171,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["error('odata",{"_index":586,"title":{},"body":{"classes/Field.html":{}}}],["error('unable",{"_index":580,"title":{},"body":{"classes/Field.html":{}}}],["error(`no",{"_index":1745,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["errorhandler",{"_index":96,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["errors",{"_index":1353,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["errors.push(`maxlength",{"_index":1365,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["errors.push(`required",{"_index":1363,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["errors[field.name",{"_index":1508,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["errs",{"_index":1506,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["escapeillegalchars",{"_index":2337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapeillegalchars(string",{"_index":2366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etag",{"_index":14,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["etag_headers",{"_index":638,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["event",{"_index":2546,"title":{},"body":{"license.html":{}}}],["events",{"_index":947,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["examples",{"_index":2392,"title":{},"body":{"index.html":{}}}],["expand",{"_index":1325,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["expandobject",{"_index":2569,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expandoptions",{"_index":2570,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expands",{"_index":2354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandtype",{"_index":2571,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expired",{"_index":1066,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["export",{"_index":31,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["express",{"_index":2537,"title":{},"body":{"license.html":{}}}],["extend",{"_index":246,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["extends",{"_index":8,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["f",{"_index":1448,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.configure",{"_index":1458,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.default",{"_index":1479,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.deserialize(value[f.name",{"_index":1450,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.isstructuredtype",{"_index":1480,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.name",{"_index":1435,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.navigation",{"_index":1489,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.nullable).map((f",{"_index":1501,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.serialize((value",{"_index":1453,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.structured().defaults",{"_index":1482,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.tojsonschema(expand",{"_index":1495,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.value",{"_index":1534,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["f]{12",{"_index":1398,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f]{12}$/.test",{"_index":1697,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{4",{"_index":1397,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["f]{8",{"_index":1396,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["fa",{"_index":1395,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["factory",{"_index":934,"title":{},"body":{"classes/ODataBatchRequest.html":{},"index.html":{}}}],["factory(api",{"_index":935,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["false",{"_index":717,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["features",{"_index":2015,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["features.split(';').foreach((o",{"_index":2062,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["fetch",{"_index":2427,"title":{},"body":{"index.html":{}}}],["fetchall",{"_index":2431,"title":{},"body":{"index.html":{}}}],["fetchnavigationproperty",{"_index":769,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["fetchnavigationproperty(resource",{"_index":795,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["fetchpolicy",{"_index":15,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":66,"title":{"classes/Field.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["field(odatametadata.attribute_alias",{"_index":568,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_namespace",{"_index":567,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_uri",{"_index":554,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_version",{"_index":547,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_action",{"_index":573,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotation",{"_index":558,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotations",{"_index":577,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_complex_type",{"_index":570,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_container",{"_index":574,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_type",{"_index":571,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_enum_type",{"_index":569,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_function",{"_index":572,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include",{"_index":555,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include_annotations",{"_index":557,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_term",{"_index":576,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_type_definition",{"_index":575,"title":{},"body":{"classes/Field.html":{}}}],["field.annotations",{"_index":1332,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.collection",{"_index":1341,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.default",{"_index":1337,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.encode(v",{"_index":1473,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.isstructuredtype",{"_index":1468,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.maxlength",{"_index":1339,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.name",{"_index":1471,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.navigation",{"_index":1345,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.nullable",{"_index":1343,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.precision",{"_index":1347,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.referentials",{"_index":1334,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.scale",{"_index":1349,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.structured",{"_index":1469,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.type",{"_index":1331,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.validate(value",{"_index":1507,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.value",{"_index":1540,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["fieldnames",{"_index":595,"title":{},"body":{"classes/Field.html":{}}}],["fields",{"_index":122,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fields(undefined",{"_index":2180,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["fields.filter((f",{"_index":1500,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["fields.reduce((acc",{"_index":1481,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["fieldtype",{"_index":436,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtype.attribute",{"_index":548,"title":{},"body":{"classes/Field.html":{}}}],["fieldtype.tag",{"_index":556,"title":{},"body":{"classes/Field.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["files",{"_index":2510,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1447,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filter((c",{"_index":2125,"title":{},"body":{"classes/ODataSchema.html":{}}}],["filter((k",{"_index":1821,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["filter((key",{"_index":1806,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["filter((p",{"_index":1187,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["filter((t",{"_index":1711,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["filter({location",{"_index":2443,"title":{},"body":{"index.html":{}}}],["filters",{"_index":2358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filtertype",{"_index":2572,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["finally",{"_index":955,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["find",{"_index":1657,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/SegmentHandler.html":{}}}],["find((p",{"_index":2017,"title":{},"body":{"classes/ODataResponse.html":{}}}],["find(predicate",{"_index":1666,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["findannotation",{"_index":1256,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["findannotation(predicate",{"_index":1258,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["findcallablefortype",{"_index":2083,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findcallablefortype(type",{"_index":2099,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findchildparser",{"_index":1438,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["findchildparser(predicate",{"_index":2243,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["findentitysetfortype",{"_index":2084,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findentitysetfortype(type",{"_index":2101,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findenumtypefortype",{"_index":2085,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findenumtypefortype(type",{"_index":2103,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findfieldbyname",{"_index":1511,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyname(name",{"_index":1521,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue",{"_index":1512,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue(value",{"_index":1522,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findoptionsfortype",{"_index":2144,"title":{},"body":{"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["findstructuredtypefortype",{"_index":2086,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findstructuredtypefortype(type",{"_index":2105,"title":{},"body":{"classes/ODataSchema.html":{}}}],["first",{"_index":37,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fitness",{"_index":2542,"title":{},"body":{"license.html":{}}}],["flags",{"_index":120,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fluent",{"_index":2382,"title":{},"body":{"index.html":{}}}],["flush",{"_index":1007,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["following",{"_index":2526,"title":{},"body":{"license.html":{}}}],["forget",{"_index":1008,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["forget(undefined",{"_index":1025,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["format",{"_index":1795,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["forroot",{"_index":1619,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(configs",{"_index":1620,"title":{},"body":{"modules/ODataModule.html":{}}}],["found",{"_index":1746,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["free",{"_index":2503,"title":{},"body":{"license.html":{}}}],["friends",{"_index":2459,"title":{},"body":{"index.html":{}}}],["fromhttpresponse",{"_index":1969,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromhttpresponse(req",{"_index":1980,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson",{"_index":1970,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson(req",{"_index":1982,"title":{},"body":{"classes/ODataResponse.html":{}}}],["full",{"_index":40,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["func",{"_index":938,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["func(this",{"_index":954,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["function",{"_index":163,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["function(name",{"_index":689,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["function(undefined",{"_index":2376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functionimport",{"_index":489,"title":{},"body":{"classes/Field.html":{}}}],["functionimports",{"_index":247,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["functionname",{"_index":181,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["functions",{"_index":382,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2525,"title":{},"body":{"license.html":{}}}],["generated",{"_index":2469,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2390,"title":{},"body":{"index.html":{}}}],["get'].indexof(req.method",{"_index":1073,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["get'].indexof(this.method",{"_index":1923,"title":{},"body":{"classes/ODataRequest.html":{}}}],["get(key",{"_index":86,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["get(name",{"_index":1669,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["get(path",{"_index":1854,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["get({withcount",{"_index":2428,"title":{},"body":{"index.html":{}}}],["getapi",{"_index":802,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["getboundarydelimiter",{"_index":2338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundarydelimiter(contenttype",{"_index":876,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["getboundaryend",{"_index":2340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundaryend(batchboundary",{"_index":989,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["getboundaryend(boundarydelimiter",{"_index":885,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["getcontext",{"_index":633,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["getcount",{"_index":1213,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getdeltalink",{"_index":1217,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["geteditlink",{"_index":1243,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getentitysets",{"_index":2109,"title":{},"body":{"classes/ODataSchema.html":{}}}],["getetag",{"_index":1236,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getfunctions",{"_index":1225,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{}}}],["getheadervalue",{"_index":2341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getheadervalue(header",{"_index":872,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["gethelper",{"_index":631,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["getid",{"_index":1234,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediacontenttype",{"_index":1249,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediaeditlink",{"_index":1247,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediaetag",{"_index":1238,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediareadlink",{"_index":1245,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmetadataetag",{"_index":1240,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getname",{"_index":2271,"title":{},"body":{"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["getnextlink",{"_index":1215,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getobjects",{"_index":593,"title":{},"body":{"classes/Field.html":{}}}],["getoptions",{"_index":1989,"title":{},"body":{"classes/ODataResponse.html":{}}}],["getpathwithparams",{"_index":1889,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getproperties",{"_index":1251,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getreadlink",{"_index":1211,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{}}}],["getresponse",{"_index":1009,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["getresponse(req",{"_index":1028,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["getskip",{"_index":1221,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getskiptoken",{"_index":1223,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getstringcollectionclause",{"_index":2342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstringcollectionclause(lambdaparameter",{"_index":2367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstructuredtypeschema",{"_index":1291,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["getting",{"_index":2379,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettop",{"_index":1219,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["gettype",{"_index":1209,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["geturl",{"_index":1891,"title":{},"body":{"classes/ODataRequest.html":{}}}],["geturlwithparams",{"_index":1893,"title":{},"body":{"classes/ODataRequest.html":{}}}],["glast",{"_index":862,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["granted",{"_index":2502,"title":{},"body":{"license.html":{}}}],["groupby",{"_index":2360,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guid",{"_index":1696,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["haaster",{"_index":2499,"title":{},"body":{"license.html":{}}}],["hack",{"_index":1695,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["handle",{"_index":1978,"title":{},"body":{"classes/ODataResponse.html":{}}}],["handlefetch",{"_index":1010,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlefetch(req",{"_index":1030,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlemutate",{"_index":1011,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlemutate(req",{"_index":1032,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handler",{"_index":1812,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["handlerequest",{"_index":1012,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlerequest(req",{"_index":1034,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handleresponse(response",{"_index":984,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["handlevalue",{"_index":2343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlevalue(value",{"_index":2371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["has(name",{"_index":1776,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["has(path",{"_index":1862,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hashmap",{"_index":1843,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["haskey",{"_index":1755,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["hasparameters",{"_index":1760,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["hasreferentials",{"_index":1418,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["hasstream",{"_index":239,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["header",{"_index":648,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["header.split(';')[0].trim",{"_index":874,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["headers",{"_index":16,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["headers.get(header",{"_index":650,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["headers.getall(key",{"_index":900,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["helper",{"_index":30,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["here",{"_index":2487,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2501,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2548,"title":{},"body":{"license.html":{}}}],["htmlcollection",{"_index":598,"title":{},"body":{"classes/Field.html":{}}}],["http",{"_index":641,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["http.mergehttpheaders",{"_index":1949,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.mergehttpheaders((options",{"_index":956,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["http.mergehttpparams",{"_index":1958,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.resolveheaderkey(headers",{"_index":649,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["http.resolveheaderkey(this.headers",{"_index":2020,"title":{},"body":{"classes/ODataResponse.html":{}}}],["http11",{"_index":840,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["http://docs.oasis",{"_index":731,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["http://json",{"_index":1485,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["httpactionoptions",{"_index":780,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"miscellaneous/typealiases.html":{}}}],["httpclientmodule",{"_index":1623,"title":{},"body":{"modules/ODataModule.html":{}}}],["httpentitiesoptions",{"_index":2573,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httpentityoptions",{"_index":2574,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httperrorresponse",{"_index":830,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["httpfunctionoptions",{"_index":789,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"miscellaneous/typealiases.html":{}}}],["httpheaders",{"_index":635,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["httpheaders(json.headers",{"_index":2002,"title":{},"body":{"classes/ODataResponse.html":{}}}],["httpnavigationpropertyoptions",{"_index":797,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"miscellaneous/typealiases.html":{}}}],["httpnoneoptions",{"_index":2575,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httpoptions",{"_index":857,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/typealiases.html":{}}}],["httpparams",{"_index":1881,"title":{},"body":{"classes/ODataRequest.html":{}}}],["httppropertyoptions",{"_index":2576,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httpresponse",{"_index":831,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["https://diegomvh.github.io/angular",{"_index":2488,"title":{},"body":{"index.html":{}}}],["https://github.com/adamhalasz/uniqid",{"_index":860,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["https://github.com/diegomvh/angular",{"_index":2491,"title":{},"body":{"index.html":{}}}],["https://json",{"_index":1379,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["https://services.odata.org/v4/(s(4m0tuxtnhcfctl4gzem3gr10))/trippinservicerw",{"_index":2404,"title":{},"body":{"index.html":{}}}],["id",{"_index":666,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["ieee754",{"_index":1927,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ieee754compatible",{"_index":51,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ieee754compatible=${this.api.options.accept?.ieee754compatible",{"_index":1930,"title":{},"body":{"classes/ODataRequest.html":{}}}],["if_match_header",{"_index":1895,"title":{},"body":{"classes/ODataRequest.html":{}}}],["if_none_match_header",{"_index":1896,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ifmatch",{"_index":52,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ifnonematch",{"_index":53,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["implements",{"_index":711,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["implied",{"_index":2538,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["imports",{"_index":1633,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["include_etag",{"_index":2218,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_navigation",{"_index":2212,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_parents",{"_index":2213,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["includeannotations",{"_index":59,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["included",{"_index":2531,"title":{},"body":{"license.html":{}}}],["includeinservicedocument",{"_index":183,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["includes",{"_index":304,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["including",{"_index":2513,"title":{},"body":{"license.html":{}}}],["incorporates",{"_index":2476,"title":{},"body":{"index.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexof(s.name",{"_index":1737,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["indexof(this.type",{"_index":1390,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["inherited",{"_index":215,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["init",{"_index":1874,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.api",{"_index":1901,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.body",{"_index":1902,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.etag",{"_index":1918,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.fetchpolicy",{"_index":1911,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.headers",{"_index":1951,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.method",{"_index":1898,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.observe",{"_index":1908,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.params",{"_index":1960,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.reportprogress",{"_index":1904,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.resource",{"_index":1900,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.resource.pathandparams",{"_index":1915,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.responsetype",{"_index":1906,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.withcredentials",{"_index":1909,"title":{},"body":{"classes/ODataRequest.html":{}}}],["inject",{"_index":2406,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":2151,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"injectables/ODataServiceFactory.html":{}}}],["injectables",{"_index":2152,"title":{},"body":{"injectables/ODataServiceFactory.html":{},"overview.html":{}}}],["inmutable",{"_index":2442,"title":{},"body":{"index.html":{}}}],["install",{"_index":2400,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2397,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":898,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["int",{"_index":104,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["integer",{"_index":1408,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"overview.html":{}}}],["isbound",{"_index":165,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscacheable",{"_index":1013,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscacheable(req",{"_index":1036,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscomposable",{"_index":179,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscompoundkey",{"_index":2164,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["isedmtype",{"_index":1167,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["isenumtype",{"_index":1169,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["isexpired",{"_index":1014,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isexpired(entry",{"_index":1038,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isfetch",{"_index":1015,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isfetch(req",{"_index":1041,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isflags",{"_index":278,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["iskey",{"_index":1415,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["ismatch",{"_index":1016,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["ismatch(entry",{"_index":1043,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["ismutate",{"_index":1017,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["ismutate(req",{"_index":1045,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isnamespaceof",{"_index":2087,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnamespaceof(type",{"_index":2107,"title":{},"body":{"classes/ODataSchema.html":{}}}],["issimplekey",{"_index":2165,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["isstructuredtype",{"_index":1172,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["istypeof",{"_index":1094,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["istypeof(type",{"_index":1108,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["items",{"_index":1413,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["join",{"_index":901,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["json",{"_index":1316,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["json.body",{"_index":2001,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.key",{"_index":1725,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.parameters",{"_index":1728,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.parse(json.stringify(segment.key",{"_index":1727,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.parse(json.stringify(segment.parameters",{"_index":1729,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.parse(storage.getitem(name",{"_index":1605,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["json.status",{"_index":2003,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.statustext",{"_index":2004,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.stringify(array.from(responses.entries",{"_index":1610,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["json.type",{"_index":1724,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.url",{"_index":2005,"title":{},"body":{"classes/ODataResponse.html":{}}}],["jsonschemacustom",{"_index":1319,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpand",{"_index":1321,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaoptions",{"_index":1322,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaselect",{"_index":1317,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1463,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["k.alias",{"_index":1470,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["k.name",{"_index":1417,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["k.name.split",{"_index":1464,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["k.trim",{"_index":2065,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["keep",{"_index":1770,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(...names",{"_index":1819,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["keep(names",{"_index":1779,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["key",{"_index":125,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["key(value",{"_index":1753,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["key[name",{"_index":1472,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["keyof",{"_index":142,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["keys",{"_index":140,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["keys(undefined",{"_index":2185,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["keys(values",{"_index":1671,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["key}=${value",{"_index":1721,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["kind",{"_index":2536,"title":{},"body":{"license.html":{}}}],["lambdaparameter",{"_index":2370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["last",{"_index":866,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["last(undefined",{"_index":1674,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["lastread",{"_index":1055,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["liability",{"_index":2552,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2549,"title":{},"body":{"license.html":{}}}],["library",{"_index":2393,"title":{},"body":{"index.html":{}}}],["license",{"_index":2493,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2514,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2539,"title":{},"body":{"license.html":{}}}],["lines",{"_index":990,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["literal",{"_index":21,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/typealiases.html":{}}}],["m",{"_index":1273,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["mainly",{"_index":2474,"title":{},"body":{"index.html":{}}}],["map",{"_index":832,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/StoragePayload.html":{}}}],["map(([key",{"_index":1720,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["map((f",{"_index":1494,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["map((key",{"_index":899,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["map((name",{"_index":2006,"title":{},"body":{"classes/ODataResponse.html":{}}}],["map((resp",{"_index":962,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["map((s",{"_index":1709,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["mapfields",{"_index":1513,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapfields(mapper",{"_index":1524,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapper",{"_index":1526,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["match",{"_index":700,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["match(/[&?]{1}\\$skip=(\\d",{"_index":705,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["match(/[&?]{1}\\$skiptoken=([\\d\\w\\s",{"_index":707,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["match(/[&?]{1}\\$top=(\\d",{"_index":702,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["match[1",{"_index":708,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["matching",{"_index":151,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":2324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["max_age",{"_index":2058,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["maxage",{"_index":64,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxlength",{"_index":124,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxpagesize",{"_index":54,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediacontenttype",{"_index":679,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["mediaeditlink",{"_index":677,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["mediaetag",{"_index":667,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["mediareadlink",{"_index":675,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["member",{"_index":123,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["members",{"_index":121,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["members.some((member",{"_index":1561,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["merchantability",{"_index":2541,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2119,"title":{},"body":{"classes/ODataSchema.html":{},"license.html":{}}}],["metadata",{"_index":50,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["metadataetag",{"_index":669,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["method",{"_index":657,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["methods",{"_index":153,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["min",{"_index":2323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":39,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":2305,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mismatch",{"_index":1562,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["mit",{"_index":2494,"title":{},"body":{"license.html":{}}}],["model",{"_index":138,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["model(undefined",{"_index":2377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modelfield",{"_index":2344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modelfield(undefined",{"_index":2378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modelfieldoptions",{"_index":2578,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["modeloptions",{"_index":2579,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["models",{"_index":2200,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["models/model",{"_index":1294,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataStructuredType.html":{}}}],["modify",{"_index":2516,"title":{},"body":{"license.html":{}}}],["module",{"_index":1613,"title":{"modules/ODataModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":1615,"title":{"modules.html":{}},"body":{"modules/ODataModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1622,"title":{},"body":{"modules/ODataModule.html":{}}}],["multipart_mixed",{"_index":846,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary",{"_index":845,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary}${changesetboundary",{"_index":974,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["mutable",{"_index":2448,"title":{},"body":{"index.html":{}}}],["n",{"_index":859,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["name",{"_index":92,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namednodemap",{"_index":585,"title":{},"body":{"classes/Field.html":{}}}],["names",{"_index":1183,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.foreach((name",{"_index":1817,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(k",{"_index":1822,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(type",{"_index":1186,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.join",{"_index":1552,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["names.map((name",{"_index":1550,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["names.push(`${this.alias}.${this.name",{"_index":1185,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.push(`${this.schema.alias}.${this.name",{"_index":1306,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["namespace",{"_index":106,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["navigation",{"_index":128,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["navigationproperties",{"_index":223,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["navigationproperty",{"_index":477,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["navigationpropertybinding",{"_index":261,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["navigationpropertybindings",{"_index":401,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["nestedexpandoptions",{"_index":2580,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["network",{"_index":38,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":139,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["newline",{"_index":842,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["newline_regexp",{"_index":853,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["nextlink",{"_index":695,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["ngmodule",{"_index":1624,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["none",{"_index":41,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["none_parser",{"_index":80,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["noninfringement",{"_index":2545,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2529,"title":{},"body":{"license.html":{}}}],["now",{"_index":863,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["now().tostring(36",{"_index":871,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["npm",{"_index":2401,"title":{},"body":{"index.html":{}}}],["null",{"_index":589,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/StoragePayload.html":{}}}],["nullable",{"_index":127,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["number",{"_index":55,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["number(directive.split('=')[1",{"_index":2076,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["number(match[1",{"_index":703,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["number(statusparts[1",{"_index":1000,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["number.isnan(maxage",{"_index":2077,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["o",{"_index":1824,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["o.split",{"_index":2063,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["obj",{"_index":1848,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object",{"_index":1356,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["object.assign",{"_index":659,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["object.assign(acc",{"_index":1192,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["object.assign(acc.params",{"_index":1704,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["object.assign(customparams",{"_index":1957,"title":{},"body":{"classes/ODataRequest.html":{}}}],["object.assign(this",{"_index":612,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.assign(this.etag",{"_index":762,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["object.entries",{"_index":1430,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["object.entries(config.fields).map",{"_index":1543,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["object.entries(config.parameters",{"_index":1181,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.entries(params",{"_index":1719,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["object.keys(this.options",{"_index":1820,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(value",{"_index":2219,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["objects",{"_index":596,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["objects.get(obj",{"_index":1857,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.has(obj",{"_index":1863,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.merge(obj",{"_index":1865,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.resolvekey(key",{"_index":1475,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["objects.set(obj",{"_index":1853,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.unset(obj",{"_index":1859,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["observable",{"_index":27,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["observe",{"_index":950,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["obtaining",{"_index":2506,"title":{},"body":{"license.html":{}}}],["odata",{"_index":1967,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"index.html":{}}}],["odata.include",{"_index":1942,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata.metadata",{"_index":2066,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata.streaming",{"_index":2068,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/docs",{"_index":2489,"title":{},"body":{"index.html":{}}}],["odata/src/lib/cache/cache.ts",{"_index":1003,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["odata/src/lib/cache/cache.ts:126",{"_index":1033,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:134",{"_index":1035,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:16",{"_index":1020,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:17",{"_index":1019,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:23",{"_index":1029,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:24",{"_index":1049,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:26",{"_index":1022,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:38",{"_index":1047,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:48",{"_index":1027,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:55",{"_index":1026,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:66",{"_index":1024,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:71",{"_index":1039,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:75",{"_index":1044,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:79",{"_index":1037,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:83",{"_index":1042,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:87",{"_index":1046,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:91",{"_index":1031,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/memory.ts",{"_index":1573,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:15",{"_index":1577,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:3",{"_index":1574,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:8",{"_index":1578,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/storage.ts",{"_index":1598,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odata/src/lib/cache/storage.ts:12",{"_index":1599,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:35",{"_index":1601,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:42",{"_index":1600,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/client.ts",{"_index":2349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["odata/src/lib/helper.ts",{"_index":2602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/models/options.ts",{"_index":2315,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/module.ts",{"_index":1616,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/module.ts:19",{"_index":1621,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/options.ts",{"_index":710,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:16",{"_index":726,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:17",{"_index":724,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:18",{"_index":725,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:19",{"_index":719,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:20",{"_index":723,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:22",{"_index":721,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:23",{"_index":720,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:24",{"_index":727,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:25",{"_index":715,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:29",{"_index":718,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:35",{"_index":722,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:44",{"_index":713,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:59",{"_index":728,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/parsers/callable.ts",{"_index":1140,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:105",{"_index":1151,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:111",{"_index":1156,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:129",{"_index":1153,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:14",{"_index":1641,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:144",{"_index":1150,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:15",{"_index":1644,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:157",{"_index":1149,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:16",{"_index":1643,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:17",{"_index":1640,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:18",{"_index":1642,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:19",{"_index":1639,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:28",{"_index":1651,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:36",{"_index":1646,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:43",{"_index":1645,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:54",{"_index":1648,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:58",{"_index":1649,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:62",{"_index":1647,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:67",{"_index":1650,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:71",{"_index":1652,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:79",{"_index":1143,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:80",{"_index":1144,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:81",{"_index":1142,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:82",{"_index":1148,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:83",{"_index":1147,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:84",{"_index":1146,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:85",{"_index":1141,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:98",{"_index":1154,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/edm.ts",{"_index":2594,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/parsers/enum",{"_index":1536,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odata/src/lib/parsers/structured",{"_index":1308,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/builder.ts",{"_index":2320,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/path",{"_index":1653,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query",{"_index":1767,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/request.ts",{"_index":1868,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:13",{"_index":1879,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:14",{"_index":1875,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:15",{"_index":1876,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:157",{"_index":1890,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:16",{"_index":1880,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:165",{"_index":1892,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:169",{"_index":1894,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:17",{"_index":1884,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:18",{"_index":1888,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:19",{"_index":1887,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:20",{"_index":1877,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:26",{"_index":1878,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:27",{"_index":1882,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:28",{"_index":1883,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:29",{"_index":1873,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/resource.ts",{"_index":2595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/responses/annotations.ts",{"_index":614,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:101",{"_index":1239,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:105",{"_index":1241,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:109",{"_index":1242,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:113",{"_index":1244,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:117",{"_index":1246,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:12",{"_index":624,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:121",{"_index":1248,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:125",{"_index":1250,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:129",{"_index":1228,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:13",{"_index":625,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:130",{"_index":1252,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:137",{"_index":1232,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:14",{"_index":632,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:141",{"_index":1227,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:142",{"_index":1253,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:149",{"_index":1231,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:155",{"_index":1203,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:16",{"_index":621,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:162",{"_index":1204,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:165",{"_index":1210,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:169",{"_index":1212,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:173",{"_index":1214,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:177",{"_index":1216,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:181",{"_index":1218,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:185",{"_index":1220,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:190",{"_index":1222,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:195",{"_index":1224,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:200",{"_index":1199,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:201",{"_index":1226,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:207",{"_index":1205,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:43",{"_index":623,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:44",{"_index":634,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:51",{"_index":627,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:56",{"_index":628,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:57",{"_index":630,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:61",{"_index":1763,"title":{},"body":{"classes/ODataPropertyAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:68",{"_index":1764,"title":{},"body":{"classes/ODataPropertyAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:72",{"_index":1765,"title":{},"body":{"classes/ODataPropertyAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:78",{"_index":1229,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:85",{"_index":1230,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:89",{"_index":1233,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:93",{"_index":1235,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:97",{"_index":1237,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/csdl/csdl",{"_index":162,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["odata/src/lib/resources/responses/metadata.ts",{"_index":435,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:46",{"_index":437,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:47",{"_index":438,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/options.ts",{"_index":2039,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:18",{"_index":2049,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:19",{"_index":2047,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:21",{"_index":2046,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:22",{"_index":2048,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:23",{"_index":2045,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:25",{"_index":2044,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:26",{"_index":2043,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:33",{"_index":2057,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:37",{"_index":2050,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:41",{"_index":2054,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:58",{"_index":2056,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:64",{"_index":2052,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/response.ts",{"_index":1965,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:117",{"_index":1985,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:131",{"_index":1976,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:146",{"_index":1979,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:174",{"_index":1977,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:197",{"_index":1986,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:225",{"_index":1988,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:27",{"_index":1974,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:28",{"_index":1971,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:44",{"_index":1981,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:56",{"_index":1983,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:77",{"_index":1987,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:90",{"_index":1973,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:91",{"_index":1990,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/types.ts",{"_index":2603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/batch.ts",{"_index":813,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/resources/types/batch.ts:107",{"_index":828,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:174",{"_index":825,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:76",{"_index":821,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:77",{"_index":822,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:81",{"_index":829,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/options.ts",{"_index":2597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/schema/annotation.ts",{"_index":601,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:4",{"_index":609,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:5",{"_index":608,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:6",{"_index":605,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:7",{"_index":606,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:8",{"_index":607,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:9",{"_index":603,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/callable.ts",{"_index":1092,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:10",{"_index":1098,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:11",{"_index":1096,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:26",{"_index":1110,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:38",{"_index":1114,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:42",{"_index":1109,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:46",{"_index":1115,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:50",{"_index":1104,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:58",{"_index":1106,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:6",{"_index":1102,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:62",{"_index":1112,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:66",{"_index":1107,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:7",{"_index":1100,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:8",{"_index":1099,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:9",{"_index":1097,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/entity",{"_index":1255,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{}}}],["odata/src/lib/schema/enum",{"_index":1510,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odata/src/lib/schema/schema.ts",{"_index":2082,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:103",{"_index":2097,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:11",{"_index":2090,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:12",{"_index":2096,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:13",{"_index":2089,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:14",{"_index":2095,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:15",{"_index":2094,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:16",{"_index":2091,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:17",{"_index":2092,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:18",{"_index":2088,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:61",{"_index":2108,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:68",{"_index":2110,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:75",{"_index":2098,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:80",{"_index":2104,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:86",{"_index":2106,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:92",{"_index":2100,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:98",{"_index":2102,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/structured",{"_index":2163,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odata/src/lib/services/base.ts",{"_index":766,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:103",{"_index":798,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:108",{"_index":800,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:113",{"_index":801,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:17",{"_index":774,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:25",{"_index":803,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:29",{"_index":790,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:35",{"_index":791,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:41",{"_index":792,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:47",{"_index":793,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:53",{"_index":794,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:66",{"_index":781,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:72",{"_index":783,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:78",{"_index":784,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:84",{"_index":785,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:90",{"_index":786,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/entity.ts",{"_index":1269,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:10",{"_index":1292,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:6",{"_index":1277,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:7",{"_index":1274,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/factory.ts",{"_index":2153,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:10",{"_index":2156,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:21",{"_index":2159,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:7",{"_index":2154,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/options.ts",{"_index":2596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts",{"_index":7,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts:59",{"_index":2273,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:63",{"_index":2275,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:68",{"_index":2274,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:78",{"_index":158,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/src/lib/types.ts:79",{"_index":156,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/wiki",{"_index":2492,"title":{},"body":{"index.html":{}}}],["odata_configurations",{"_index":1629,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata_entityid_headers",{"_index":639,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odata_etag",{"_index":2409,"title":{},"body":{"index.html":{}}}],["odata_version",{"_index":847,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata_version_headers",{"_index":1992,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataactionresource",{"_index":778,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["odataannotation",{"_index":600,"title":{"classes/ODataAnnotation.html":{}},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odataannotation(annot",{"_index":1266,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odataannotations",{"_index":613,"title":{"classes/ODataAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:12",{"_index":1201,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:13",{"_index":1202,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:43",{"_index":1200,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:51",{"_index":1206,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:56",{"_index":1207,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataannotations:57",{"_index":1208,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odataapi",{"_index":854,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{}}}],["odataapioptions",{"_index":709,"title":{"classes/ODataApiOptions.html":{}},"body":{"classes/ODataApiOptions.html":{}}}],["odatabaseservice",{"_index":765,"title":{"classes/ODataBaseService.html":{}},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["odatabaseservice:103",{"_index":1288,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:108",{"_index":1289,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:113",{"_index":1290,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:29",{"_index":1283,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:35",{"_index":1284,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:41",{"_index":1285,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:47",{"_index":1286,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:53",{"_index":1287,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:66",{"_index":1278,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:72",{"_index":1279,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:78",{"_index":1280,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:84",{"_index":1281,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabaseservice:90",{"_index":1282,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odatabatchrequest",{"_index":812,"title":{"classes/ODataBatchRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchrequest(req",{"_index":952,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource",{"_index":923,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(api",{"_index":937,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(this.api",{"_index":932,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatacache",{"_index":1002,"title":{"classes/ODataCache.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacache:126",{"_index":1585,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:134",{"_index":1586,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:16",{"_index":1576,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:17",{"_index":1575,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:23",{"_index":1583,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:24",{"_index":1593,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:26",{"_index":1579,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:38",{"_index":1592,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:48",{"_index":1582,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:55",{"_index":1581,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:66",{"_index":1580,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:71",{"_index":1588,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:75",{"_index":1590,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:79",{"_index":1587,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:83",{"_index":1589,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:87",{"_index":1591,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:91",{"_index":1584,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacacheentry",{"_index":1023,"title":{"interfaces/ODataCacheEntry.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacallable",{"_index":1091,"title":{"classes/ODataCallable.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataSchema.html":{}}}],["odatacallable(config",{"_index":2131,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatacallableparser",{"_index":1101,"title":{"classes/ODataCallableParser.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataclient",{"_index":772,"title":{},"body":{"classes/ODataBaseService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatacollection",{"_index":2198,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odatacollectionresource",{"_index":2581,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatacontext",{"_index":622,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"miscellaneous/typealiases.html":{}}}],["odataentities",{"_index":805,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitiesannotations",{"_index":691,"title":{"classes/ODataEntitiesAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["odataentity",{"_index":804,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentityannotations",{"_index":664,"title":{"classes/ODataEntityAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["odataentitycontainer",{"_index":1254,"title":{"classes/ODataEntityContainer.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["odataentitycontainer(container",{"_index":2134,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataentityresource",{"_index":2600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odataentityservice",{"_index":1268,"title":{"classes/ODataEntityService.html":{}},"body":{"classes/ODataEntityService.html":{}}}],["odataentityset",{"_index":1257,"title":{"classes/ODataEntitySet.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataSchema.html":{}}}],["odataentityset(config",{"_index":1264,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["odataentitysetresource",{"_index":2598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odataentitysetservice",{"_index":2157,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odataentitytypekey",{"_index":1307,"title":{"classes/ODataEntityTypeKey.html":{}},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odataentitytypekey(key",{"_index":1428,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odataenumtype",{"_index":1509,"title":{"classes/ODataEnumType.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{}}}],["odataenumtype(config",{"_index":2115,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataenumtypefieldparser",{"_index":1519,"title":{"classes/ODataEnumTypeFieldParser.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odataenumtypefieldparser(name",{"_index":1544,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odataenumtypeparser",{"_index":1158,"title":{"classes/ODataEnumTypeParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatafunctionresource",{"_index":788,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{}}}],["odatahelper",{"_index":640,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponseOptions.html":{}}}],["odatahelper[default_version",{"_index":644,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["odatahelper[this.version",{"_index":764,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatainmemorycache",{"_index":1572,"title":{"classes/ODataInMemoryCache.html":{}},"body":{"classes/ODataInMemoryCache.html":{}}}],["odatainstoragecache",{"_index":1597,"title":{"classes/ODataInStorageCache.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatametadata",{"_index":448,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_data_services",{"_index":562,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_reference",{"_index":553,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_schema",{"_index":566,"title":{},"body":{"classes/Field.html":{}}}],["odatametadatatype",{"_index":24,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatamodel",{"_index":1293,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataStructuredType.html":{}}}],["odatamodelentry",{"_index":2583,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodelevent",{"_index":2584,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodelfieldoptions",{"_index":2585,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodeloptions",{"_index":2199,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odatamodeloptions(options",{"_index":2206,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odatamodelrelation",{"_index":2586,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodelresource",{"_index":2587,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatamodelstate",{"_index":2308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["odatamodule",{"_index":1614,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"modules.html":{}}}],["odatamodule.forroot",{"_index":2403,"title":{},"body":{"index.html":{}}}],["odatamodule.forroot(trippinconfig",{"_index":2472,"title":{},"body":{"index.html":{}}}],["odatanavigationpropertyresource",{"_index":796,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"miscellaneous/typealiases.html":{}}}],["odataparameterparser",{"_index":1145,"title":{"classes/ODataParameterParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataparameterparser(name",{"_index":1182,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatapathsegments",{"_index":834,"title":{"classes/ODataPathSegments.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odatapathsegments(this.tojson",{"_index":1730,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odataproperty",{"_index":806,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odatapropertyannotations",{"_index":658,"title":{"classes/ODataPropertyAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["odatapropertyresource",{"_index":2599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odataqueryoptions",{"_index":1766,"title":{"classes/ODataQueryOptions.html":{}},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odataqueryoptions(this.tojson",{"_index":1811,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odatareferential",{"_index":1326,"title":{"classes/ODataReferential.html":{}},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatareferential(referential",{"_index":1335,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatarequest",{"_index":820,"title":{"classes/ODataRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["odataresource",{"_index":837,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["odataresponse",{"_index":855,"title":{"classes/ODataResponse.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponse.fromjson(req",{"_index":1612,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponseoptions",{"_index":1972,"title":{"classes/ODataResponseOptions.html":{}},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this",{"_index":2061,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this.api.options",{"_index":2012,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataschema",{"_index":1095,"title":{"classes/ODataSchema.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odatasegment",{"_index":1660,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["odataservicefactory",{"_index":1618,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatasettings",{"_index":1626,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasettings(...configs",{"_index":1632,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasingletonresource",{"_index":2601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatasingletonservice",{"_index":2160,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odatastructuredtype",{"_index":2093,"title":{"classes/ODataStructuredType.html":{}},"body":{"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odatastructuredtype(config",{"_index":2118,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatastructuredtypefieldparser",{"_index":1320,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatastructuredtypefieldparser(name",{"_index":1432,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatastructuredtypeparser",{"_index":1159,"title":{"classes/ODataStructuredTypeParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatausage",{"_index":2402,"title":{},"body":{"index.html":{}}}],["odataversion",{"_index":32,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odataversionhelper",{"_index":29,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["of(cached",{"_index":1079,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["ondelete",{"_index":319,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["one",{"_index":1837,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["onerror",{"_index":816,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onerror(content",{"_index":823,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload",{"_index":817,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload(content",{"_index":827,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["open",{"_index":137,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["open.org/odata/odata/v4.0/errata02/os/complete/part1",{"_index":732,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["opentype",{"_index":224,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["option",{"_index":1771,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["option(name",{"_index":1781,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["optionhandler",{"_index":1783,"title":{"classes/OptionHandler.html":{}},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["optionhandler(this.options",{"_index":1814,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["options",{"_index":9,"title":{"interfaces/Options.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["options.custom",{"_index":1496,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.custom[f.name",{"_index":1497,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.expand",{"_index":1490,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.headers",{"_index":957,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["options.helper.attributes(data",{"_index":2035,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.helper.type(value",{"_index":2027,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.params",{"_index":959,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["options.select",{"_index":1491,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.select).indexof(f.name",{"_index":1492,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.ts",{"_index":1768,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.ts:102",{"_index":1780,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:109",{"_index":1774,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:114",{"_index":2256,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:120",{"_index":2272,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:124",{"_index":2268,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:128",{"_index":2262,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:133",{"_index":2270,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:139",{"_index":2257,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:145",{"_index":2265,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:149",{"_index":2266,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:155",{"_index":2260,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:161",{"_index":2258,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:174",{"_index":2267,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:179",{"_index":2263,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:184",{"_index":2269,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:194",{"_index":2264,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:199",{"_index":2259,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:205",{"_index":2261,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:39",{"_index":1773,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:46",{"_index":1784,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:68",{"_index":1788,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:79",{"_index":1787,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:83",{"_index":1775,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:88",{"_index":1782,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:94",{"_index":1778,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:98",{"_index":1786,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.version",{"_index":2030,"title":{},"body":{"classes/ODataResponse.html":{}}}],["options.withcredentials",{"_index":960,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["options?.helper.type(value",{"_index":1368,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options?.stringasenum",{"_index":1549,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["optionshelper",{"_index":60,"title":{"interfaces/OptionsHelper.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opts",{"_index":84,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["orderby",{"_index":1789,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["orderbyobject",{"_index":2588,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["orderbytype",{"_index":2589,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["os",{"_index":736,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["otherwise",{"_index":2556,"title":{},"body":{"license.html":{}}}],["out",{"_index":2558,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2562,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":141,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["p.configure",{"_index":1197,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.encode(params[p.name",{"_index":1194,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.name",{"_index":1188,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.serialize(params[p.name",{"_index":1193,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.startswith(application_json",{"_index":2018,"title":{},"body":{"classes/ODataResponse.html":{}}}],["package",{"_index":2287,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":48,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parameter",{"_index":76,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["parameter.type",{"_index":1160,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parameters",{"_index":146,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["parameters(value",{"_index":1758,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["params",{"_index":17,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["params[p.name",{"_index":1189,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parent",{"_index":1420,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parent.children.push(this",{"_index":1456,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parentelement",{"_index":594,"title":{},"body":{"classes/Field.html":{}}}],["parentelement.children",{"_index":599,"title":{},"body":{"classes/Field.html":{}}}],["parse",{"_index":581,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parse(parser",{"_index":1984,"title":{},"body":{"classes/ODataResponse.html":{}}}],["parsenot",{"_index":2345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsenot(builtfilters",{"_index":2372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":68,"title":{"interfaces/Parser.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parser.childparser((c",{"_index":2028,"title":{},"body":{"classes/ODataResponse.html":{}}}],["parser.deserialize(value",{"_index":1371,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parser.parsefromstring(xml",{"_index":542,"title":{},"body":{"classes/Field.html":{}}}],["parser.serialize(value",{"_index":1375,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parserfortype",{"_index":1134,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parserfortype(this.base",{"_index":1455,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parserfortype(this.return.type",{"_index":1195,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parserfortype(this.type",{"_index":1166,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parsers",{"_index":99,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parsers/structured",{"_index":1991,"title":{},"body":{"classes/ODataResponse.html":{}}}],["part1",{"_index":737,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["partial",{"_index":2189,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["particular",{"_index":2543,"title":{},"body":{"license.html":{}}}],["partner",{"_index":320,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["patch",{"_index":895,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["patch'].indexof(this.method",{"_index":1936,"title":{},"body":{"classes/ODataRequest.html":{}}}],["path",{"_index":334,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"injectables/ODataServiceFactory.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["path(value",{"_index":1751,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["path.slice(1",{"_index":1693,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["path.startswith(path_separator",{"_index":1692,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["path_separator",{"_index":1686,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathandparams",{"_index":1658,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["paths",{"_index":1705,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegmentnames",{"_index":835,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["pathsegmentnames.entityset",{"_index":1734,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegmentnames.function",{"_index":1689,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegmentnames.navigationproperty",{"_index":1735,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegmentnames.property",{"_index":1736,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegmentsbuilder",{"_index":1687,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["pathsegmentsbuilder(segment",{"_index":1701,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["pathwithparams",{"_index":1870,"title":{},"body":{"classes/ODataRequest.html":{}}}],["path}?${this.params",{"_index":1962,"title":{},"body":{"classes/ODataRequest.html":{}}}],["pattern",{"_index":1056,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["payload",{"_index":83,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["people",{"_index":2456,"title":{},"body":{"index.html":{}}}],["people.expand",{"_index":2458,"title":{},"body":{"index.html":{}}}],["people.get({withcount",{"_index":2466,"title":{},"body":{"index.html":{}}}],["peopleservice",{"_index":2423,"title":{},"body":{"index.html":{}}}],["peopleservice.entities",{"_index":2457,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2500,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":105,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["permit",{"_index":2523,"title":{},"body":{"license.html":{}}}],["person",{"_index":2505,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2524,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2166,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pick(value",{"_index":2187,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pipe",{"_index":2437,"title":{},"body":{"index.html":{}}}],["please",{"_index":2387,"title":{},"body":{"index.html":{}}}],["policy",{"_index":1075,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["portions",{"_index":2533,"title":{},"body":{"license.html":{}}}],["post",{"_index":894,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{}}}],["post'].indexof(this.method",{"_index":1945,"title":{},"body":{"classes/ODataRequest.html":{}}}],["precision",{"_index":129,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["predicate",{"_index":1260,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["predicate(this",{"_index":1439,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["prefer",{"_index":18,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["prefer.length",{"_index":1947,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push",{"_index":1941,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`odata.continue",{"_index":1946,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`odata.maxpagesize=${this.api.options.prefer?.maxpagesize",{"_index":1939,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`return=${this.api.options.prefer?.return",{"_index":1937,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefix",{"_index":870,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["primitive",{"_index":1829,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["private",{"_index":44,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["project",{"_index":2389,"title":{},"body":{"index.html":{}}}],["projects/.../batch.ts",{"_index":2339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../builder.ts",{"_index":2312,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../client.ts",{"_index":2328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../edm.ts",{"_index":2567,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../helper.ts",{"_index":2582,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../metadata.ts",{"_index":2307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../module.ts",{"_index":2336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../options.ts",{"_index":2309,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../path",{"_index":2310,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../query",{"_index":2313,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../resource.ts",{"_index":2568,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../structured",{"_index":2577,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../types.ts",{"_index":2566,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property",{"_index":132,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["property(name",{"_index":684,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["property.enum",{"_index":1559,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["property.ts",{"_index":316,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["property.ts:1",{"_index":406,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:14",{"_index":351,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:15",{"_index":352,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:16",{"_index":353,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:17",{"_index":355,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:18",{"_index":354,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:19",{"_index":350,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:25",{"_index":324,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:3",{"_index":407,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:30",{"_index":327,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:31",{"_index":325,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:32",{"_index":328,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:33",{"_index":326,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:39",{"_index":364,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:4",{"_index":409,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:40",{"_index":365,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:43",{"_index":339,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:44",{"_index":340,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:5",{"_index":408,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:9",{"_index":349,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["propertyref",{"_index":475,"title":{},"body":{"classes/Field.html":{}}}],["propertyrefs",{"_index":240,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["propname",{"_index":2369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propprefix",{"_index":2357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["protected",{"_index":582,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["protocol",{"_index":738,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["protocol/odata",{"_index":733,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["provide",{"_index":1634,"title":{},"body":{"modules/ODataModule.html":{}}}],["provided",{"_index":2534,"title":{},"body":{"license.html":{}}}],["providers",{"_index":1617,"title":{},"body":{"modules/ODataModule.html":{}}}],["public",{"_index":43,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"modules/ODataModule.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["publish",{"_index":2517,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2544,"title":{},"body":{"license.html":{}}}],["push",{"_index":2253,"title":{},"body":{"classes/OptionHandler.html":{}}}],["push(value",{"_index":1833,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["put",{"_index":154,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{}}}],["put(key",{"_index":82,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["putresponse",{"_index":1018,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["putresponse(req",{"_index":1048,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["qualifier",{"_index":201,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["queries",{"_index":2420,"title":{},"body":{"index.html":{}}}],["query",{"_index":77,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["queryarguments",{"_index":1792,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/typealiases.html":{}}}],["querycustomtype",{"_index":2590,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["querycustomtypes",{"_index":2311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["querying",{"_index":2383,"title":{},"body":{"index.html":{}}}],["queryoptionnames",{"_index":1777,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["queryoptionnames.expand",{"_index":1804,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.filter",{"_index":1797,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.format",{"_index":1805,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.orderby",{"_index":1800,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.search",{"_index":1798,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.select",{"_index":1796,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skip",{"_index":1802,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skiptoken",{"_index":1803,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.top",{"_index":1801,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.transform",{"_index":1799,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptions",{"_index":2591,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["r",{"_index":782,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataParameterParser.html":{}}}],["range",{"_index":1407,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["raw",{"_index":1314,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["raw(`'${serialized",{"_index":1556,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["raw(json.stringify(this.serialize(value",{"_index":1454,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["raw(key",{"_index":1698,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["raw(serialized",{"_index":1557,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["readlink",{"_index":671,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["readonly",{"_index":451,"title":{},"body":{"classes/Field.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["reduce",{"_index":1190,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["reduce((acc",{"_index":1498,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["reference",{"_index":443,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["reference.ts",{"_index":297,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["reference.ts:14",{"_index":299,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:15",{"_index":300,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:18",{"_index":309,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:20",{"_index":312,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:21",{"_index":310,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:22",{"_index":311,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:3",{"_index":359,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:5",{"_index":362,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:6",{"_index":361,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:7",{"_index":360,"title":{},"body":{"classes/CsdlReference.html":{}}}],["referenced",{"_index":135,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["referencedproperty",{"_index":133,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["references",{"_index":537,"title":{},"body":{"classes/Field.html":{}}}],["referential",{"_index":134,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["referentialconstraint",{"_index":479,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraints",{"_index":321,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["referentials",{"_index":131,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["region",{"_index":88,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["related",{"_index":2388,"title":{},"body":{"index.html":{}}}],["relative",{"_index":890,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["remove",{"_index":1065,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["remove(...names",{"_index":1816,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["remove(names",{"_index":1785,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(value",{"_index":1835,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["removed",{"_index":2317,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["renderprimitivevalue",{"_index":2346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["renderprimitivevalue(key",{"_index":2374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace(/\\;/g",{"_index":2022,"title":{},"body":{"classes/ODataResponse.html":{}}}],["reportprogress",{"_index":1869,"title":{},"body":{"classes/ODataRequest.html":{}}}],["representation",{"_index":57,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["req",{"_index":941,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{}}}],["req.api",{"_index":942,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["req.fetchpolicy",{"_index":1076,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.observe",{"_index":946,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.onload(chunk.slice(1",{"_index":999,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["req.path",{"_index":1086,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["req.resource",{"_index":1995,"title":{},"body":{"classes/ODataResponse.html":{}}}],["request",{"_index":815,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["requests",{"_index":925,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["required",{"_index":1488,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["res",{"_index":873,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["res$.pipe",{"_index":1081,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res$.pipe(startwith(cached",{"_index":1085,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.body",{"_index":1996,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.headers",{"_index":1997,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.join(newline",{"_index":902,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.length",{"_index":982,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.options.cacheability",{"_index":1083,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.options.maxage",{"_index":1595,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.push",{"_index":970,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${batch",{"_index":979,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary",{"_index":976,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary",{"_index":972,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_id",{"_index":978,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_transfer_encoding",{"_index":977,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_type",{"_index":896,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${newline}${json.stringify(batch.request.body",{"_index":981,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(newline",{"_index":975,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.split(':')[1].trim",{"_index":875,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.status",{"_index":1998,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.statustext",{"_index":1999,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.tojson",{"_index":1611,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.url",{"_index":2000,"title":{},"body":{"classes/ODataResponse.html":{}}}],["resolvekey",{"_index":2167,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["resolvekey(attrs",{"_index":2190,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["resolvekey(value",{"_index":1459,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["resource",{"_index":777,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["resource.call(params",{"_index":810,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["resource.fetch",{"_index":811,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["resource.query.apply(options",{"_index":809,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["resourceparams",{"_index":1914,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourceparams['$expand",{"_index":1956,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourceparams['$select",{"_index":1954,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourcepath",{"_index":1913,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resources",{"_index":807,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["resources/builder",{"_index":1315,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["resp",{"_index":964,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["response",{"_index":918,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["response.body.split(newline_regexp",{"_index":991,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["response.headers.get(content_type",{"_index":987,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responseoptions",{"_index":62,"title":{"interfaces/ResponseOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["responses",{"_index":856,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["responsetype",{"_index":779,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataRequest.html":{}}}],["restriction",{"_index":2512,"title":{},"body":{"license.html":{}}}],["result",{"_index":150,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result.params",{"_index":1707,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["result.paths.join(path_separator",{"_index":1706,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["results",{"_index":152,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":56,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returns",{"_index":157,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":166,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["rights",{"_index":2515,"title":{},"body":{"license.html":{}}}],["root",{"_index":2412,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":28,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":833,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["s",{"_index":799,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityService.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.key",{"_index":1717,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.name",{"_index":1744,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.type",{"_index":1710,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["same",{"_index":945,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["scale",{"_index":130,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schema",{"_index":440,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.alias",{"_index":1127,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["schema.contentencoding",{"_index":1399,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.default",{"_index":1412,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.format",{"_index":1392,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.maxlength",{"_index":1401,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.namespace",{"_index":1126,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["schema.org",{"_index":1380,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.org/draft",{"_index":1486,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.pattern",{"_index":1393,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.properties",{"_index":1493,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.required",{"_index":1499,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.ts",{"_index":375,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:13",{"_index":386,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:15",{"_index":395,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:16",{"_index":388,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:17",{"_index":393,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:18",{"_index":390,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:19",{"_index":392,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:20",{"_index":394,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:21",{"_index":387,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:22",{"_index":391,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:23",{"_index":397,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:24",{"_index":396,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:25",{"_index":389,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.type",{"_index":1391,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema/annotation",{"_index":1313,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schemaconfig",{"_index":101,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["schemas",{"_index":100,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["search",{"_index":1793,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segment",{"_index":1667,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["segment.clearkey",{"_index":1714,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.key",{"_index":1694,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.key(key",{"_index":1715,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.name",{"_index":1688,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.parameters",{"_index":1690,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.path",{"_index":1691,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.type",{"_index":1723,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler",{"_index":1664,"title":{"classes/SegmentHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(s",{"_index":1738,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(segment",{"_index":1742,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segments",{"_index":836,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segments(undefined",{"_index":1677,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.add(pathsegmentnames.batch",{"_index":936,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["segments.filter",{"_index":1733,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segments.foreach((segment",{"_index":1712,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segments.length",{"_index":1739,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segments.map((s",{"_index":1716,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segments.ts",{"_index":1654,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["segments.ts:110",{"_index":1679,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:126",{"_index":1665,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:130",{"_index":1668,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:135",{"_index":1678,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:149",{"_index":1675,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:154",{"_index":1663,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:160",{"_index":1670,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:168",{"_index":2277,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:170",{"_index":2286,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:173",{"_index":2285,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:177",{"_index":2284,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:181",{"_index":2282,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:185",{"_index":2280,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:188",{"_index":2278,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:191",{"_index":2283,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:195",{"_index":2281,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:198",{"_index":2279,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:59",{"_index":1661,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:65",{"_index":1676,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:78",{"_index":1682,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:84",{"_index":1672,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:99",{"_index":1680,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments[segments.length",{"_index":1740,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["select",{"_index":1323,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":2410,"title":{},"body":{"index.html":{}}}],["selecttype",{"_index":2592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sell",{"_index":2521,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":72,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["serialize(params",{"_index":1155,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["serialize(value",{"_index":1111,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Parser.html":{}}}],["serialized",{"_index":1554,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["server",{"_index":919,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["service",{"_index":148,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["servicerooturl",{"_index":91,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["services/index",{"_index":1628,"title":{},"body":{"modules/ODataModule.html":{}}}],["sessionstorage",{"_index":1604,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["set",{"_index":258,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/OptionHandler.html":{}}}],["set(path",{"_index":1851,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["set.ts",{"_index":260,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:20",{"_index":1300,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:26",{"_index":1301,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:3",{"_index":263,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:30",{"_index":1299,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:5",{"_index":266,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:6",{"_index":264,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:7",{"_index":267,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:8",{"_index":265,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:9",{"_index":1298,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["setcache",{"_index":2040,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setcache(cachecontrol",{"_index":2051,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures",{"_index":2041,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures(features",{"_index":2053,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["settings",{"_index":1627,"title":{},"body":{"modules/ODataModule.html":{}}}],["setversion",{"_index":2042,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setversion(version",{"_index":2055,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["shall",{"_index":2530,"title":{},"body":{"license.html":{}}}],["singleton",{"_index":259,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["singleton(path",{"_index":2158,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["singleton.ts",{"_index":400,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:3",{"_index":402,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:5",{"_index":403,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:6",{"_index":405,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:7",{"_index":404,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singletons",{"_index":248,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["skip",{"_index":704,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["skiptoken",{"_index":706,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":2508,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["specified",{"_index":587,"title":{},"body":{"classes/Field.html":{}}}],["split",{"_index":2016,"title":{},"body":{"classes/ODataResponse.html":{}}}],["srid",{"_index":186,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["standardaggregatemethods",{"_index":2314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":2380,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":995,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["startwith",{"_index":1051,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["states",{"_index":2447,"title":{},"body":{"index.html":{}}}],["static",{"_index":450,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"modules/ODataModule.html":{},"classes/ODataResponse.html":{}}}],["status",{"_index":824,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["status.code",{"_index":906,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["status.text",{"_index":909,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statusparts",{"_index":997,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statusparts.slice(2).join",{"_index":1001,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statustext",{"_index":908,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["storage",{"_index":1603,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["storagepayload",{"_index":1602,"title":{"interfaces/StoragePayload.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["store",{"_index":45,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["store'].indexof(directive",{"_index":2079,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["streaming",{"_index":61,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["string",{"_index":49,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stringasenum",{"_index":47,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["stripmetadata",{"_index":19,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structural",{"_index":235,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["structured",{"_index":218,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["structured.fields.find((f",{"_index":1465,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["structuredtype",{"_index":1329,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["structuredtypeconfig",{"_index":112,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["structuredtypefieldconfig",{"_index":67,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["structuredtypefieldoptions",{"_index":65,"title":{"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypeschema",{"_index":1271,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["strucuturedtype",{"_index":1174,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["styleurls",{"_index":2415,"title":{},"body":{"index.html":{}}}],["subject",{"_index":814,"title":{},"body":{"classes/ODataBatchRequest.html":{},"license.html":{}}}],["sublicense",{"_index":2519,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2468,"title":{},"body":{"index.html":{}}}],["subscribe(({entities",{"_index":2429,"title":{},"body":{"index.html":{}}}],["subscribe(({entity",{"_index":2440,"title":{},"body":{"index.html":{}}}],["subscribe(aports",{"_index":2432,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":2532,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":869,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["sum",{"_index":2322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":888,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["super(annotationlist",{"_index":202,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["super(api",{"_index":928,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["super(init",{"_index":1994,"title":{},"body":{"classes/ODataResponse.html":{}}}],["super(name",{"_index":236,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{}}}],["support",{"_index":2478,"title":{},"body":{"index.html":{}}}],["supported",{"_index":592,"title":{},"body":{"classes/Field.html":{}}}],["switch",{"_index":2064,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["switchmap",{"_index":2438,"title":{},"body":{"index.html":{}}}],["system",{"_index":1794,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["t",{"_index":71,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["table",{"_index":2395,"title":{},"body":{"index.html":{}}}],["tag",{"_index":447,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["tag_action",{"_index":484,"title":{},"body":{"classes/Field.html":{}}}],["tag_action_import",{"_index":490,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotation",{"_index":464,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotations",{"_index":463,"title":{},"body":{"classes/Field.html":{}}}],["tag_complex_type",{"_index":469,"title":{},"body":{"classes/Field.html":{}}}],["tag_data_services",{"_index":454,"title":{},"body":{"classes/Field.html":{}}}],["tag_edmx",{"_index":452,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_container",{"_index":485,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_set",{"_index":486,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_type",{"_index":471,"title":{},"body":{"classes/Field.html":{}}}],["tag_enum_type",{"_index":466,"title":{},"body":{"classes/Field.html":{}}}],["tag_function",{"_index":481,"title":{},"body":{"classes/Field.html":{}}}],["tag_function_import",{"_index":488,"title":{},"body":{"classes/Field.html":{}}}],["tag_include",{"_index":458,"title":{},"body":{"classes/Field.html":{}}}],["tag_include_annotations",{"_index":460,"title":{},"body":{"classes/Field.html":{}}}],["tag_key",{"_index":473,"title":{},"body":{"classes/Field.html":{}}}],["tag_member",{"_index":468,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property",{"_index":476,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property_binding",{"_index":492,"title":{},"body":{"classes/Field.html":{}}}],["tag_on_delete",{"_index":480,"title":{},"body":{"classes/Field.html":{}}}],["tag_parameter",{"_index":483,"title":{},"body":{"classes/Field.html":{}}}],["tag_property",{"_index":472,"title":{},"body":{"classes/Field.html":{}}}],["tag_property_ref",{"_index":474,"title":{},"body":{"classes/Field.html":{}}}],["tag_reference",{"_index":456,"title":{},"body":{"classes/Field.html":{}}}],["tag_referential_constraint",{"_index":478,"title":{},"body":{"classes/Field.html":{}}}],["tag_return_type",{"_index":482,"title":{},"body":{"classes/Field.html":{}}}],["tag_schema",{"_index":465,"title":{},"body":{"classes/Field.html":{}}}],["tag_singleton",{"_index":487,"title":{},"body":{"classes/Field.html":{}}}],["tag_term",{"_index":462,"title":{},"body":{"classes/Field.html":{}}}],["tag_type_definition",{"_index":493,"title":{},"body":{"classes/Field.html":{}}}],["tags",{"_index":449,"title":{},"body":{"classes/Field.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"index.html":{}}}],["tap",{"_index":1052,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["tap((res",{"_index":1082,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["target",{"_index":200,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["targetnamespace",{"_index":307,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["templateurl",{"_index":2413,"title":{},"body":{"index.html":{}}}],["term",{"_index":203,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["termnamespace",{"_index":306,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["terms",{"_index":383,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["text",{"_index":904,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["text/plain",{"_index":1934,"title":{},"body":{"classes/ODataRequest.html":{}}}],["text/xml",{"_index":543,"title":{},"body":{"classes/Field.html":{}}}],["this._context",{"_index":654,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this._functions",{"_index":687,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this._options",{"_index":2011,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setcache(cachecontrol",{"_index":2026,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setfeatures(features",{"_index":2019,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setversion(version",{"_index":2023,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._properties",{"_index":682,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this._segments",{"_index":1699,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this._segments.map((segment",{"_index":1722,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this._segments.push(segment",{"_index":1741,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this._segments.reduce",{"_index":1700,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this._segments].reverse().find(predicate",{"_index":1732,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.accept",{"_index":758,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["this.alias",{"_index":1177,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.annotations",{"_index":646,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.annotations.find(predicate",{"_index":1267,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.api",{"_index":943,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{}}}],["this.api.findentitysetfortype(this.parser.return.type)?.name",{"_index":1130,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.api.findstructuredtypefortype",{"_index":2209,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.api.findstructuredtypefortype(this.apinameorentitytype",{"_index":1297,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.api.options",{"_index":1136,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.api.options.accept?.ieee754compatible",{"_index":1928,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.accept?.metadata",{"_index":1925,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.etag.ifmatch",{"_index":1919,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.etag.ifnonematch",{"_index":1922,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.fetchpolicy",{"_index":1912,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.headers",{"_index":1950,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.helper.etag(attrs",{"_index":2222,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.api.options.helper.etag(value",{"_index":2221,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.api.options.params",{"_index":1959,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.continueonerror",{"_index":1944,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.includeannotations",{"_index":1940,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.maxpagesize",{"_index":1938,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.return",{"_index":1935,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.stripmetadata",{"_index":2036,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.api.options.withcredentials",{"_index":1910,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.parserfortype(type",{"_index":2029,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.api.request",{"_index":940,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.api.request(request).pipe",{"_index":961,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.api.servicerooturl}${this.path",{"_index":1963,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.servicerooturl}${this.pathwithparams",{"_index":1964,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.apinameorentitytype",{"_index":1296,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.assertarray",{"_index":1847,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().filter((v",{"_index":1836,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().push(value",{"_index":1834,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray()[index",{"_index":1842,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(false",{"_index":1856,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(true",{"_index":1852,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.base",{"_index":1421,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.batchboundary",{"_index":929,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.body",{"_index":958,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.body)['d",{"_index":2031,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.bound",{"_index":1121,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.buildentry(payload",{"_index":1059,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.cacheability",{"_index":2080,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.callables",{"_index":2129,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.callables.find((e",{"_index":2142,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.callables.foreach((callable",{"_index":2149,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.checkversion(document",{"_index":544,"title":{},"body":{"classes/Field.html":{}}}],["this.children",{"_index":1441,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.client",{"_index":2162,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["this.client.apifor(this.apinameorentitytype",{"_index":808,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["this.clonesegments",{"_index":933,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.collection",{"_index":1340,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.collection.model",{"_index":2208,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.complete",{"_index":912,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.composable",{"_index":1123,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.containers",{"_index":2132,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.containers.reduce",{"_index":2137,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.context",{"_index":661,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.context.type",{"_index":663,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.default",{"_index":1336,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.deserialize(this.default",{"_index":1378,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.deserialize(type",{"_index":2038,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.entities",{"_index":2116,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entities.find((e",{"_index":2141,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entities.foreach((config",{"_index":2147,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entitysetpath",{"_index":1119,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.entitysets",{"_index":1262,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["this.entitysets.find((e",{"_index":2143,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entitytype",{"_index":1302,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["this.entries",{"_index":1058,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.entries.delete(key",{"_index":1069,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.foreach((entry",{"_index":1067,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.get(key",{"_index":1062,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.set(key",{"_index":1060,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.enum().validate(value",{"_index":1358,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.enums",{"_index":2113,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.enums.find((e",{"_index":2139,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.enums.foreach((enu",{"_index":2145,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.error",{"_index":916,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.error(res",{"_index":922,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.factory.entity(\"airports",{"_index":2422,"title":{},"body":{"index.html":{}}}],["this.factory.entity(\"people",{"_index":2424,"title":{},"body":{"index.html":{}}}],["this.fetchpolicy",{"_index":756,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.fields",{"_index":1429,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields().find((f",{"_index":1533,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields().map(mapper",{"_index":1535,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields.filter",{"_index":1478,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.filter((f",{"_index":1504,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.find((f",{"_index":1434,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.foreach((f",{"_index":1457,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.map((f",{"_index":1560,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.find((s",{"_index":1743,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.findannotation((a",{"_index":1359,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.findchildparser(predicate",{"_index":1445,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.flags",{"_index":1541,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.forget",{"_index":1061,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.functions[name",{"_index":690,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.get(req.pathwithparams",{"_index":1596,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.getfieldvaluebyattribute",{"_index":546,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects",{"_index":551,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(dataservices",{"_index":565,"title":{},"body":{"classes/Field.html":{}}}],["this.getresponse(req",{"_index":1078,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.handlefetch(req",{"_index":1088,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.handlemutate(req",{"_index":1090,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.handleresponse(resp",{"_index":963,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.headers",{"_index":750,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.headers.get(cache_control",{"_index":2025,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(content_type",{"_index":2013,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(header",{"_index":2021,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.getall(name",{"_index":2007,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.helper.annotations(data",{"_index":647,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.attributes(data",{"_index":656,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.context(this.annotations",{"_index":655,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.count(this.annotations",{"_index":694,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.deltalink(this.annotations",{"_index":698,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.editlink(this.annotations",{"_index":674,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.entities(data",{"_index":692,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.entity(data",{"_index":665,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.etag(this.annotations",{"_index":651,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.functions(this.annotations",{"_index":688,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.id(this.annotations",{"_index":653,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.mediacontenttype(this.annotations",{"_index":680,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.mediaeditlink(this.annotations",{"_index":678,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.mediaetag(this.annotations",{"_index":668,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.mediareadlink(this.annotations",{"_index":676,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.metadataetag(this.annotations",{"_index":670,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.nextlink(this.annotations",{"_index":696,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.properties(this.annotations",{"_index":683,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.property(data",{"_index":660,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.readlink(this.annotations",{"_index":672,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.helper.type(this.annotations",{"_index":662,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.ieee754compatible",{"_index":2070,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.isenumtype",{"_index":1170,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.isexpired(entry",{"_index":1063,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.isfetch(req",{"_index":1087,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.ismatch(entry",{"_index":1068,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.ismutate(req",{"_index":1089,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.isstructuredtype",{"_index":1173,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.keys",{"_index":1426,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.keys().length",{"_index":2211,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.keys.length",{"_index":1462,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.maxage",{"_index":2078,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.maxlength",{"_index":1338,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.members",{"_index":1530,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.metadata",{"_index":2067,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.method",{"_index":1897,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.model",{"_index":2202,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.model.hasownproperty('options",{"_index":2203,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.model.meta",{"_index":2205,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.model.meta.configure",{"_index":2210,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.model.options",{"_index":2204,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.n",{"_index":1825,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.name",{"_index":1117,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.namespace",{"_index":1176,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.namespace}.${this.name",{"_index":1184,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.namespace}.${this.name}'${name",{"_index":1551,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.navigation",{"_index":1344,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.next(odataresponse.fromhttpresponse(this.request",{"_index":911,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.nextlink",{"_index":701,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.nullable",{"_index":1342,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.o[this.n",{"_index":1826,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].filter((v",{"_index":1860,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].length",{"_index":1839,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][0",{"_index":1840,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.observe",{"_index":1907,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.odata.batch(\"trippin\").post(batch",{"_index":2463,"title":{},"body":{"index.html":{}}}],["this.odata.fromjson(json",{"_index":2453,"title":{},"body":{"index.html":{}}}],["this.open",{"_index":1423,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.option(name).clear",{"_index":1818,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options",{"_index":645,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/OptionHandler.html":{}}}],["this.options?.helper",{"_index":643,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.options[k",{"_index":1823,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[key",{"_index":1808,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[name",{"_index":1813,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.optionshelper",{"_index":1161,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parameters",{"_index":1180,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.find((p",{"_index":1198,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.foreach((p",{"_index":1196,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.params",{"_index":748,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.params.keys().length",{"_index":1961,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.parent",{"_index":1436,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.deserialize(value",{"_index":1446,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.fields",{"_index":2214,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parent.keys",{"_index":2216,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parent.serialize(value",{"_index":1451,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.typefor(name",{"_index":1437,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent?.defaults",{"_index":1477,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent?.resolvekey(value",{"_index":1460,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent?.tojsonschema(options",{"_index":1484,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent?.validate(attrs",{"_index":1503,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parse(parser",{"_index":1372,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser",{"_index":1125,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.configure",{"_index":1135,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.defaults",{"_index":2224,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser.deserialize(value",{"_index":1137,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.encode(v",{"_index":1165,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.encode(value",{"_index":1139,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.fields",{"_index":1532,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.parser.fields.filter",{"_index":2215,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser.istypeof(type",{"_index":1132,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.keys",{"_index":2217,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser.resolvekey(attrs",{"_index":2223,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser.return",{"_index":1129,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.parser.serialize(v",{"_index":1164,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.serialize(value",{"_index":1138,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.tojsonschema(options",{"_index":1382,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.validate(attrs",{"_index":2225,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.path",{"_index":1916,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.pathandparams",{"_index":1718,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.precision",{"_index":1346,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.prefer",{"_index":760,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["this.properties[name",{"_index":685,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{}}}],["this.property",{"_index":1327,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.put(req.pathwithparams",{"_index":1594,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.putresponse(req",{"_index":1084,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.queries",{"_index":2419,"title":{},"body":{"index.html":{}}}],["this.referencedproperty",{"_index":1328,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.references",{"_index":550,"title":{},"body":{"classes/Field.html":{}}}],["this.referentials",{"_index":1333,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.referentials.length",{"_index":1419,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.reportprogress",{"_index":1903,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.request.headers",{"_index":897,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.method",{"_index":892,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.pathwithparams",{"_index":893,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.urlwithparams",{"_index":910,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests",{"_index":931,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests.push(new",{"_index":951,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests[index",{"_index":996,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests[this.requests.length",{"_index":953,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.resource",{"_index":1899,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.resource.type",{"_index":2037,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.responsetype",{"_index":1905,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.return",{"_index":1178,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.scale",{"_index":1348,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.schema",{"_index":1116,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.alias",{"_index":1131,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.api",{"_index":1133,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.namespace}.${this.name",{"_index":1128,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schemas",{"_index":564,"title":{},"body":{"classes/Field.html":{}}}],["this.segment.key",{"_index":1754,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.name",{"_index":1748,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.parameters",{"_index":1759,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.path",{"_index":1752,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.type",{"_index":1750,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments",{"_index":1708,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.serialize(value",{"_index":1555,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.service",{"_index":1304,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["this.status",{"_index":2008,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.statustext",{"_index":2009,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.streaming",{"_index":2069,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.stringasenum",{"_index":746,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.stripmetadata",{"_index":754,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["this.structured().validate(value",{"_index":1357,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.structuredtype",{"_index":1330,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.structuredtype.keys?.find((k",{"_index":1416,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.timeout",{"_index":1057,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.tojson(parser",{"_index":1377,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.type",{"_index":610,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.type.startswith('edm",{"_index":1168,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.url",{"_index":2010,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.validate(v",{"_index":1354,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.value",{"_index":1539,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.version",{"_index":545,"title":{},"body":{"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.withcredentials",{"_index":752,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["throw",{"_index":579,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["throwerror",{"_index":1050,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["throwerror('no",{"_index":1080,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["time",{"_index":864,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["timeout",{"_index":1005,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["title",{"_index":1383,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"index.html":{}}}],["todo",{"_index":889,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["tojson",{"_index":1374,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["tojsonschema",{"_index":1558,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["tojsonschema(options",{"_index":1381,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["tokens",{"_index":1630,"title":{},"body":{"modules/ODataModule.html":{}}}],["tools",{"_index":1815,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["top",{"_index":699,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["tort",{"_index":2555,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":818,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["transform",{"_index":1790,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transforms",{"_index":2364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trim",{"_index":2072,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["trippin",{"_index":2418,"title":{},"body":{"index.html":{}}}],["trippinconfig",{"_index":2470,"title":{},"body":{"index.html":{}}}],["trippinmodule",{"_index":2471,"title":{},"body":{"index.html":{}}}],["trips",{"_index":2461,"title":{},"body":{"index.html":{}}}],["true",{"_index":716,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["true}).subscribe(console.log",{"_index":2467,"title":{},"body":{"index.html":{}}}],["try",{"_index":539,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["tslib",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type(undefined",{"_index":1113,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type(value",{"_index":1749,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["type.startswith(this.alias",{"_index":2136,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.startswith(this.namespace",{"_index":2135,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.ts",{"_index":219,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts:1",{"_index":279,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:10",{"_index":274,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:107",{"_index":1571,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:11",{"_index":275,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:115",{"_index":2186,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:12",{"_index":412,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:128",{"_index":2188,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:13",{"_index":410,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:14",{"_index":1537,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:15",{"_index":2175,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:153",{"_index":2178,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:157",{"_index":2192,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:16",{"_index":2169,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:161",{"_index":2179,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:165",{"_index":2191,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:169",{"_index":2177,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:17",{"_index":227,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:173",{"_index":2193,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:177",{"_index":2196,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:18",{"_index":2173,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:19",{"_index":2170,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:20",{"_index":2172,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:21",{"_index":2171,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:22",{"_index":2174,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:23",{"_index":2168,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:24",{"_index":1538,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:26",{"_index":1528,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:3",{"_index":282,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:30",{"_index":269,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:31",{"_index":1310,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:32",{"_index":1309,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:328",{"_index":2233,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:329",{"_index":2234,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:33",{"_index":271,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:330",{"_index":2235,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:331",{"_index":2230,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:332",{"_index":2228,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:333",{"_index":2229,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:334",{"_index":2236,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:335",{"_index":2232,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:336",{"_index":2231,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:337",{"_index":2227,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:34",{"_index":1529,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:35",{"_index":1564,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:358",{"_index":2245,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:36",{"_index":1563,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:364",{"_index":2249,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:371",{"_index":2244,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:38",{"_index":1515,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:383",{"_index":2238,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:39",{"_index":270,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:390",{"_index":2241,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:4",{"_index":281,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:40",{"_index":1867,"title":{},"body":{"classes/ODataReferential.html":{}}}],["type.ts:41",{"_index":1866,"title":{},"body":{"classes/ODataReferential.html":{}}}],["type.ts:415",{"_index":2247,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:42",{"_index":1520,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:440",{"_index":2242,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:445",{"_index":2239,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:45",{"_index":314,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:46",{"_index":315,"title":{},"body":{"classes/CsdlKey.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:461",{"_index":2246,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:487",{"_index":2240,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:49",{"_index":356,"title":{},"body":{"classes/CsdlPropertyRef.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:5",{"_index":283,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:50",{"_index":357,"title":{},"body":{"classes/CsdlPropertyRef.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:506",{"_index":2248,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:51",{"_index":2197,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:53",{"_index":1567,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:54",{"_index":1523,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:548",{"_index":2250,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:55",{"_index":2176,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:58",{"_index":1525,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:6",{"_index":280,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:60",{"_index":1565,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:62",{"_index":1516,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:66",{"_index":1527,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:7",{"_index":1514,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:70",{"_index":1518,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:74",{"_index":1568,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:78",{"_index":2194,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:8",{"_index":411,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:82",{"_index":2184,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:86",{"_index":2183,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:9",{"_index":413,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:90",{"_index":2182,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:91",{"_index":1566,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:94",{"_index":2181,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:98",{"_index":1569,"title":{},"body":{"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{}}}],["typealiases",{"_index":2565,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefinition",{"_index":494,"title":{},"body":{"classes/Field.html":{}}}],["typedefinitions",{"_index":384,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["typefor",{"_index":2226,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["typefor(name",{"_index":1433,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["typeof",{"_index":1355,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataPathSegments.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["types",{"_index":441,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataAnnotations.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["types(undefined",{"_index":1681,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["types.isarray(this.o[this.n",{"_index":1832,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(errors",{"_index":1366,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["types.isempty(key",{"_index":1474,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["types.isempty(this.o[this.n",{"_index":1828,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(this.options[key",{"_index":1807,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(this.segment.key",{"_index":1756,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(this.segment.parameters",{"_index":1761,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(v",{"_index":1861,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(value",{"_index":1483,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["types.isplainobject(data",{"_index":2034,"title":{},"body":{"classes/ODataResponse.html":{}}}],["types.isplainobject(this.o[this.n",{"_index":1845,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isplainobject(v",{"_index":1466,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["types.isplainobject(value",{"_index":1367,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["unchanged",{"_index":2319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":87,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["underlayingtype",{"_index":426,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["underlyingtype",{"_index":277,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["unicode",{"_index":332,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["uniqid",{"_index":2347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniqid(batch_prefix",{"_index":930,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["uniqid(changeset_prefix",{"_index":973,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["uniqid(prefix",{"_index":868,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["united",{"_index":2446,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":921,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["unnamed",{"_index":2348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unpacked",{"_index":2593,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unset",{"_index":2254,"title":{},"body":{"classes/OptionHandler.html":{}}}],["unset(path",{"_index":1858,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["unsuccessful",{"_index":913,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["update",{"_index":1352,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["updating",{"_index":2385,"title":{},"body":{"index.html":{}}}],["uri",{"_index":303,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["url",{"_index":75,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["urls",{"_index":1791,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["urlwithparams",{"_index":1871,"title":{},"body":{"classes/ODataRequest.html":{}}}],["usage",{"_index":2398,"title":{},"body":{"index.html":{}}}],["use",{"_index":2407,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":1636,"title":{},"body":{"modules/ODataModule.html":{}}}],["user",{"_index":1054,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["usevalue",{"_index":1635,"title":{},"body":{"modules/ODataModule.html":{}}}],["using",{"_index":2484,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1311,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["utils/http",{"_index":642,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPropertyAnnotations.html":{},"classes/ODataResponse.html":{}}}],["utils/types",{"_index":442,"title":{},"body":{"classes/Field.html":{},"classes/ODataResponse.html":{}}}],["v",{"_index":1373,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["v4",{"_index":2483,"title":{},"body":{"index.html":{}}}],["v4.0",{"_index":734,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["v[field.name",{"_index":1467,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["val",{"_index":2375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validate",{"_index":1350,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["validate(attrs",{"_index":2195,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["validate(member",{"_index":1570,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["value",{"_index":70,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBaseService.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["value(v",{"_index":1830,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["value).reduce",{"_index":1546,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["value.length",{"_index":1364,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["value.map((v",{"_index":1163,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["value.match(entry.pattern",{"_index":1072,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["value/s",{"_index":74,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["value[f.name",{"_index":1449,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["value[k",{"_index":2220,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["values",{"_index":1673,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["values[index",{"_index":1713,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["van",{"_index":2498,"title":{},"body":{"license.html":{}}}],["var",{"_index":861,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntityTypeKey.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["variables",{"_index":924,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["version",{"_index":46,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["version.replace(/\\;/g",{"_index":2071,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_2_0",{"_index":2059,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_3_0",{"_index":2060,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_4_0",{"_index":444,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataResponseOptions.html":{}}}],["version_4_0].indexof(value",{"_index":2073,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["versions",{"_index":2479,"title":{},"body":{"index.html":{}}}],["viewed",{"_index":2486,"title":{},"body":{"index.html":{}}}],["void",{"_index":85,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["warranties",{"_index":2540,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2535,"title":{},"body":{"license.html":{}}}],["whether",{"_index":2553,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":2490,"title":{},"body":{"index.html":{}}}],["window.addeventlistener",{"_index":1606,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["withcredentials",{"_index":20,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["without",{"_index":1361,"title":{},"body":{"classes/ODataEntityTypeKey.html":{},"classes/ODataReferential.html":{},"classes/ODataStructuredTypeParser.html":{},"license.html":{}}}],["works",{"_index":2473,"title":{},"body":{"index.html":{}}}],["xssi_prefix",{"_index":858,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["yes",{"_index":172,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataBaseService.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiOptions.html":{"url":"interfaces/ApiOptions.html","title":"interface - ApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accept\n                                \n                                \n                                            Optional\n                                        etag\n                                \n                                \n                                            Optional\n                                        fetchPolicy\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        prefer\n                                \n                                \n                                            Optional\n                                        stripMetadata\n                                \n                                \n                                            Optional\n                                        withCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accept\n                                    \n                                \n                                \n                                    \n                                        accept:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPolicy\n                                    \n                                \n                                \n                                    \n                                        fetchPolicy:         FetchPolicy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchPolicy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefer\n                                    \n                                \n                                \n                                    \n                                        prefer:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripMetadata\n                                    \n                                \n                                \n                                    \n                                        stripMetadata:         ODataMetadataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataMetadataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { ODataVersionHelper } from './helper';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  serialize(\n    value: T,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encodes the value/s of a URL parameter or query-string.\n  encode(value: T, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                                \n                                    put\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, ...opts: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { ODataVersionHelper } from './helper';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  serialize(\n    value: T,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encodes the value/s of a URL parameter or query-string.\n  encode(value: T, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAction.html":{"url":"classes/CsdlAction.html","title":"class - CsdlAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                    Optional\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType?: CsdlReturnType, isBound?: boolean, entitySetPath?: string, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlActionImport.html":{"url":"classes/CsdlActionImport.html","title":"class - CsdlActionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlActionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, action: string, entitySet?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotable.html":{"url":"classes/CsdlAnnotable.html","title":"class - CsdlAnnotable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n  constructor(public annotationList?: CsdlAnnotation[]) {}\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n  constructor(\n    public target: string,\n    annotationList: CsdlAnnotation[],\n    public qualifier?: string\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlAnnotation {\n  constructor(public term: string, public qualifier?: string) {}\n}\n\nexport class CsdlTerm {\n  constructor(\n    public name: string,\n    public type: string,\n    public baseTerm?: string,\n    public defaultValue?: string,\n    public appliesTo?: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotation.html":{"url":"classes/CsdlAnnotation.html","title":"class - CsdlAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(term: string, qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            term\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n  constructor(public annotationList?: CsdlAnnotation[]) {}\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n  constructor(\n    public target: string,\n    annotationList: CsdlAnnotation[],\n    public qualifier?: string\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlAnnotation {\n  constructor(public term: string, public qualifier?: string) {}\n}\n\nexport class CsdlTerm {\n  constructor(\n    public name: string,\n    public type: string,\n    public baseTerm?: string,\n    public defaultValue?: string,\n    public appliesTo?: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotations.html":{"url":"classes/CsdlAnnotations.html","title":"class - CsdlAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: string, annotationList: CsdlAnnotation[], qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n  constructor(public annotationList?: CsdlAnnotation[]) {}\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n  constructor(\n    public target: string,\n    annotationList: CsdlAnnotation[],\n    public qualifier?: string\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlAnnotation {\n  constructor(public term: string, public qualifier?: string) {}\n}\n\nexport class CsdlTerm {\n  constructor(\n    public name: string,\n    public type: string,\n    public baseTerm?: string,\n    public defaultValue?: string,\n    public appliesTo?: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlComplexType.html":{"url":"classes/CsdlComplexType.html","title":"class - CsdlComplexType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlComplexType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityContainer.html":{"url":"classes/CsdlEntityContainer.html","title":"class - CsdlEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actionImports\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySets\n                            \n                            \n                                    Public\n                                    Optional\n                                extend\n                            \n                            \n                                    Public\n                                    Optional\n                                functionImports\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                singletons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, extend?: string, entitySets?: CsdlEntitySet[], singletons?: CsdlSingleton[], functionImports?: CsdlFunctionImport[], actionImports?: CsdlActionImport[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extend\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySets\n                                                  \n                                                        \n                                                                        CsdlEntitySet[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        singletons\n                                                  \n                                                        \n                                                                        CsdlSingleton[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionImports\n                                                  \n                                                        \n                                                                    CsdlFunctionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionImports\n                                                  \n                                                        \n                                                                    CsdlActionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlActionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            extend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlFunctionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            singletons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlSingleton[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n  constructor(\n    public name: string,\n    public extend?: string,\n    public entitySets?: CsdlEntitySet[],\n    public singletons?: CsdlSingleton[],\n    public functionImports?: CsdlFunctionImport[],\n    public actionImports?: CsdlActionImport[]\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntitySet.html":{"url":"classes/CsdlEntitySet.html","title":"class - CsdlEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entityType\n                            \n                            \n                                    Public\n                                    Optional\n                                includeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBinding\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, entityType: string, navigationPropertyBinding?: CsdlNavigationPropertyBinding[], includeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBinding\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBinding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n  constructor(\n    public name: string,\n    public entityType: string,\n    public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n    public includeInServiceDocument?: boolean\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityType.html":{"url":"classes/CsdlEntityType.html","title":"class - CsdlEntityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                hasStream\n                            \n                            \n                                    Public\n                                    Optional\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, key?: CsdlKey, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean, hasStream?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        CsdlKey\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasStream\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            hasStream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlKey\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumMember.html":{"url":"classes/CsdlEnumMember.html","title":"class - CsdlEnumMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n  constructor(\n    public name: string,\n    public members: CsdlEnumMember[],\n    public underlyingType?: string,\n    public isFlags?: boolean\n  ) {}\n}\n\nexport class CsdlEnumMember {\n  constructor(public name: string, public value?: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumType.html":{"url":"classes/CsdlEnumType.html","title":"class - CsdlEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                isFlags\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                underlyingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, members: CsdlEnumMember[], underlyingType?: string, isFlags?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        CsdlEnumMember[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlyingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isFlags\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isFlags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumMember[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            underlyingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n  constructor(\n    public name: string,\n    public members: CsdlEnumMember[],\n    public underlyingType?: string,\n    public isFlags?: boolean\n  ) {}\n}\n\nexport class CsdlEnumMember {\n  constructor(public name: string, public value?: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunction.html":{"url":"classes/CsdlFunction.html","title":"class - CsdlFunction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                    Optional\n                                isComposable\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType: CsdlReturnType, isBound?: boolean, entitySetPath?: string, isComposable?: boolean, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isComposable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isComposable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunctionImport.html":{"url":"classes/CsdlFunctionImport.html","title":"class - CsdlFunctionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunctionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                functionName\n                            \n                            \n                                    Public\n                                    Optional\n                                IncludeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, functionName: string, entitySet?: string, IncludeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        IncludeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            functionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            IncludeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlInclude.html":{"url":"classes/CsdlInclude.html","title":"class - CsdlInclude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlInclude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n  constructor(\n    public uri: string,\n    public includes?: CsdlInclude[],\n    public includeAnnotations?: CsdlIncludeAnnotations[],\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlInclude {\n  constructor(public namespace: string, public alias?: string) {}\n}\n\nexport class CsdlIncludeAnnotations {\n  constructor(\n    public termNamespace: string,\n    public qualifier?: string,\n    public targetNamespace?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlIncludeAnnotations.html":{"url":"classes/CsdlIncludeAnnotations.html","title":"class - CsdlIncludeAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlIncludeAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                    Optional\n                                targetNamespace\n                            \n                            \n                                    Public\n                                termNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termNamespace: string, qualifier?: string, targetNamespace?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            targetNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            termNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n  constructor(\n    public uri: string,\n    public includes?: CsdlInclude[],\n    public includeAnnotations?: CsdlIncludeAnnotations[],\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlInclude {\n  constructor(public namespace: string, public alias?: string) {}\n}\n\nexport class CsdlIncludeAnnotations {\n  constructor(\n    public termNamespace: string,\n    public qualifier?: string,\n    public targetNamespace?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlKey.html":{"url":"classes/CsdlKey.html","title":"class - CsdlKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                propertyRefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyRefs: CsdlPropertyRef[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyRefs\n                                                  \n                                                        \n                                                                    CsdlPropertyRef[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyRefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlPropertyRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationProperty.html":{"url":"classes/CsdlNavigationProperty.html","title":"class - CsdlNavigationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                containsTarget\n                            \n                            \n                                    Public\n                                    Optional\n                                onDelete\n                            \n                            \n                                    Public\n                                    Optional\n                                partner\n                            \n                            \n                                    Public\n                                    Optional\n                                referentialConstraints\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, partner?: string, containsTarget?: boolean, referentialConstraints?: CsdlReferentialConstraint[], onDelete?: CsdlOnDelete)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        partner\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        containsTarget\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        referentialConstraints\n                                                  \n                                                        \n                                                                        CsdlReferentialConstraint[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        onDelete\n                                                  \n                                                        \n                                                                        CsdlOnDelete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            containsTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlOnDelete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            partner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            referentialConstraints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReferentialConstraint[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationPropertyBinding.html":{"url":"classes/CsdlNavigationPropertyBinding.html","title":"class - CsdlNavigationPropertyBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationPropertyBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string, target: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlNavigationPropertyBinding {\n  constructor(public path: string, public target: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlOnDelete.html":{"url":"classes/CsdlOnDelete.html","title":"class - CsdlOnDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlOnDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlParameter.html":{"url":"classes/CsdlParameter.html","title":"class - CsdlParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlProperty.html":{"url":"classes/CsdlProperty.html","title":"class - CsdlProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, defaultValue?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlPropertyRef.html":{"url":"classes/CsdlPropertyRef.html","title":"class - CsdlPropertyRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlPropertyRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReference.html":{"url":"classes/CsdlReference.html","title":"class - CsdlReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                includeAnnotations\n                            \n                            \n                                    Public\n                                    Optional\n                                includes\n                            \n                            \n                                    Public\n                                uri\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, includes?: CsdlInclude[], includeAnnotations?: CsdlIncludeAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        includes\n                                                  \n                                                        \n                                                                        CsdlInclude[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeAnnotations\n                                                  \n                                                        \n                                                                    CsdlIncludeAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeAnnotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlIncludeAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlInclude[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n  constructor(\n    public uri: string,\n    public includes?: CsdlInclude[],\n    public includeAnnotations?: CsdlIncludeAnnotations[],\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlInclude {\n  constructor(public namespace: string, public alias?: string) {}\n}\n\nexport class CsdlIncludeAnnotations {\n  constructor(\n    public termNamespace: string,\n    public qualifier?: string,\n    public targetNamespace?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReferentialConstraint.html":{"url":"classes/CsdlReferentialConstraint.html","title":"class - CsdlReferentialConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReferentialConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, referencedProperty: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencedProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referencedProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReturnType.html":{"url":"classes/CsdlReturnType.html","title":"class - CsdlReturnType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReturnType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n  constructor(\n    public name: string,\n    public returnType: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public isComposable?: boolean,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlAction {\n  constructor(\n    public name: string,\n    public returnType?: CsdlReturnType,\n    public isBound?: boolean,\n    public entitySetPath?: string,\n    public parameters?: CsdlParameter[]\n  ) {}\n}\n\nexport class CsdlFunctionImport {\n  constructor(\n    public name: string,\n    public functionName: string,\n    public entitySet?: string,\n    public IncludeInServiceDocument?: boolean\n  ) {}\n}\n\nexport class CsdlActionImport {\n  constructor(\n    public name: string,\n    public action: string,\n    public entitySet?: string\n  ) {}\n}\n\nexport class CsdlParameter {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\nexport class CsdlReturnType {\n  constructor(\n    public type: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSchema.html":{"url":"classes/CsdlSchema.html","title":"class - CsdlSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actions\n                            \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationsList\n                            \n                            \n                                    Public\n                                    Optional\n                                complexTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                entityContainer\n                            \n                            \n                                    Public\n                                    Optional\n                                entityTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                enumTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                functions\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                    Optional\n                                terms\n                            \n                            \n                                    Public\n                                    Optional\n                                typeDefinitions\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        enumTypes\n                                                  \n                                                        \n                                                                        CsdlEnumType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexTypes\n                                                  \n                                                        \n                                                                        CsdlComplexType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypes\n                                                  \n                                                        \n                                                                        CsdlEntityType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functions\n                                                  \n                                                        \n                                                                        CsdlFunction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        CsdlAction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityContainer\n                                                  \n                                                        \n                                                                        CsdlEntityContainer\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeDefinitions\n                                                  \n                                                        \n                                                                        CsdlTypeDefinition[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        terms\n                                                  \n                                                        \n                                                                        CsdlTerm[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationsList\n                                                  \n                                                        \n                                                                    CsdlAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            complexTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlComplexType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            enumTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlFunction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            terms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTerm[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            typeDefinitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTypeDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlAnnotation,\n  CsdlAnnotable,\n  CsdlTerm,\n  CsdlAnnotations,\n} from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n  constructor(\n    public namespace: string,\n    public alias?: string,\n    public enumTypes?: CsdlEnumType[],\n    public complexTypes?: CsdlComplexType[],\n    public entityTypes?: CsdlEntityType[],\n    public functions?: CsdlFunction[],\n    public actions?: CsdlAction[],\n    public entityContainer?: CsdlEntityContainer,\n    public typeDefinitions?: CsdlTypeDefinition[],\n    public terms?: CsdlTerm[],\n    public annotationsList?: CsdlAnnotations[],\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSingleton.html":{"url":"classes/CsdlSingleton.html","title":"class - CsdlSingleton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSingleton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBindings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, navigationPropertyBindings?: CsdlNavigationPropertyBinding[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBindings\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBindings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n  constructor(\n    public name: string,\n    public type: string,\n    public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuralProperty.html":{"url":"classes/CsdlStructuralProperty.html","title":"class - CsdlStructuralProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuralProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n  constructor(\n    public name: string,\n    public type: string,\n    public nullable?: boolean\n  ) {}\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    public defaultValue?: string\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n  constructor(\n    name: string,\n    type: string,\n    nullable?: boolean,\n    public partner?: string,\n    public containsTarget?: boolean,\n    public referentialConstraints?: CsdlReferentialConstraint[],\n    public onDelete?: CsdlOnDelete\n  ) {\n    super(name, type, nullable);\n  }\n}\n\nexport class CsdlReferentialConstraint {\n  constructor(public property: string, public referencedProperty: string) {}\n}\n\nexport class CsdlOnDelete {\n  constructor(public action: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuredType.html":{"url":"classes/CsdlStructuredType.html","title":"class - CsdlStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CsdlProperty,\n  CsdlNavigationProperty,\n} from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n  constructor(\n    public name: string,\n    public properties?: CsdlProperty[],\n    public navigationProperties?: CsdlNavigationProperty[],\n    public baseType?: string,\n    public openType?: boolean,\n    public abstract?: boolean\n  ) {}\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n  constructor(\n    name: string,\n    public key?: CsdlKey,\n    properties?: CsdlProperty[],\n    navigationProperties?: CsdlNavigationProperty[],\n    baseType?: string,\n    openType?: boolean,\n    abstract?: boolean,\n    public hasStream?: boolean\n  ) {\n    super(name, properties, navigationProperties, baseType, openType, abstract);\n  }\n}\n\nexport class CsdlKey {\n  constructor(public propertyRefs: CsdlPropertyRef[]) {}\n}\n\nexport class CsdlPropertyRef {\n  constructor(public name: string, public alias?: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTerm.html":{"url":"classes/CsdlTerm.html","title":"class - CsdlTerm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTerm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appliesTo\n                            \n                            \n                                    Public\n                                    Optional\n                                baseTerm\n                            \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, baseTerm?: string, defaultValue?: string, appliesTo?: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseTerm\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        appliesTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appliesTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n  constructor(public annotationList?: CsdlAnnotation[]) {}\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n  constructor(\n    public target: string,\n    annotationList: CsdlAnnotation[],\n    public qualifier?: string\n  ) {\n    super(annotationList);\n  }\n}\n\nexport class CsdlAnnotation {\n  constructor(public term: string, public qualifier?: string) {}\n}\n\nexport class CsdlTerm {\n  constructor(\n    public name: string,\n    public type: string,\n    public baseTerm?: string,\n    public defaultValue?: string,\n    public appliesTo?: string,\n    public nullable?: boolean,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public srid?: string\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTypeDefinition.html":{"url":"classes/CsdlTypeDefinition.html","title":"class - CsdlTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                underlayingType\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, underlayingType: string, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlayingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            underlayingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n  constructor(\n    public name: string,\n    public underlayingType: string,\n    public maxLength?: number,\n    public precision?: number,\n    public scale?: number,\n    public unicode?: boolean,\n    public srid?: string,\n    annotationList?: CsdlAnnotation[]\n  ) {\n    super(annotationList);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/metadata.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldType\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, fieldType: FieldType)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldType\n                                                  \n                                                        \n                                                                        FieldType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Types } from '../../utils/types';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport {\n  CsdlEntityType,\n  CsdlPropertyRef,\n  CsdlKey,\n  CsdlComplexType,\n} from './csdl/csdl-structured-type';\nimport {\n  CsdlFunction,\n  CsdlParameter,\n  CsdlFunctionImport,\n  CsdlActionImport,\n  CsdlReturnType,\n  CsdlAction,\n} from './csdl/csdl-function-action';\nimport {\n  CsdlProperty,\n  CsdlNavigationProperty,\n  CsdlReferentialConstraint,\n  CsdlOnDelete,\n} from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport {\n  CsdlReference,\n  CsdlInclude,\n  CsdlIncludeAnnotations,\n} from './csdl/csdl-reference';\nimport {\n  CsdlAnnotation,\n  CsdlTerm,\n  CsdlAnnotations,\n} from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\nimport { VERSION_4_0 } from '../../constants';\n\nenum FieldType {\n  ATTRIBUTE,\n  TAG,\n}\n\nclass Field {\n  constructor(public name: string, public fieldType: FieldType) {}\n}\n\nexport class ODataMetadata {\n  // TAGS\n  private static readonly TAG_EDMX = 'edmx:Edmx';\n  private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n  private static readonly TAG_REFERENCE = 'edmx:Reference';\n  private static readonly TAG_INCLUDE = 'edmx:Include';\n  private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n  private static readonly TAG_TERM = 'Term';\n  private static readonly TAG_ANNOTATIONS = 'Annotations';\n  private static readonly TAG_ANNOTATION = 'Annotation';\n  private static readonly TAG_SCHEMA = 'Schema';\n  private static readonly TAG_ENUM_TYPE = 'EnumType';\n  private static readonly TAG_MEMBER = 'Member';\n  private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n  private static readonly TAG_ENTITY_TYPE = 'EntityType';\n  private static readonly TAG_PROPERTY = 'Property';\n  private static readonly TAG_KEY = 'Key';\n  private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n  private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n  private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n  private static readonly TAG_ON_DELETE = 'OnDelete';\n  private static readonly TAG_FUNCTION = 'Function';\n  private static readonly TAG_RETURN_TYPE = 'ReturnType';\n  private static readonly TAG_PARAMETER = 'Parameter';\n  private static readonly TAG_ACTION = 'Action';\n  private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n  private static readonly TAG_ENTITY_SET = 'EntitySet';\n  private static readonly TAG_SINGLETON = 'Singleton';\n  private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n  private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n  private static readonly TAG_NAVIGATION_PROPERTY_BINDING =\n    'NavigationPropertyBinding';\n  private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n  // ATTRIBUTES\n  private static readonly ATTRIBUTE_VERSION = 'Version';\n  private static readonly ATTRIBUTE_URI = 'Uri';\n  private static readonly ATTRIBUTE_ALIAS = 'Alias';\n  private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n  private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n  private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n  private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n  private static readonly ATTRIBUTE_TERM = 'Term';\n  private static readonly ATTRIBUTE_NAME = 'Name';\n  private static readonly ATTRIBUTE_VALUE = 'Value';\n  private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n  private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n  private static readonly ATTRIBUTE_TYPE = 'Type';\n  private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n  private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n  private static readonly ATTRIBUTE_PRECISION = 'Precision';\n  private static readonly ATTRIBUTE_SCALE = 'Scale';\n  private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n  private static readonly ATTRIBUTE_SRID = 'SRID';\n  private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n  private static readonly ATTRIBUTE_PARTNER = 'Partner';\n  private static readonly ATTRIBUTE_PROPERTY = 'Property';\n  private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n  private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n  private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n  private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n  private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n  private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n  private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n  private static readonly ATTRIBUTE_PATH = 'Path';\n  private static readonly ATTRIBUTE_TARGET = 'Target';\n  private static readonly ATTRIBUTE_FUNCTION = 'Function';\n  private static readonly ATTRIBUTE_ACTION = 'Action';\n  private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n  private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT =\n    'IncludeInServiceDocument';\n  private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n  private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n  private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n  private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n  private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n  private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n  public readonly version: string;\n  public readonly references: CsdlReference[];\n  public readonly schemas: CsdlSchema[];\n\n  constructor(xml: string) {\n    try {\n      const parser: DOMParser = new DOMParser();\n      const document: Document = parser.parseFromString(xml, 'text/xml');\n\n      this.checkVersion(document);\n\n      this.version = this.getFieldValueByAttribute(\n        new Field(ODataMetadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n        document.documentElement.attributes\n      );\n\n      this.references = this.getObjects(\n        document.documentElement,\n        ODataMetadata.TAG_REFERENCE,\n        [\n          new Field(ODataMetadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n          new Field(ODataMetadata.TAG_INCLUDE, FieldType.TAG),\n          new Field(ODataMetadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n          new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG),\n        ]\n      );\n\n      const dataServices: Element =\n        document.documentElement.getElementsByTagName(\n          ODataMetadata.TAG_DATA_SERVICES\n        )[0];\n      this.schemas = this.getObjects(dataServices, ODataMetadata.TAG_SCHEMA, [\n        new Field(ODataMetadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n        new Field(ODataMetadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n        new Field(ODataMetadata.TAG_ENUM_TYPE, FieldType.TAG),\n        new Field(ODataMetadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ENTITY_TYPE, FieldType.TAG),\n        new Field(ODataMetadata.TAG_FUNCTION, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ACTION, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n        new Field(ODataMetadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n        new Field(ODataMetadata.TAG_TERM, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ANNOTATIONS, FieldType.TAG),\n        new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG),\n      ]);\n    } catch (error) {\n      throw new Error('Unable to parse metadata, ' + error);\n    }\n  }\n\n  protected checkVersion(document: Document) {\n    // check version\n    const attributes: NamedNodeMap = document.documentElement.attributes;\n    if (!attributes) {\n      throw new Error('OData version is not specified in the metadata');\n    }\n    const attr: Attr | null = attributes.getNamedItem('Version');\n    if (attr === null) {\n      throw new Error('OData version is not specified in the metadata');\n    }\n    const odataVersion = attr?.nodeValue;\n    if (odataVersion !== VERSION_4_0) {\n      throw new Error('OData version \"' + odataVersion + '\" is not supported');\n    }\n  }\n\n  protected getObjects(\n    parentElement: Element,\n    tag: string,\n    fieldNames: Field[]\n  ): any[] {\n    let objects: any[] = [];\n\n    const children: HTMLCollection = parentElement.children;\n    for (let index = 0; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotation.html":{"url":"classes/ODataAnnotation.html","title":"class - ODataAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bool\n                            \n                            \n                                    Optional\n                                int\n                            \n                            \n                                    Optional\n                                permissions\n                            \n                            \n                                    Optional\n                                properties\n                            \n                            \n                                    Optional\n                                string\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annot: AnnotationConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/annotation.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annot\n                                                  \n                                                        \n                                                                        AnnotationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            int\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            string\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AnnotationConfig } from '../types';\n\nexport class ODataAnnotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n  constructor(annot: AnnotationConfig) {\n    this.type = annot.type;\n    Object.assign(this, annot);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotations.html":{"url":"classes/ODataAnnotations.html","title":"class - ODataAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attributes\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                                \n                                    context\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataContext\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attributes\n                        \n                        \n                    \n                \n            \n            \n                \nattributes(data: literal type, metadata: ODataMetadataType)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:51\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                ODataMetadataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n\n                \n                    \n                        getcontext()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport {\n  DEFAULT_VERSION,\n  ETAG_HEADERS,\n  ODATA_ENTITYID_HEADERS,\n} from '../../constants';\nimport { ODataContext, ODataHelper } from '../../helper';\nimport { OptionsHelper, ODataMetadataType } from '../../types';\nimport { Http } from '../../utils/http';\n\nexport abstract class ODataAnnotations {\n  annotations: { [annot: string]: any };\n  options?: OptionsHelper;\n  protected get helper() {\n    return this.options?.helper || ODataHelper[DEFAULT_VERSION];\n  }\n  constructor({\n    data = {},\n    options,\n    headers,\n  }: {\n    data?: { [name: string]: any };\n    options?: OptionsHelper;\n    headers?: HttpHeaders;\n  } = {}) {\n    this.options = options;\n    this.annotations = this.options ? this.helper.annotations(data) : data;\n    if (headers) {\n      let header = Http.resolveHeaderKey(headers, ETAG_HEADERS);\n      if (header) {\n        const etag = headers.get(header);\n        if (etag) this.helper.etag(this.annotations, etag);\n      }\n      header = Http.resolveHeaderKey(headers, ODATA_ENTITYID_HEADERS);\n      if (header) {\n        const entityId = headers.get(header);\n        if (entityId) this.helper.id(this.annotations, entityId);\n      }\n    }\n  }\n\n  // Context\n  private _context?: ODataContext;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.helper.context(this.annotations);\n    }\n    return this._context;\n  }\n\n  attributes(data: { [name: string]: any }, metadata: ODataMetadataType): T {\n    return this.helper.attributes(data, metadata) as T;\n  }\n\n  // Method\n  abstract clone(): ODataAnnotations;\n  abstract data(data: { [name: string]: any }): { [name: string]: any };\n}\n\nexport class ODataPropertyAnnotations extends ODataAnnotations {\n  clone(): ODataPropertyAnnotations {\n    return new ODataPropertyAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.property(data, this.context);\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context.type;\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entity(data, this.context);\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context.type;\n  }\n\n  get id() {\n    return this.helper.id(this.annotations);\n  }\n\n  get etag() {\n    return this.helper.etag(this.annotations);\n  }\n\n  get mediaEtag() {\n    return this.helper.mediaEtag(this.annotations);\n  }\n\n  get metadataEtag() {\n    return this.helper.metadataEtag(this.annotations);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get editLink() {\n    return this.helper.editLink(this.annotations);\n  }\n\n  get mediaReadLink() {\n    return this.helper.mediaReadLink(this.annotations);\n  }\n\n  get mediaEditLink() {\n    return this.helper.mediaEditLink(this.annotations);\n  }\n\n  get mediaContentType() {\n    return this.helper.mediaContentType(this.annotations);\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.helper.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entities(data, this.context);\n  }\n  get type() {\n    return this.context.type;\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.helper.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.helper.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.helper.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataApiOptions.html":{"url":"classes/ODataApiOptions.html","title":"class - ODataApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ApiOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                accept\n                            \n                            \n                                etag\n                            \n                            \n                                fetchPolicy\n                            \n                            \n                                headers\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                prefer\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                stripMetadata\n                            \n                            \n                                version\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/options.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            accept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            etag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : { ifMatch: true, ifNoneMatch: false }\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FetchPolicy\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            prefer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stripMetadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/options.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  DEFAULT_FETCH_POLICY,\n  DEFAULT_STRIP_METADATA,\n  DEFAULT_VERSION,\n} from './constants';\nimport { ODataHelper } from './helper';\nimport {\n  ApiOptions,\n  FetchPolicy,\n  ODataMetadataType,\n  ODataVersion,\n  OptionsHelper,\n} from './types';\n\nexport class ODataApiOptions implements ApiOptions, OptionsHelper {\n  version: ODataVersion;\n  stringAsEnum?: boolean;\n  stripMetadata: ODataMetadataType;\n  fetchPolicy: FetchPolicy;\n  streaming?: boolean;\n  // Http\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  accept?: {\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n  };\n  etag: {\n    //http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398229\n    ifMatch: boolean;\n    //http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398230\n    ifNoneMatch: boolean;\n  } = { ifMatch: true, ifNoneMatch: false };\n  prefer?: {\n    //http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398238\n    maxPageSize?: number;\n    //http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398240\n    return?: 'representation' | 'minimal';\n    //http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398236\n    continueOnError?: boolean;\n    //http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part1-protocol/odata-v4.0-errata02-os-part1-protocol-complete.html#_Toc406398237\n    includeAnnotations?: string;\n  };\n\n  constructor(config: ApiOptions) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.stringAsEnum = config.stringAsEnum;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.withCredentials = config.withCredentials;\n    this.stripMetadata = config.stripMetadata || DEFAULT_STRIP_METADATA;\n    this.fetchPolicy = config.fetchPolicy || DEFAULT_FETCH_POLICY;\n    this.accept = config.accept;\n    this.prefer = config.prefer;\n    Object.assign(this.etag, config.etag || {});\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBaseService.html":{"url":"classes/ODataBaseService.html","title":"class - ODataBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, name: string, apiNameOrEntityType?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/base.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiNameOrEntityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:66\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:78\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType: \"property\" | \"entity\" | \"entities\" | \"none\", options: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:90\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"property\" | \"entity\" | \"entities\" | \"none\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:35\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:41\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType: \"property\" | \"entity\" | \"entities\" | \"none\", options: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:53\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"property\" | \"entity\" | \"entities\" | \"none\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fetchNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: HttpNavigationPropertyOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:103\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpNavigationPropertyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fetchNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: HttpNavigationPropertyOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:108\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpNavigationPropertyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fetchNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType: \"entity\" | \"entities\", options: HttpNavigationPropertyOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:113\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"entity\" | \"entities\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                HttpNavigationPropertyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/base.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  ODataActionResource,\n  ODataFunctionResource,\n  ODataNavigationPropertyResource,\n  ODataEntity,\n  ODataEntities,\n  ODataProperty,\n} from '../resources';\nimport {\n  HttpActionOptions,\n  HttpFunctionOptions,\n  HttpNavigationPropertyOptions,\n} from './options';\nimport { ODataClient } from '../client';\nimport { Observable } from 'rxjs';\n\nexport abstract class ODataBaseService {\n  constructor(\n    protected client: ODataClient,\n    protected name: string,\n    protected apiNameOrEntityType?: string\n  ) {}\n\n  // Api Config\n  get api() {\n    return this.client.apiFor(this.apiNameOrEntityType);\n  }\n\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'entity',\n    options?: HttpFunctionOptions\n  ): Observable>;\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'entities',\n    options?: HttpFunctionOptions\n  ): Observable>;\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'property',\n    options?: HttpFunctionOptions\n  ): Observable>;\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'none',\n    options?: HttpFunctionOptions\n  ): Observable;\n  protected callFunction(\n    params: P | null,\n    resource: ODataFunctionResource,\n    responseType: 'property' | 'entity' | 'entities' | 'none',\n    options: HttpFunctionOptions = {}\n  ): Observable {\n    resource.query.apply(options);\n    return resource.call(params, {\n      responseType: responseType as any,\n      ...options,\n    });\n  }\n\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'entity',\n    options?: HttpActionOptions\n  ): Observable>;\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'entities',\n    options?: HttpActionOptions\n  ): Observable>;\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'property',\n    options?: HttpActionOptions\n  ): Observable>;\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'none',\n    options?: HttpActionOptions\n  ): Observable;\n  protected callAction(\n    params: P | null,\n    resource: ODataActionResource,\n    responseType: 'property' | 'entity' | 'entities' | 'none',\n    options: HttpActionOptions = {}\n  ): Observable {\n    resource.query.apply(options);\n    return resource.call(params, {\n      responseType: responseType as any,\n      ...options,\n    });\n  }\n\n  protected fetchNavigationProperty(\n    resource: ODataNavigationPropertyResource,\n    responseType: 'entity',\n    options?: HttpNavigationPropertyOptions\n  ): Observable>;\n  protected fetchNavigationProperty(\n    resource: ODataNavigationPropertyResource,\n    responseType: 'entities',\n    options?: HttpNavigationPropertyOptions\n  ): Observable>;\n  protected fetchNavigationProperty(\n    resource: ODataNavigationPropertyResource,\n    responseType: 'entity' | 'entities',\n    options: HttpNavigationPropertyOptions = {}\n  ): Observable {\n    resource.query.apply(options);\n    return resource.fetch({ responseType: responseType as any, ...options });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatchRequest.html":{"url":"classes/ODataBatchRequest.html","title":"class - ODataBatchRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatchRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/batch.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: ODataRequest)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/batch.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        ODataRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataRequest\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:77\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonLoad(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  HttpHeaders,\n  HttpErrorResponse,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataResource } from '../resource';\nimport {\n  BOUNDARY_PREFIX_SUFFIX,\n  APPLICATION_JSON,\n  HTTP11,\n  CONTENT_TYPE,\n  NEWLINE,\n  BATCH_PREFIX,\n  $BATCH,\n  MULTIPART_MIXED_BOUNDARY,\n  VERSION_4_0,\n  MULTIPART_MIXED,\n  ODATA_VERSION,\n  ACCEPT,\n  CONTENT_TRANSFER_ENCODING,\n  APPLICATION_HTTP,\n  CONTENT_ID,\n  BINARY,\n  CHANGESET_PREFIX,\n  NEWLINE_REGEXP,\n} from '../../constants';\nimport { ODataRequest } from '../request';\nimport { ODataApi } from '../../api';\nimport { ODataResponse } from '../responses';\nimport { HttpOptions } from './options';\nimport { Http } from '../../utils/http';\n\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\n// From https://github.com/adamhalasz/uniqid\nvar glast: number;\nfunction now() {\n  let time = Date.now();\n  let last = glast || time;\n  return (glast = time > last ? time : last + 1);\n}\nfunction uniqid(prefix?: string, suffix?: string): string {\n  return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : '');\n}\n\nfunction getHeaderValue(header: string): string {\n  let res: string = header.split(';')[0].trim();\n  res = res.split(':')[1].trim();\n  return res;\n}\n\nfunction getBoundaryDelimiter(contentType: string): string {\n  const contentTypeParts: string[] = contentType.split(';');\n  if (contentTypeParts.length === 2) {\n    const boundary: string = contentType.split(';')[1].trim();\n    const boundaryDelimiter: string =\n      BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n    return boundaryDelimiter;\n  } else {\n    return '';\n  }\n}\n\nfunction getBoundaryEnd(boundaryDelimiter: string): string {\n  if (!boundaryDelimiter.length) {\n    return '';\n  }\n  const boundaryEnd: string = boundaryDelimiter + BOUNDARY_PREFIX_SUFFIX;\n  return boundaryEnd;\n}\n\nexport class ODataBatchRequest extends Subject> {\n  constructor(public request: ODataRequest) {\n    super();\n  }\n\n  toString() {\n    //TODO: Relative or Absolute url ?\n    let res = [\n      `${this.request.method} ${this.request.pathWithParams} ${HTTP11}`,\n    ];\n    if (\n      this.request.method === 'POST' ||\n      this.request.method === 'PATCH' ||\n      this.request.method === 'PUT'\n    ) {\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_JSON}`);\n    }\n\n    if (this.request.headers instanceof HttpHeaders) {\n      let headers = this.request.headers;\n      res = [\n        ...res,\n        ...headers\n          .keys()\n          .map((key) => `${key}: ${(headers.getAll(key) || []).join(',')}`),\n      ];\n    }\n\n    return res.join(NEWLINE);\n  }\n\n  onLoad(content: string[], status: { code: number; text: string }) {\n    let headers: HttpHeaders = new HttpHeaders();\n    var index = 1;\n    for (; index = 200 && status.code ({\n        body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams,\n      });\n      this.next(ODataResponse.fromHttpResponse(this.request, res));\n      this.complete();\n    } else {\n      // An unsuccessful request is delivered on the error channel.\n      this.error(\n        new HttpErrorResponse({\n          // The error in this case is the response body (error from the server).\n          error: body,\n          headers,\n          status: status.code,\n          statusText: status.text,\n          url: this.request.urlWithParams,\n        })\n      );\n    }\n  }\n\n  onError(content: string[], status: { code: number; text: string }) {\n    const res = new HttpErrorResponse({\n      error: content.join(NEWLINE),\n      status: status.code || 0,\n      statusText: status.text || 'Unknown Error',\n      url: this.request.urlWithParams || undefined,\n    });\n    this.error(res);\n  }\n}\n\nexport class ODataBatchResource extends ODataResource {\n  // VARIABLES\n  private requests: ODataBatchRequest[];\n  batchBoundary: string;\n\n  constructor(api: ODataApi, segments?: ODataPathSegments) {\n    super(api, segments);\n    this.batchBoundary = uniqid(BATCH_PREFIX);\n    this.requests = [];\n  }\n\n  clone() {\n    //TODO: Clone\n    return new ODataBatchResource(this.api, this.cloneSegments());\n  }\n\n  schema() {\n    return undefined;\n  }\n\n  //#region Factory\n  static factory(api: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.add(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(api, segments);\n  }\n  //#endregion\n\n  post(\n    func: (batch: ODataBatchResource) => void,\n    options?: HttpOptions\n  ): Observable> {\n    const current = this.api.request;\n    this.api.request = (req: ODataRequest): Observable => {\n      if (req.api !== this.api)\n        throw new Error('Batch Request are for the same api.');\n      if (req.observe === 'events')\n        throw new Error(\"Batch Request does not allows observe == 'events'.\");\n      this.requests.push(new ODataBatchRequest(req));\n      return this.requests[this.requests.length - 1];\n    };\n    try {\n      func(this);\n    } finally {\n      this.api.request = current;\n    }\n\n    const headers = Http.mergeHttpHeaders((options && options.headers) || {}, {\n      [ODATA_VERSION]: VERSION_4_0,\n      [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + this.batchBoundary,\n      [ACCEPT]: MULTIPART_MIXED,\n    });\n    const request = new ODataRequest({\n      method: 'POST',\n      body: this.body(),\n      api: this.api,\n      resource: this,\n      observe: 'response',\n      responseType: 'text',\n      headers: headers,\n      params: options ? options.params : undefined,\n      withCredentials: options ? options.withCredentials : undefined,\n    });\n\n    return this.api.request(request).pipe(\n      map((resp: ODataResponse) => {\n        this.handleResponse(resp);\n        return resp;\n      })\n    );\n  }\n\n  body(): string {\n    let res = [];\n    let changesetBoundary: string | null = null;\n    let changesetId = 1;\n\n    for (const batch of this.requests) {\n      // if method is GET and there is a changeset boundary open then close it\n      if (batch.request.method === 'GET' && changesetBoundary !== null) {\n        res.push(\n          `${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`\n        );\n        changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (changesetBoundary === null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}`);\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (batch.request.method !== 'GET') {\n        if (changesetBoundary === null) {\n          changesetBoundary = uniqid(CHANGESET_PREFIX);\n          res.push(\n            `${CONTENT_TYPE}: ${MULTIPART_MIXED_BOUNDARY}${changesetBoundary}`\n          );\n          res.push(NEWLINE);\n        }\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}`);\n      }\n\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_HTTP}`);\n      res.push(`${CONTENT_TRANSFER_ENCODING}: ${BINARY}`);\n\n      if (batch.request.method !== 'GET') {\n        res.push(`${CONTENT_ID}: ${changesetId++}`);\n      }\n\n      res.push(NEWLINE);\n      res.push(`${batch}`);\n\n      if (batch.request.method === 'GET' || batch.request.method === 'DELETE') {\n        res.push(NEWLINE);\n      } else {\n        res.push(`${NEWLINE}${JSON.stringify(batch.request.body)}`);\n      }\n    }\n\n    if (res.length) {\n      if (changesetBoundary !== null) {\n        res.push(\n          `${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`\n        );\n        changesetBoundary = null;\n      }\n      res.push(\n        `${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}${BOUNDARY_PREFIX_SUFFIX}`\n      );\n    }\n    return res.join(NEWLINE);\n  }\n\n  handleResponse(response: ODataResponse) {\n    let chunks: string[][] = [];\n    const contentType: string = response.headers.get(CONTENT_TYPE) || '';\n    const batchBoundary: string = getBoundaryDelimiter(contentType);\n    const endLine: string = getBoundaryEnd(batchBoundary);\n\n    const lines: string[] = response.body.split(NEWLINE_REGEXP);\n\n    let changesetResponses: string[][] | null = null;\n    let contentId: number | null = null;\n    let changesetBoundary: string | null = null;\n    let changesetEndLine: string | null = null;\n    let startIndex: number | null = null;\n    for (let index = 0; index  {\n      const req = this.requests[index];\n      const statusParts = chunk[0].split(' ');\n      req.onLoad(chunk.slice(1), {\n        code: Number(statusParts[1]),\n        text: statusParts.slice(2).join(' '),\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCache.html":{"url":"classes/ODataCache.html","title":"class - ODataCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Cache\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEntry\n                            \n                            \n                                flush\n                            \n                            \n                                forget\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                    Private\n                                handleFetch\n                            \n                            \n                                    Private\n                                handleMutate\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                isFetch\n                            \n                            \n                                isMatch\n                            \n                            \n                                isMutate\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/cache.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCacheEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            flush\n                        \n                        \n                    \n                \n            \n            \n                \nflush()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forget\n                        \n                        \n                    \n                \n            \n            \n                \nforget(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleFetch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFetch(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMutate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMutate(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isFetch\n                        \n                        \n                    \n                \n            \n            \n                \nisFetch(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMatch\n                        \n                        \n                    \n                \n            \n            \n                \nisMatch(entry: ODataCacheEntry, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMutate\n                        \n                        \n                    \n                \n            \n            \n                \nisMutate(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\n//TODO: User cache? Tags cache?\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  pattern?: string;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor({ timeout = DEFAULT_TIMEOUT }: { timeout?: number }) {\n    this.timeout = timeout;\n    this.entries = new Map>();\n  }\n\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(\n    payload: T,\n    { timeout, pattern }: { timeout?: number; pattern?: string }\n  ): ODataCacheEntry {\n    return {\n      payload,\n      lastRead: Date.now(),\n      pattern,\n      timeout,\n    };\n  }\n\n  put(\n    key: string,\n    payload: T,\n    { timeout, pattern }: { timeout?: number; pattern?: string }\n  ) {\n    const entry = this.buildEntry(payload, { timeout, pattern });\n    this.entries.set(key, entry);\n    this.forget();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry)\n      ? entry.payload\n      : undefined;\n  }\n\n  forget({ name }: { name?: string } = {}) {\n    // Remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (\n        this.isExpired(entry) || // Expired\n        (name && this.isMatch(entry, name)) // Match\n      )\n        this.entries.delete(key);\n    });\n  }\n\n  flush() {\n    // Remove all cache entries\n    this.entries = new Map>();\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead , value: string) {\n    return entry.pattern !== undefined && value.match(entry.pattern);\n  }\n\n  isCacheable(req: ODataRequest) {\n    return req.observe === 'response';\n  }\n\n  isFetch(req: ODataRequest) {\n    return ['GET'].indexOf(req.method) !== -1;\n  }\n\n  isMutate(req: ODataRequest) {\n    return ['PUT', 'PATCH', 'POST', 'DELETE'].indexOf(req.method) !== -1;\n  }\n\n  private handleFetch(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError('No Cached');\n      }\n    }\n    if (\n      policy === 'cache-first' ||\n      policy === 'cache-and-network' ||\n      policy === 'network-only'\n    ) {\n      res$ = res$.pipe(\n        tap((res: ODataResponse) => {\n          if (res.options.cacheability !== 'no-store')\n            this.putResponse(req, res);\n        })\n      );\n    }\n    return cached !== undefined && policy !== 'network-only'\n      ? policy === 'cache-and-network'\n        ? res$.pipe(startWith(cached))\n        : of(cached)\n      : res$;\n  }\n\n  private handleMutate(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    this.forget({ name: req.path });\n    return res$;\n  }\n\n  handleRequest(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    return this.isFetch(req)\n      ? this.handleFetch(req, res$)\n      : this.isMutate(req)\n      ? this.handleMutate(req, res$)\n      : res$;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ODataCacheEntry.html":{"url":"interfaces/ODataCacheEntry.html","title":"interface - ODataCacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ODataCacheEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastRead\n                                \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                        payload\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\n//TODO: User cache? Tags cache?\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  pattern?: string;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor({ timeout = DEFAULT_TIMEOUT }: { timeout?: number }) {\n    this.timeout = timeout;\n    this.entries = new Map>();\n  }\n\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(\n    payload: T,\n    { timeout, pattern }: { timeout?: number; pattern?: string }\n  ): ODataCacheEntry {\n    return {\n      payload,\n      lastRead: Date.now(),\n      pattern,\n      timeout,\n    };\n  }\n\n  put(\n    key: string,\n    payload: T,\n    { timeout, pattern }: { timeout?: number; pattern?: string }\n  ) {\n    const entry = this.buildEntry(payload, { timeout, pattern });\n    this.entries.set(key, entry);\n    this.forget();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry)\n      ? entry.payload\n      : undefined;\n  }\n\n  forget({ name }: { name?: string } = {}) {\n    // Remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (\n        this.isExpired(entry) || // Expired\n        (name && this.isMatch(entry, name)) // Match\n      )\n        this.entries.delete(key);\n    });\n  }\n\n  flush() {\n    // Remove all cache entries\n    this.entries = new Map>();\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead , value: string) {\n    return entry.pattern !== undefined && value.match(entry.pattern);\n  }\n\n  isCacheable(req: ODataRequest) {\n    return req.observe === 'response';\n  }\n\n  isFetch(req: ODataRequest) {\n    return ['GET'].indexOf(req.method) !== -1;\n  }\n\n  isMutate(req: ODataRequest) {\n    return ['PUT', 'PATCH', 'POST', 'DELETE'].indexOf(req.method) !== -1;\n  }\n\n  private handleFetch(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError('No Cached');\n      }\n    }\n    if (\n      policy === 'cache-first' ||\n      policy === 'cache-and-network' ||\n      policy === 'network-only'\n    ) {\n      res$ = res$.pipe(\n        tap((res: ODataResponse) => {\n          if (res.options.cacheability !== 'no-store')\n            this.putResponse(req, res);\n        })\n      );\n    }\n    return cached !== undefined && policy !== 'network-only'\n      ? policy === 'cache-and-network'\n        ? res$.pipe(startWith(cached))\n        : of(cached)\n      : res$;\n  }\n\n  private handleMutate(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    this.forget({ name: req.path });\n    return res$;\n  }\n\n  handleRequest(\n    req: ODataRequest,\n    res$: Observable>\n  ): Observable> {\n    return this.isFetch(req)\n      ? this.handleFetch(req, res$)\n      : this.isMutate(req)\n      ? this.handleMutate(req, res$)\n      : res$;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallable.html":{"url":"classes/ODataCallable.html","title":"class - ODataCallable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bound\n                            \n                            \n                                    Optional\n                                composable\n                            \n                            \n                                    Optional\n                                entitySetPath\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                path\n                            \n                            \n                                serialize\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            composable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallableParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \nencode(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:46\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Parser, CallableConfig, OptionsHelper } from '../types';\nimport { ODataSchema } from './schema';\nimport { ODataCallableParser } from '../parsers';\n\nexport class ODataCallable {\n  schema: ODataSchema;\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parser: ODataCallableParser;\n\n  constructor(config: CallableConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entitySetPath = config.entitySetPath;\n    this.bound = config.bound;\n    this.composable = config.composable;\n    this.parser = new ODataCallableParser(\n      config,\n      schema.namespace,\n      schema.alias\n    );\n  }\n\n  path() {\n    let path: string;\n    if (this.entitySetPath) path = this.entitySetPath;\n    else if (this.bound) path = `${this.schema.namespace}.${this.name}`;\n    else\n      path = this.parser.return\n        ? this.api.findEntitySetForType(this.parser.return.type)?.name ||\n          this.name\n        : this.name;\n    return path;\n  }\n\n  type({ alias = false }: { alias?: boolean } = {}) {\n    return `${alias ? this.schema.alias : this.schema.namespace}.${this.name}`;\n  }\n\n  isTypeOf(type: string) {\n    return this.parser.isTypeOf(type);\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  configure({\n    parserForType,\n  }: {\n    parserForType: (type: string) => Parser;\n  }) {\n    this.parser.configure({ options: this.api.options, parserForType });\n  }\n\n  deserialize(value: any): any {\n    return this.parser.deserialize(value, this.api.options);\n  }\n\n  serialize(value: any): any {\n    return this.parser.serialize(value, this.api.options);\n  }\n\n  encode(value: any): any {\n    return this.parser.encode(value, this.api.options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallableParser.html":{"url":"classes/ODataCallableParser.html","title":"class - ODataCallableParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallableParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                    Optional\n                                optionsHelper\n                            \n                            \n                                parameters\n                            \n                            \n                                parser\n                            \n                            \n                                    Optional\n                                return\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                binding\n                            \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            optionsHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataParameterParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            return\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:82\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            binding\n                        \n                        \n                    \n                \n            \n            \n                \nbinding()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \nencode(params: any, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(params: any, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CALLABLE_BINDING_PARAMETER } from '../constants';\nimport {\n  Parser,\n  Parameter,\n  CallableConfig,\n  StructuredTypeFieldOptions,\n  NONE_PARSER,\n  OptionsHelper,\n} from '../types';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { ODataStructuredTypeParser } from './structured-type';\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n  optionsHelper?: OptionsHelper;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  serialize(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return Array.isArray(value)\n      ? value.map((v) => this.parser.serialize(v, options))\n      : this.parser.serialize(value, options);\n  }\n\n  //Encode\n  encode(value: any, options?: OptionsHelper): string {\n    options = options || this.optionsHelper;\n    return Array.isArray(value)\n      ? value.map((v) => this.parser.encode(v, options))\n      : this.parser.encode(value, options);\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  return?: { type: string; callable?: boolean };\n  parser: Parser;\n  parameters: ODataParameterParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(config: CallableConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || []).map(\n      ([name, p]) => new ODataParameterParser(name, p as Parameter)\n    );\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: OptionsHelper): R {\n    options = options || this.optionsHelper;\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return Object.assign(\n      {},\n      this.parameters\n        .filter((p) => p.name !== CALLABLE_BINDING_PARAMETER)\n        .filter((p) => p.name in params && params[p.name] !== undefined)\n        .reduce(\n          (acc, p) =>\n            Object.assign(acc, {\n              [p.name]: p.serialize(params[p.name], options),\n            }),\n          {}\n        )\n    );\n  }\n\n  //Encode\n  encode(params: any, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return Object.assign(\n      {},\n      this.parameters\n        .filter((p) => p.name !== CALLABLE_BINDING_PARAMETER)\n        .filter((p) => p.name in params && params[p.name] !== undefined)\n        .reduce(\n          (acc, p) =>\n            Object.assign(acc, { [p.name]: p.encode(params[p.name], options) }),\n          {}\n        )\n    );\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.return)\n      this.parser = parserForType(this.return.type) || NONE_PARSER;\n    this.parameters.forEach((p) => p.configure({ parserForType, options }));\n  }\n\n  binding() {\n    return this.parameters.find((p) => p.name === CALLABLE_BINDING_PARAMETER);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitiesAnnotations.html":{"url":"classes/ODataEntitiesAnnotations.html","title":"class - ODataEntitiesAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitiesAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _functions\n                            \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                attributes\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    readLink\n                                \n                                \n                                    count\n                                \n                                \n                                    nextLink\n                                \n                                \n                                    deltaLink\n                                \n                                \n                                    top\n                                \n                                \n                                    skip\n                                \n                                \n                                    skiptoken\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:200\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataContext\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:13\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitiesAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attributes\n                        \n                        \n                    \n                \n            \n            \n                \nattributes(data: literal type, metadata: ODataMetadataType)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:51\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                ODataMetadataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:165\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:169\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        count\n                    \n                \n\n                \n                    \n                        getcount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextLink\n                    \n                \n\n                \n                    \n                        getnextLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:177\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deltaLink\n                    \n                \n\n                \n                    \n                        getdeltaLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:181\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:190\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skiptoken\n                    \n                \n\n                \n                    \n                        getskiptoken()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:195\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:201\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport {\n  DEFAULT_VERSION,\n  ETAG_HEADERS,\n  ODATA_ENTITYID_HEADERS,\n} from '../../constants';\nimport { ODataContext, ODataHelper } from '../../helper';\nimport { OptionsHelper, ODataMetadataType } from '../../types';\nimport { Http } from '../../utils/http';\n\nexport abstract class ODataAnnotations {\n  annotations: { [annot: string]: any };\n  options?: OptionsHelper;\n  protected get helper() {\n    return this.options?.helper || ODataHelper[DEFAULT_VERSION];\n  }\n  constructor({\n    data = {},\n    options,\n    headers,\n  }: {\n    data?: { [name: string]: any };\n    options?: OptionsHelper;\n    headers?: HttpHeaders;\n  } = {}) {\n    this.options = options;\n    this.annotations = this.options ? this.helper.annotations(data) : data;\n    if (headers) {\n      let header = Http.resolveHeaderKey(headers, ETAG_HEADERS);\n      if (header) {\n        const etag = headers.get(header);\n        if (etag) this.helper.etag(this.annotations, etag);\n      }\n      header = Http.resolveHeaderKey(headers, ODATA_ENTITYID_HEADERS);\n      if (header) {\n        const entityId = headers.get(header);\n        if (entityId) this.helper.id(this.annotations, entityId);\n      }\n    }\n  }\n\n  // Context\n  private _context?: ODataContext;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.helper.context(this.annotations);\n    }\n    return this._context;\n  }\n\n  attributes(data: { [name: string]: any }, metadata: ODataMetadataType): T {\n    return this.helper.attributes(data, metadata) as T;\n  }\n\n  // Method\n  abstract clone(): ODataAnnotations;\n  abstract data(data: { [name: string]: any }): { [name: string]: any };\n}\n\nexport class ODataPropertyAnnotations extends ODataAnnotations {\n  clone(): ODataPropertyAnnotations {\n    return new ODataPropertyAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.property(data, this.context);\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context.type;\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entity(data, this.context);\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context.type;\n  }\n\n  get id() {\n    return this.helper.id(this.annotations);\n  }\n\n  get etag() {\n    return this.helper.etag(this.annotations);\n  }\n\n  get mediaEtag() {\n    return this.helper.mediaEtag(this.annotations);\n  }\n\n  get metadataEtag() {\n    return this.helper.metadataEtag(this.annotations);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get editLink() {\n    return this.helper.editLink(this.annotations);\n  }\n\n  get mediaReadLink() {\n    return this.helper.mediaReadLink(this.annotations);\n  }\n\n  get mediaEditLink() {\n    return this.helper.mediaEditLink(this.annotations);\n  }\n\n  get mediaContentType() {\n    return this.helper.mediaContentType(this.annotations);\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.helper.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entities(data, this.context);\n  }\n  get type() {\n    return this.context.type;\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.helper.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.helper.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.helper.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityAnnotations.html":{"url":"classes/ODataEntityAnnotations.html","title":"class - ODataEntityAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _functions\n                            \n                            \n                                    Private\n                                    Optional\n                                _properties\n                            \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                            \n                                attributes\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    id\n                                \n                                \n                                    etag\n                                \n                                \n                                    mediaEtag\n                                \n                                \n                                    metadataEtag\n                                \n                                \n                                    readLink\n                                \n                                \n                                    editLink\n                                \n                                \n                                    mediaReadLink\n                                \n                                \n                                    mediaEditLink\n                                \n                                \n                                    mediaContentType\n                                \n                                \n                                    properties\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:141\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataContext\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:13\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntityAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attributes\n                        \n                        \n                    \n                \n            \n            \n                \nattributes(data: literal type, metadata: ODataMetadataType)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:51\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                ODataMetadataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:93\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        etag\n                    \n                \n\n                \n                    \n                        getetag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:97\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEtag\n                    \n                \n\n                \n                    \n                        getmediaEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadataEtag\n                    \n                \n\n                \n                    \n                        getmetadataEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:105\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:109\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        editLink\n                    \n                \n\n                \n                    \n                        geteditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:113\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaReadLink\n                    \n                \n\n                \n                    \n                        getmediaReadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:117\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEditLink\n                    \n                \n\n                \n                    \n                        getmediaEditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaContentType\n                    \n                \n\n                \n                    \n                        getmediaContentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:125\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        properties\n                    \n                \n\n                \n                    \n                        getproperties()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:130\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:142\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport {\n  DEFAULT_VERSION,\n  ETAG_HEADERS,\n  ODATA_ENTITYID_HEADERS,\n} from '../../constants';\nimport { ODataContext, ODataHelper } from '../../helper';\nimport { OptionsHelper, ODataMetadataType } from '../../types';\nimport { Http } from '../../utils/http';\n\nexport abstract class ODataAnnotations {\n  annotations: { [annot: string]: any };\n  options?: OptionsHelper;\n  protected get helper() {\n    return this.options?.helper || ODataHelper[DEFAULT_VERSION];\n  }\n  constructor({\n    data = {},\n    options,\n    headers,\n  }: {\n    data?: { [name: string]: any };\n    options?: OptionsHelper;\n    headers?: HttpHeaders;\n  } = {}) {\n    this.options = options;\n    this.annotations = this.options ? this.helper.annotations(data) : data;\n    if (headers) {\n      let header = Http.resolveHeaderKey(headers, ETAG_HEADERS);\n      if (header) {\n        const etag = headers.get(header);\n        if (etag) this.helper.etag(this.annotations, etag);\n      }\n      header = Http.resolveHeaderKey(headers, ODATA_ENTITYID_HEADERS);\n      if (header) {\n        const entityId = headers.get(header);\n        if (entityId) this.helper.id(this.annotations, entityId);\n      }\n    }\n  }\n\n  // Context\n  private _context?: ODataContext;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.helper.context(this.annotations);\n    }\n    return this._context;\n  }\n\n  attributes(data: { [name: string]: any }, metadata: ODataMetadataType): T {\n    return this.helper.attributes(data, metadata) as T;\n  }\n\n  // Method\n  abstract clone(): ODataAnnotations;\n  abstract data(data: { [name: string]: any }): { [name: string]: any };\n}\n\nexport class ODataPropertyAnnotations extends ODataAnnotations {\n  clone(): ODataPropertyAnnotations {\n    return new ODataPropertyAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.property(data, this.context);\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context.type;\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entity(data, this.context);\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context.type;\n  }\n\n  get id() {\n    return this.helper.id(this.annotations);\n  }\n\n  get etag() {\n    return this.helper.etag(this.annotations);\n  }\n\n  get mediaEtag() {\n    return this.helper.mediaEtag(this.annotations);\n  }\n\n  get metadataEtag() {\n    return this.helper.metadataEtag(this.annotations);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get editLink() {\n    return this.helper.editLink(this.annotations);\n  }\n\n  get mediaReadLink() {\n    return this.helper.mediaReadLink(this.annotations);\n  }\n\n  get mediaEditLink() {\n    return this.helper.mediaEditLink(this.annotations);\n  }\n\n  get mediaContentType() {\n    return this.helper.mediaContentType(this.annotations);\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.helper.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entities(data, this.context);\n  }\n  get type() {\n    return this.context.type;\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.helper.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.helper.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.helper.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityContainer.html":{"url":"classes/ODataEntityContainer.html","title":"class - ODataEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                entitySets\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityContainerConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityContainerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { EntityContainerConfig } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEntityContainer {\n  schema: ODataSchema;\n  name: string;\n  annotations: ODataAnnotation[];\n  entitySets: ODataEntitySet[];\n  constructor(config: EntityContainerConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entitySets = (config.entitySets || []).map(\n      (config) => new ODataEntitySet(config, schema)\n    );\n    this.annotations = (config.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityService.html":{"url":"classes/ODataEntityService.html","title":"class - ODataEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataBaseService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                attach\n                            \n                            \n                                    Public\n                                    Abstract\n                                entity\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callAction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                callFunction\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                            \n                                    Protected\n                                fetchNavigationProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    structuredTypeSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:7\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:66\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:72\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:78\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType, options?: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:84\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callAction(params: P | null, resource: ODataActionResource, responseType: \"property\" | \"entity\" | \"entities\" | \"none\", options: HttpActionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:90\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resource\n                                    \n                                                ODataActionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"property\" | \"entity\" | \"entities\" | \"none\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                HttpActionOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:29\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:35\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:41\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType, options?: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:47\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            callFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(params: P | null, resource: ODataFunctionResource, responseType: \"property\" | \"entity\" | \"entities\" | \"none\", options: HttpFunctionOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:53\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            P | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resource\n                                    \n                                                ODataFunctionResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"property\" | \"entity\" | \"entities\" | \"none\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                HttpFunctionOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fetchNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: HttpNavigationPropertyOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:103\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpNavigationPropertyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fetchNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType, options?: HttpNavigationPropertyOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:108\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpNavigationPropertyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fetchNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchNavigationProperty(resource: ODataNavigationPropertyResource, responseType: \"entity\" | \"entities\", options: HttpNavigationPropertyOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:113\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataNavigationPropertyResource\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    responseType\n                                    \n                                            \"entity\" | \"entities\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                HttpNavigationPropertyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        structuredTypeSchema\n                    \n                \n\n                \n                    \n                        getstructuredTypeSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityKey, ODataResource } from '../resources';\nimport { ODataModel } from '../models/model';\nimport { ODataBaseService } from './base';\n\nexport abstract class ODataEntityService extends ODataBaseService {\n  public abstract entity(key?: EntityKey): ODataResource;\n  public abstract attach>(value: M): void;\n\n  // Entity Config\n  get structuredTypeSchema() {\n    return this.apiNameOrEntityType !== undefined\n      ? this.api.findStructuredTypeForType(this.apiNameOrEntityType)\n      : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySet.html":{"url":"classes/ODataEntitySet.html","title":"class - ODataEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                entityType\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                            \n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                            \n                                isTypeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntitySetConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntitySetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:26\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { EntitySetConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\nexport class ODataEntitySet {\n  schema: ODataSchema;\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations: ODataAnnotation[];\n  constructor(config: EntitySetConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entityType = config.entityType;\n    this.service = config.service;\n    this.annotations = (config.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias) names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityTypeKey.html":{"url":"classes/ODataEntityTypeKey.html","title":"class - ODataEntityTypeKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityTypeKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Objects, Types } from '../utils';\nimport {\n  Parser,\n  StructuredTypeFieldConfig,\n  StructuredTypeConfig,\n  OptionsHelper,\n  NONE_PARSER,\n  StructuredTypeFieldOptions,\n} from '../types';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { COMPUTED } from '../constants';\nimport { ODataAnnotation } from '../schema/annotation';\nimport { raw } from '../resources/builder';\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaCustom = {\n  [P in keyof T]?: (\n    schema: any,\n    field: ODataStructuredTypeFieldParser\n  ) => any;\n};\ntype JsonSchemaExpand = { [P in keyof T]?: JsonSchemaOptions };\nexport type JsonSchemaOptions = {\n  select?: JsonSchemaSelect;\n  custom?: JsonSchemaCustom;\n  expand?: JsonSchemaExpand;\n};\n\nexport class ODataEntityTypeKey {\n  name: string;\n  alias?: string;\n  constructor({ name, alias }: { name: string; alias?: string }) {\n    this.name = name;\n    this.alias = alias;\n  }\n}\n\nexport class ODataReferential {\n  property: string;\n  referencedProperty: string;\n  constructor({\n    property,\n    referencedProperty,\n  }: {\n    property: string;\n    referencedProperty: string;\n  }) {\n    this.property = property;\n    this.referencedProperty = referencedProperty;\n  }\n}\n\nexport class ODataStructuredTypeFieldParser implements Parser {\n  name: string;\n  private structuredType: ODataStructuredTypeParser;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  precision?: number;\n  scale?: number;\n  referentials: ODataReferential[];\n  annotations: ODataAnnotation[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    name: string,\n    structuredType: ODataStructuredTypeParser,\n    field: StructuredTypeFieldConfig\n  ) {\n    this.name = name;\n    this.structuredType = structuredType;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = (field.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n    this.referentials = (field.referentials || []).map(\n      (referential) => new ODataReferential(referential)\n    );\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.precision = field.precision;\n    this.scale = field.scale;\n  }\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  validate(\n    value: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ):\n    | { [name: string]: any }\n    | { [name: string]: any }[]\n    | string[]\n    | undefined {\n    let errors;\n    if (this.collection && Array.isArray(value)) {\n      errors = value.map((v) => this.validate(v, { method, navigation })) as {\n        [name: string]: any[];\n      }[];\n    } else if (\n      (this.isStructuredType() &&\n        typeof value === 'object' &&\n        value !== null) ||\n      (this.navigation && value !== undefined)\n    ) {\n      errors =\n        this.structured().validate(value, { method, navigation }) ||\n        ({} as { [name: string]: any[] });\n    } else if (\n      this.isEnumType() &&\n      (typeof value === 'string' || typeof value === 'number')\n    ) {\n      errors = this.enum().validate(value, { method, navigation });\n    } else {\n      // IsEdmType\n      const computed = this.findAnnotation((a) => a.type === COMPUTED);\n      errors = [];\n      if (\n        !this.nullable &&\n        (value === null || (value === undefined && method !== 'patch')) && // Is null or undefined without patch?\n        !(computed?.bool && method === 'create') // Not (Is Computed field and create) ?\n      ) {\n        errors.push(`required`);\n      }\n      if (\n        this.maxLength !== undefined &&\n        typeof value === 'string' &&\n        value.length > this.maxLength\n      ) {\n        errors.push(`maxlength`);\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n\n  //#region Deserialize\n  private parse(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options?: OptionsHelper): T {\n    options = options || this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? value.map((v) => this.parse(parser, v, options))\n        : this.parse(parser, value, options);\n    }\n    return this.parser.deserialize(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Serialize\n  private toJson(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? (value as any[]).map((v) => this.toJson(parser, v, options))\n        : this.toJson(parser, value, options);\n    }\n    return this.parser.serialize(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Encode\n  encode(value: T, options?: OptionsHelper): string {\n    options = options || this.optionsHelper;\n    return this.parser.encode(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n    if (this.default !== undefined)\n      this.default = this.deserialize(this.default, options);\n  }\n\n  //#region Json Schema\n  // https://json-schema.org/\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any =\n      this.parser instanceof ODataStructuredTypeFieldParser ||\n      this.parser instanceof ODataStructuredTypeParser ||\n      this.parser instanceof ODataEnumTypeParser\n        ? this.parser.toJsonSchema(options)\n        : ({ title: this.name, type: 'object' } as any);\n\n    if (\n      [\n        'Edm.String',\n        'Edm.Date',\n        'Edm.TimeOfDay',\n        'Edm.DateTimeOffset',\n        'Edm.Guid',\n        'Edm.Binary',\n      ].indexOf(this.type) !== -1\n    ) {\n      schema.type = 'string';\n      if (this.type === 'Edm.Date') schema.format = 'date';\n      else if (this.type === 'Edm.TimeOfDay') schema.format = 'time';\n      else if (this.type === 'Edm.DateTimeOffset') schema.format = 'date-time';\n      else if (this.type === 'Edm.Guid')\n        schema.pattern =\n          '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$';\n      else if (this.type === 'Edm.Binary') schema.contentEncoding = 'base64';\n      else if (this.type === 'Edm.String' && this.maxLength)\n        schema.maxLength = this.maxLength;\n    } else if (\n      ['Edm.Int64', 'Edm.Int32', 'Edm.Int16', 'Edm.Byte', 'Edm.SByte'].indexOf(\n        this.type\n      ) !== -1\n    ) {\n      //TODO: Range\n      schema.type = 'integer';\n    } else if (['Edm.Decimal', 'Edm.Double'].indexOf(this.type) !== -1) {\n      schema.type = 'number';\n    } else if (['Edm.Boolean'].indexOf(this.type) !== -1) {\n      schema.type = 'boolean';\n    }\n    if (this.default) schema.default = this.default;\n    if (this.nullable) schema.type = [schema.type, 'null'];\n    if (this.collection)\n      schema = {\n        type: 'array',\n        items: schema,\n        additionalItems: false,\n      };\n    return schema;\n  }\n  //#endregion\n\n  isKey() {\n    return (\n      this.structuredType.keys?.find((k) => k.name === this.name) !== undefined\n    );\n  }\n\n  hasReferentials() {\n    return this.referentials.length !== 0;\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataStructuredTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  open: boolean;\n  children: ODataStructuredTypeParser[] = [];\n  alias?: string;\n  base?: string;\n  parent?: ODataStructuredTypeParser;\n  keys?: ODataEntityTypeKey[];\n  fields: ODataStructuredTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    config: StructuredTypeConfig,\n    namespace: string,\n    alias?: string\n  ) {\n    this.name = config.name;\n    this.base = config.base;\n    this.open = config.open || false;\n    this.namespace = namespace;\n    this.alias = alias;\n    if (Array.isArray(config.keys))\n      this.keys = config.keys.map((key) => new ODataEntityTypeKey(key));\n    this.fields = Object.entries(\n      config.fields as { [P in keyof T]: StructuredTypeFieldConfig }\n    ).map(\n      ([name, config]) => new ODataStructuredTypeFieldParser(name, this, config)\n    );\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  typeFor(name: string): string | undefined {\n    const field = this.fields.find((f) => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : undefined;\n  }\n\n  findChildParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): ODataStructuredTypeParser | undefined {\n    if (predicate(this)) return this;\n    let match: ODataStructuredTypeParser | undefined;\n    for (let ch of this.children) {\n      match = ch.findChildParser(predicate);\n      if (match !== undefined) break;\n    }\n    return match;\n  }\n\n  childParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): Parser {\n    return this.findChildParser(predicate) || NONE_PARSER;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: OptionsHelper): T {\n    options = options || this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.deserialize(value, options);\n    return Object.assign(\n      {},\n      value,\n      this.fields\n        .filter(\n          (f) =>\n            f.name in value &&\n            value[f.name] !== undefined &&\n            value[f.name] !== null\n        )\n        .reduce(\n          (acc, f) =>\n            Object.assign(acc, {\n              [f.name]: f.deserialize(value[f.name], options),\n            }),\n          {}\n        )\n    );\n  }\n\n  // Serialize\n  serialize(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.serialize(value, options);\n    return Object.assign(\n      {},\n      value,\n      this.fields\n        .filter(\n          (f) =>\n            f.name in value &&\n            (value as any)[f.name] !== undefined &&\n            (value as any)[f.name] !== null\n        )\n        .reduce(\n          (acc, f) =>\n            Object.assign(acc, {\n              [f.name]: f.serialize((value as any)[f.name], options),\n            }),\n          {}\n        )\n    );\n  }\n\n  // Encode\n  encode(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return raw(JSON.stringify(this.serialize(value, options)));\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.base) {\n      const parent = parserForType(this.base) as ODataStructuredTypeParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach((f) => f.configure({ parserForType, options }));\n  }\n\n  resolveKey(value: any): any {\n    let key = this.parent?.resolveKey(value) || {};\n    if (Array.isArray(this.keys) && this.keys.length > 0) {\n      for (var k of this.keys) {\n        let v = value as any;\n        let structured = this as ODataStructuredTypeParser | undefined;\n        let field: ODataStructuredTypeFieldParser | undefined;\n        for (let name of k.name.split('/')) {\n          if (structured === undefined) break;\n          field = structured.fields.find((f) => f.name === name);\n          if (field !== undefined) {\n            v = Types.isPlainObject(v) ? v[field.name] : v;\n            structured = field.isStructuredType()\n              ? field.structured()\n              : undefined;\n          }\n        }\n        if (field === undefined) return undefined;\n        let name = k.alias || field.name;\n        key[name] = field.encode(v);\n      }\n    }\n    if (Types.isEmpty(key)) return undefined;\n    return Objects.resolveKey(key);\n  }\n\n  defaults(): { [name: string]: any } {\n    let value = this.parent?.defaults() || {};\n    let fields = this.fields.filter(\n      (f) => f.default !== undefined || f.isStructuredType()\n    );\n    return Object.assign(\n      {},\n      value,\n      fields.reduce((acc, f) => {\n        let value = f.isStructuredType()\n          ? f.structured().defaults()\n          : f.default;\n        if (!Types.isEmpty(value)) Object.assign(acc, { [f.name]: value });\n        return acc;\n      }, {})\n    );\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any = this.parent?.toJsonSchema(options) || {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      $id: `${this.namespace}.${this.name}`,\n      title: this.name,\n      type: 'object',\n      properties: {},\n      required: [],\n    };\n    const fields = this.fields.filter(\n      (f) =>\n        (!f.navigation || (options.expand && f.name in options.expand)) &&\n        (!options.select || (options.select).indexOf(f.name) !== -1)\n    );\n    schema.properties = Object.assign(\n      {},\n      schema.properties,\n      fields\n        .map((f) => {\n          let expand =\n            options.expand && f.name in options.expand\n              ? (options.expand as any)[f.name]\n              : undefined;\n          let schema = f.toJsonSchema(expand);\n          if (options.custom && f.name in options.custom)\n            schema = (\n              options.custom[f.name as keyof T] as (\n                schema: any,\n                field: ODataStructuredTypeFieldParser\n              ) => any\n            )(schema, f);\n          return { [f.name]: schema };\n        })\n        .reduce((acc, v) => Object.assign(acc, v), {})\n    );\n    schema.required = [\n      ...schema.required,\n      ...fields.filter((f) => !f.nullable).map((f) => f.name),\n    ];\n    return schema;\n  }\n\n  validate(\n    attrs: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      create?: boolean;\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ): { [name: string]: any } | undefined {\n    const errors = (this.parent?.validate(attrs, { method, navigation }) ||\n      {}) as { [name: string]: any };\n    const fields = this.fields.filter((f) => !f.navigation || navigation);\n    for (var field of fields) {\n      const value = attrs[field.name as keyof T];\n      const errs = field.validate(value, { method, navigation });\n      if (errs !== undefined) {\n        errors[field.name] = errs;\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumType.html":{"url":"classes/ODataEnumType.html","title":"class - ODataEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                fields\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                findFieldByName\n                            \n                            \n                                findFieldByValue\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                mapFields\n                            \n                            \n                                serialize\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     E\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \nencode(value: E)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            E\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEnumTypeFieldParser[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByName\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByValue\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapFields\n                        \n                        \n                    \n                \n            \n            \n                \nmapFields(mapper: (field: ODataEnumTypeFieldParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapper\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: E)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            E\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { ODataEnumTypeFieldParser, ODataEnumTypeParser } from '../parsers';\nimport { EnumTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEnumType {\n  schema: ODataSchema;\n  name: string;\n  parser: ODataEnumTypeParser;\n  members: { [name: string]: number } | { [value: number]: string };\n  annotations: ODataAnnotation[];\n  constructor(config: EnumTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.members = config.members;\n    this.parser = new ODataEnumTypeParser(\n      config,\n      schema.namespace,\n      schema.alias\n    );\n    this.annotations = (config.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n  }\n\n  type({ alias = false }: { alias?: boolean } = {}) {\n    return `${alias ? this.schema.alias : this.schema.namespace}.${this.name}`;\n  }\n\n  isTypeOf(type: string) {\n    return this.parser.isTypeOf(type);\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  configure() {\n    this.parser.configure({ options: this.api.options });\n  }\n\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  fields(): ODataEnumTypeFieldParser[] {\n    return this.parser.fields;\n  }\n\n  findFieldByName(name: string) {\n    return this.fields().find((f) => f.name === name);\n  }\n\n  findFieldByValue(value: number) {\n    return this.fields().find((f) => f.value === value);\n  }\n\n  mapFields(mapper: (field: ODataEnumTypeFieldParser) => T) {\n    return this.fields().map(mapper);\n  }\n\n  deserialize(value: any): E {\n    return this.parser.deserialize(value, this.api.options);\n  }\n\n  serialize(value: E): any {\n    return this.parser.serialize(value, this.api.options);\n  }\n\n  encode(value: E): any {\n    return this.parser.encode(value, this.api.options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumTypeFieldParser.html":{"url":"classes/ODataEnumTypeFieldParser.html","title":"class - ODataEnumTypeFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumTypeFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: EnumTypeFieldConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        EnumTypeFieldConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Enums } from '../utils';\nimport { raw } from '../resources/builder';\nimport { ODataAnnotation } from '../schema/annotation';\nimport {\n  EnumTypeConfig,\n  Parser,\n  OptionsHelper,\n  EnumTypeFieldConfig,\n} from '../types';\n\nexport class ODataEnumTypeFieldParser {\n  name: string;\n  value: number;\n  annotations: ODataAnnotation[];\n\n  constructor(name: string, field: EnumTypeFieldConfig) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = (field.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n  }\n\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\n\nexport class ODataEnumTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(config: EnumTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields).map(\n      ([name, f]) => new ODataEnumTypeFieldParser(name, f)\n    );\n  }\n\n  configure({ options }: { options: OptionsHelper }) {\n    this.optionsHelper = options;\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: string, options?: OptionsHelper): T {\n    // string -> Type\n    options = options || this.optionsHelper;\n    if (this.flags) {\n      return Enums.toValues(this.members, value).reduce(\n        (acc, v) => acc | v,\n        0\n      ) as any;\n    } else {\n      return Enums.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: T, options?: OptionsHelper): string {\n    // Type -> string\n    options = options || this.optionsHelper;\n    if (this.flags) {\n      let names = Enums.toNames(this.members, value);\n      if (!options?.stringAsEnum)\n        names = names.map((name) => `${this.namespace}.${this.name}'${name}'`);\n      return names.join(', ');\n    } else {\n      let name = Enums.toName(this.members, (value) as number);\n      if (!options?.stringAsEnum)\n        name = `${this.namespace}.${this.name}'${name}'`;\n      return name;\n    }\n  }\n\n  //Encode\n  encode(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    const serialized = this.serialize(value, options);\n    return options?.stringAsEnum ? raw(`'${serialized}'`) : raw(serialized);\n  }\n\n  // Json Schema\n  toJsonSchema() {\n    let property = {\n      title: this.name,\n      type: 'string',\n    };\n    property.enum = this.fields.map((f) => f.name);\n    return property;\n  }\n\n  validate(\n    member: string | number,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ): string[] | undefined {\n    if (this.flags) {\n      let members = Enums.toValues(this.members, member);\n      return members.some((member) => !(member in this.members))\n        ? ['mismatch']\n        : undefined;\n    } else {\n      return !(member in this.members) ? ['mismatch'] : undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumTypeParser.html":{"url":"classes/ODataEnumTypeParser.html","title":"class - ODataEnumTypeParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumTypeParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                fields\n                            \n                            \n                                    Optional\n                                flags\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                    Optional\n                                optionsHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumTypeFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            optionsHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: string, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \nencode(value: T, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(member: string | number, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Enums } from '../utils';\nimport { raw } from '../resources/builder';\nimport { ODataAnnotation } from '../schema/annotation';\nimport {\n  EnumTypeConfig,\n  Parser,\n  OptionsHelper,\n  EnumTypeFieldConfig,\n} from '../types';\n\nexport class ODataEnumTypeFieldParser {\n  name: string;\n  value: number;\n  annotations: ODataAnnotation[];\n\n  constructor(name: string, field: EnumTypeFieldConfig) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = (field.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n  }\n\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\n\nexport class ODataEnumTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(config: EnumTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields).map(\n      ([name, f]) => new ODataEnumTypeFieldParser(name, f)\n    );\n  }\n\n  configure({ options }: { options: OptionsHelper }) {\n    this.optionsHelper = options;\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: string, options?: OptionsHelper): T {\n    // string -> Type\n    options = options || this.optionsHelper;\n    if (this.flags) {\n      return Enums.toValues(this.members, value).reduce(\n        (acc, v) => acc | v,\n        0\n      ) as any;\n    } else {\n      return Enums.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: T, options?: OptionsHelper): string {\n    // Type -> string\n    options = options || this.optionsHelper;\n    if (this.flags) {\n      let names = Enums.toNames(this.members, value);\n      if (!options?.stringAsEnum)\n        names = names.map((name) => `${this.namespace}.${this.name}'${name}'`);\n      return names.join(', ');\n    } else {\n      let name = Enums.toName(this.members, (value) as number);\n      if (!options?.stringAsEnum)\n        name = `${this.namespace}.${this.name}'${name}'`;\n      return name;\n    }\n  }\n\n  //Encode\n  encode(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    const serialized = this.serialize(value, options);\n    return options?.stringAsEnum ? raw(`'${serialized}'`) : raw(serialized);\n  }\n\n  // Json Schema\n  toJsonSchema() {\n    let property = {\n      title: this.name,\n      type: 'string',\n    };\n    property.enum = this.fields.map((f) => f.name);\n    return property;\n  }\n\n  validate(\n    member: string | number,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ): string[] | undefined {\n    if (this.flags) {\n      let members = Enums.toValues(this.members, member);\n      return members.some((member) => !(member in this.members))\n        ? ['mismatch']\n        : undefined;\n    } else {\n      return !(member in this.members) ? ['mismatch'] : undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInMemoryCache.html":{"url":"classes/ODataInMemoryCache.html","title":"class - ODataInMemoryCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInMemoryCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/memory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                flush\n                            \n                            \n                                forget\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                    Private\n                                handleFetch\n                            \n                            \n                                    Private\n                                handleMutate\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                isFetch\n                            \n                            \n                                isMatch\n                            \n                            \n                                isMutate\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/memory.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCacheEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            flush\n                        \n                        \n                    \n                \n            \n            \n                \nflush()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forget\n                        \n                        \n                    \n                \n            \n            \n                \nforget(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleFetch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFetch(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:91\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMutate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMutate(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isFetch\n                        \n                        \n                    \n                \n            \n            \n                \nisFetch(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMatch\n                        \n                        \n                    \n                \n            \n            \n                \nisMatch(entry: ODataCacheEntry, value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMutate\n                        \n                        \n                    \n                \n            \n            \n                \nisMutate(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache } from './cache';\nexport class ODataInMemoryCache extends ODataCache> {\n  constructor({ timeout }: { timeout?: number } = {}) {\n    super({ timeout });\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.pathWithParams, res, {\n      timeout: res.options.maxAge,\n      pattern: `^${req.path}`,\n    });\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    return this.get(req.pathWithParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInStorageCache.html":{"url":"classes/ODataInStorageCache.html","title":"class - ODataInStorageCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInStorageCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                flush\n                            \n                            \n                                forget\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                    Private\n                                handleFetch\n                            \n                            \n                                    Private\n                                handleMutate\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                isFetch\n                            \n                            \n                                isMatch\n                            \n                            \n                                isMutate\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/storage.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCacheEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            flush\n                        \n                        \n                    \n                \n            \n            \n                \nflush()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forget\n                        \n                        \n                    \n                \n            \n            \n                \nforget(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleFetch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFetch(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:91\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMutate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMutate(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:126\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:134\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isFetch\n                        \n                        \n                    \n                \n            \n            \n                \nisFetch(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMatch\n                        \n                        \n                    \n                \n            \n            \n                \nisMatch(entry: ODataCacheEntry, value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMutate\n                        \n                        \n                    \n                \n            \n            \n                \nisMutate(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n  body: any | null;\n  headers: { [name: string]: string | string[] };\n  status: number;\n  statusText: string;\n  url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor({\n    name,\n    storage = sessionStorage,\n    timeout,\n  }: {\n    timeout?: number;\n    name: string;\n    storage?: Storage;\n  }) {\n    super({ timeout });\n    this.entries = new Map>(\n      JSON.parse(storage.getItem(name) || '[]')\n    );\n    window.addEventListener(\n      'beforeunload',\n      ((backend, key, responses) =>\n        function () {\n          backend.setItem(key, JSON.stringify(Array.from(responses.entries())));\n        })(storage, name, this.entries)\n    );\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.pathWithParams, res.toJSON(), {\n      timeout: res.options.maxAge,\n      pattern: `^${req.path}`,\n    });\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.pathWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ODataModule.html":{"url":"modules/ODataModule.html","title":"module - ODataModule","body":"\n                   \n\n\n\n\n    Modules\n    ODataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-odata/src/lib/module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ODataClient\n                        \n                        \n                            ODataServiceFactory\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configs: ApiConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                ApiConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ODataSettings } from './settings';\nimport { ODataClient } from './client';\nimport { ODataServiceFactory } from './services/index';\nimport { ApiConfig } from './types';\nimport { ODATA_CONFIGURATIONS } from './tokens';\n\nexport function createSettings(configs: ApiConfig[]) {\n  return new ODataSettings(...configs);\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ODataClient, ODataServiceFactory],\n})\nexport class ODataModule {\n  public static forRoot(\n    ...configs: ApiConfig[]\n  ): ModuleWithProviders {\n    return {\n      ngModule: ODataModule,\n      providers: [\n        { provide: ODATA_CONFIGURATIONS, useValue: configs },\n        {\n          provide: ODataSettings,\n          useFactory: createSettings,\n          deps: [ODATA_CONFIGURATIONS],\n        },\n        ODataClient,\n        ODataServiceFactory,\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataParameterParser.html":{"url":"classes/ODataParameterParser.html","title":"class - ODataParameterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataParameterParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                nullable\n                            \n                            \n                                    Optional\n                                optionsHelper\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                encode\n                            \n                            \n                                enum\n                            \n                            \n                                isEdmType\n                            \n                            \n                                isEnumType\n                            \n                            \n                                isStructuredType\n                            \n                            \n                                serialize\n                            \n                            \n                                structured\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, parameter: Parameter)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameter\n                                                  \n                                                        \n                                                                        Parameter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            optionsHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \nencode(value: any, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enum\n                        \n                        \n                    \n                \n            \n            \n                \nenum()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEdmType\n                        \n                        \n                    \n                \n            \n            \n                \nisEdmType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumType\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isStructuredType\n                        \n                        \n                    \n                \n            \n            \n                \nisStructuredType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            structured\n                        \n                        \n                    \n                \n            \n            \n                \nstructured()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CALLABLE_BINDING_PARAMETER } from '../constants';\nimport {\n  Parser,\n  Parameter,\n  CallableConfig,\n  StructuredTypeFieldOptions,\n  NONE_PARSER,\n  OptionsHelper,\n} from '../types';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { ODataStructuredTypeParser } from './structured-type';\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n  optionsHelper?: OptionsHelper;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  serialize(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return Array.isArray(value)\n      ? value.map((v) => this.parser.serialize(v, options))\n      : this.parser.serialize(value, options);\n  }\n\n  //Encode\n  encode(value: any, options?: OptionsHelper): string {\n    options = options || this.optionsHelper;\n    return Array.isArray(value)\n      ? value.map((v) => this.parser.encode(v, options))\n      : this.parser.encode(value, options);\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  return?: { type: string; callable?: boolean };\n  parser: Parser;\n  parameters: ODataParameterParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(config: CallableConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || []).map(\n      ([name, p]) => new ODataParameterParser(name, p as Parameter)\n    );\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: OptionsHelper): R {\n    options = options || this.optionsHelper;\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return Object.assign(\n      {},\n      this.parameters\n        .filter((p) => p.name !== CALLABLE_BINDING_PARAMETER)\n        .filter((p) => p.name in params && params[p.name] !== undefined)\n        .reduce(\n          (acc, p) =>\n            Object.assign(acc, {\n              [p.name]: p.serialize(params[p.name], options),\n            }),\n          {}\n        )\n    );\n  }\n\n  //Encode\n  encode(params: any, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return Object.assign(\n      {},\n      this.parameters\n        .filter((p) => p.name !== CALLABLE_BINDING_PARAMETER)\n        .filter((p) => p.name in params && params[p.name] !== undefined)\n        .reduce(\n          (acc, p) =>\n            Object.assign(acc, { [p.name]: p.encode(params[p.name], options) }),\n          {}\n        )\n    );\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.return)\n      this.parser = parserForType(this.return.type) || NONE_PARSER;\n    this.parameters.forEach((p) => p.configure({ parserForType, options }));\n  }\n\n  binding() {\n    return this.parameters.find((p) => p.name === CALLABLE_BINDING_PARAMETER);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegments.html":{"url":"classes/ODataPathSegments.html","title":"class - ODataPathSegments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clone\n                            \n                            \n                                find\n                            \n                            \n                                get\n                            \n                            \n                                keys\n                            \n                            \n                                last\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                segments\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments?: ODataSegment[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataSegment[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _segments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSegment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:59\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(name: string, path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPathSegments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(predicate: (segment: ODataSegment) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys(values?: (EntityKey | undefined)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                (EntityKey | undefined)[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:65\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            segments\n                        \n                        \n                    \n                \n            \n            \n                \nsegments(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { raw, buildPathAndQuery } from './builder';\n\nimport { Types, Dates } from '../utils';\n\nimport { PATH_SEPARATOR } from '../constants';\nimport { EntityKey } from './resource';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport type ODataSegment = {\n  name: PathSegmentNames;\n  path: string;\n  type?: string;\n  key?: any;\n  parameters?: any;\n};\n\nfunction pathSegmentsBuilder(\n  segment: ODataSegment\n): [string, { [name: string]: any }] {\n  if (segment.name === PathSegmentNames.function) {\n    let [path, params] = segment.parameters\n      ? buildPathAndQuery({ func: { [segment.path]: segment.parameters } })\n      : buildPathAndQuery({ func: segment.path });\n    if (path.startsWith(PATH_SEPARATOR)) {\n      path = path.slice(1);\n    }\n    return [path, params];\n  } else {\n    let key = segment.key;\n    // HACK: Check guid string\n    if (\n      typeof key === 'string' &&\n      /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(\n        key\n      )\n    ) {\n      key = raw(key);\n    }\n    let [path, params] = key ? buildPathAndQuery({ key }) : ['', {}];\n    return [segment.path + path, params];\n  }\n}\n\nexport class ODataPathSegments {\n  private _segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this._segments = segments || [];\n  }\n\n  pathAndParams(): [string, { [name: string]: any }] {\n    const result = this._segments.reduce(\n      (acc, segment) => {\n        const [path, params] = pathSegmentsBuilder(segment);\n        acc.paths.push(path);\n        acc.params = Object.assign(acc.params, params);\n        return acc;\n      },\n      { paths: [] as string[], params: {} as { [name: string]: any } }\n    );\n    return [result.paths.join(PATH_SEPARATOR), result.params];\n  }\n\n  types({ key = false }: { key?: boolean } = {}): string[] {\n    return this.segments({ key })\n      .map((s) => s.type())\n      .filter((t) => t !== undefined) as string[];\n  }\n\n  keys(values?: (EntityKey | undefined)[]) {\n    const segments = this.segments({ key: true });\n    if (values !== undefined) {\n      segments.forEach((segment, index) => {\n        const key = values[index];\n        if (key === undefined) {\n          segment.clearKey();\n        } else {\n          segment.key(key);\n        }\n      });\n    }\n    return segments.map((s) => s.key() as EntityKey | undefined);\n  }\n\n  toString(): string {\n    const [path, params] = this.pathAndParams();\n    return (\n      path +\n      Object.entries(params)\n        .filter(([, value]) => value)\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&')\n    );\n  }\n\n  toJSON() {\n    return this._segments.map((segment) => {\n      let json = { name: segment.name, path: segment.path };\n      if (segment.type !== undefined) json.type = segment.type;\n      if (segment.key !== undefined)\n        json.key = Dates.isoStringToDate(\n          JSON.parse(JSON.stringify(segment.key))\n        );\n      if (segment.parameters !== undefined)\n        json.parameters = Dates.isoStringToDate(\n          JSON.parse(JSON.stringify(segment.parameters))\n        );\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(predicate: (segment: ODataSegment) => boolean) {\n    //Backward Find\n    return [...this._segments].reverse().find(predicate);\n  }\n\n  segments({ key = false }: { key?: boolean } = {}) {\n    let segments = [...this._segments];\n    if (key)\n      segments = segments.filter(\n        (s) =>\n          [\n            PathSegmentNames.entitySet,\n            PathSegmentNames.navigationProperty,\n            PathSegmentNames.property,\n          ].indexOf(s.name) !== -1\n      );\n    return segments.map((s) => new SegmentHandler(s));\n  }\n\n  last({ key = false }: { key?: boolean } = {}) {\n    const segments = this.segments({ key });\n    return segments.length > 0 ? segments[segments.length - 1] : undefined;\n  }\n\n  add(name: string, path: string) {\n    const segment = { name, path } as ODataSegment;\n    this._segments.push(segment);\n    return new SegmentHandler(segment);\n  }\n\n  get(name: string) {\n    let segment = this.find((s) => s.name === name);\n    if (segment === undefined)\n      throw Error(`No Segment for name ${name} was found`);\n    return new SegmentHandler(segment);\n  }\n}\n\nexport class SegmentHandler {\n  constructor(private segment: ODataSegment) {}\n  get name() {\n    return this.segment.name;\n  }\n  type(value?: string) {\n    if (value !== undefined) this.segment.type = value;\n    return this.segment.type;\n  }\n  path(value?: string) {\n    if (value !== undefined) this.segment.path = value;\n    return this.segment.path;\n  }\n  key(value?: EntityKey) {\n    if (value !== undefined) this.segment.key = value;\n    return this.segment.key as EntityKey;\n  }\n  hasKey() {\n    return !Types.isEmpty(this.segment.key);\n  }\n  clearKey() {\n    delete this.segment.key;\n  }\n  parameters(value?: T) {\n    if (value !== undefined) this.segment.parameters = value;\n    return this.segment.parameters as T;\n  }\n  hasParameters() {\n    return !Types.isEmpty(this.segment.parameters);\n  }\n  clearParameters() {\n    delete this.segment.parameters;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPropertyAnnotations.html":{"url":"classes/ODataPropertyAnnotations.html","title":"class - ODataPropertyAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPropertyAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                attributes\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataContext\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:13\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPropertyAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attributes\n                        \n                        \n                    \n                \n            \n            \n                \nattributes(data: literal type, metadata: ODataMetadataType)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:51\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                                ODataMetadataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:72\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport {\n  DEFAULT_VERSION,\n  ETAG_HEADERS,\n  ODATA_ENTITYID_HEADERS,\n} from '../../constants';\nimport { ODataContext, ODataHelper } from '../../helper';\nimport { OptionsHelper, ODataMetadataType } from '../../types';\nimport { Http } from '../../utils/http';\n\nexport abstract class ODataAnnotations {\n  annotations: { [annot: string]: any };\n  options?: OptionsHelper;\n  protected get helper() {\n    return this.options?.helper || ODataHelper[DEFAULT_VERSION];\n  }\n  constructor({\n    data = {},\n    options,\n    headers,\n  }: {\n    data?: { [name: string]: any };\n    options?: OptionsHelper;\n    headers?: HttpHeaders;\n  } = {}) {\n    this.options = options;\n    this.annotations = this.options ? this.helper.annotations(data) : data;\n    if (headers) {\n      let header = Http.resolveHeaderKey(headers, ETAG_HEADERS);\n      if (header) {\n        const etag = headers.get(header);\n        if (etag) this.helper.etag(this.annotations, etag);\n      }\n      header = Http.resolveHeaderKey(headers, ODATA_ENTITYID_HEADERS);\n      if (header) {\n        const entityId = headers.get(header);\n        if (entityId) this.helper.id(this.annotations, entityId);\n      }\n    }\n  }\n\n  // Context\n  private _context?: ODataContext;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.helper.context(this.annotations);\n    }\n    return this._context;\n  }\n\n  attributes(data: { [name: string]: any }, metadata: ODataMetadataType): T {\n    return this.helper.attributes(data, metadata) as T;\n  }\n\n  // Method\n  abstract clone(): ODataAnnotations;\n  abstract data(data: { [name: string]: any }): { [name: string]: any };\n}\n\nexport class ODataPropertyAnnotations extends ODataAnnotations {\n  clone(): ODataPropertyAnnotations {\n    return new ODataPropertyAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.property(data, this.context);\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context.type;\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entity(data, this.context);\n  }\n\n  get type() {\n    return this.helper.type(this.annotations) || this.context.type;\n  }\n\n  get id() {\n    return this.helper.id(this.annotations);\n  }\n\n  get etag() {\n    return this.helper.etag(this.annotations);\n  }\n\n  get mediaEtag() {\n    return this.helper.mediaEtag(this.annotations);\n  }\n\n  get metadataEtag() {\n    return this.helper.metadataEtag(this.annotations);\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get editLink() {\n    return this.helper.editLink(this.annotations);\n  }\n\n  get mediaReadLink() {\n    return this.helper.mediaReadLink(this.annotations);\n  }\n\n  get mediaEditLink() {\n    return this.helper.mediaEditLink(this.annotations);\n  }\n\n  get mediaContentType() {\n    return this.helper.mediaContentType(this.annotations);\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.helper.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations({\n      data: Object.assign({}, this.annotations),\n      options: this.options,\n    });\n  }\n\n  data(data: { [name: string]: any }) {\n    return this.helper.entities(data, this.context);\n  }\n  get type() {\n    return this.context.type;\n  }\n\n  get readLink() {\n    return this.helper.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.helper.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.helper.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.helper.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || '').match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.helper.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptions.html":{"url":"classes/ODataQueryOptions.html","title":"class - ODataQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                clone\n                            \n                            \n                                has\n                            \n                            \n                                keep\n                            \n                            \n                                option\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                remove\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataQueryOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: QueryOptionNames)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keep\n                        \n                        \n                    \n                \n            \n            \n                \nkeep(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(name: QueryOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:88\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OptionHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:46\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  buildPathAndQuery,\n  Expand,\n  Filter,\n  OrderBy,\n  Select,\n  Transform,\n} from './builder';\n\nimport { Dates, Types, Urls, Objects } from '../utils';\n\nexport type QueryArguments = {\n  select?: Select;\n  expand?: Expand;\n  transform?: Transform;\n  search?: string;\n  filter?: Filter;\n  orderBy?: OrderBy;\n  top?: number;\n  skip?: number;\n  skiptoken?: string;\n};\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  expand = 'expand',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n}\n\nexport class ODataQueryOptions {\n  options: { [name: string]: any };\n\n  constructor(options?: { [name: string]: any }) {\n    this.options = options || {};\n  }\n\n  // Params\n  pathAndParams(): [string, { [name: string]: any }] {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format,\n    ]\n      .filter((key) => !Types.isEmpty(this.options[key]))\n      .reduce(\n        (acc, key) => Object.assign(acc, { [key]: this.options[key] }),\n        {}\n      );\n\n    return buildPathAndQuery(options);\n  }\n\n  toString(): string {\n    const [path, params] = this.pathAndParams();\n    return (\n      path +\n      Object.entries(params)\n        .filter(([, value]) => !Types.isEmpty(value))\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&')\n    );\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined) this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach((name) => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter((k) => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(\n    private o: { [name: string]: any },\n    private n: QueryOptionNames\n  ) {}\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return (v !== undefined && (this.o[this.n] = v)) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter((v) => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1) this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): { [name: string]: any } {\n    if (!Types.isArray(this.o[this.n]) && Types.isPlainObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find((v) => Types.isPlainObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    Objects.set(obj, path, value);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    return Objects.get(obj, path, def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    Objects.unset(obj, path);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1) this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    return Objects.has(obj, path);\n  }\n\n  assign(values: { [attr: string]: any }) {\n    let obj = this.assertObject(true);\n    return Objects.merge(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataReferential.html":{"url":"classes/ODataReferential.html","title":"class - ODataReferential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataReferential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                property\n                            \n                            \n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referencedProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Objects, Types } from '../utils';\nimport {\n  Parser,\n  StructuredTypeFieldConfig,\n  StructuredTypeConfig,\n  OptionsHelper,\n  NONE_PARSER,\n  StructuredTypeFieldOptions,\n} from '../types';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { COMPUTED } from '../constants';\nimport { ODataAnnotation } from '../schema/annotation';\nimport { raw } from '../resources/builder';\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaCustom = {\n  [P in keyof T]?: (\n    schema: any,\n    field: ODataStructuredTypeFieldParser\n  ) => any;\n};\ntype JsonSchemaExpand = { [P in keyof T]?: JsonSchemaOptions };\nexport type JsonSchemaOptions = {\n  select?: JsonSchemaSelect;\n  custom?: JsonSchemaCustom;\n  expand?: JsonSchemaExpand;\n};\n\nexport class ODataEntityTypeKey {\n  name: string;\n  alias?: string;\n  constructor({ name, alias }: { name: string; alias?: string }) {\n    this.name = name;\n    this.alias = alias;\n  }\n}\n\nexport class ODataReferential {\n  property: string;\n  referencedProperty: string;\n  constructor({\n    property,\n    referencedProperty,\n  }: {\n    property: string;\n    referencedProperty: string;\n  }) {\n    this.property = property;\n    this.referencedProperty = referencedProperty;\n  }\n}\n\nexport class ODataStructuredTypeFieldParser implements Parser {\n  name: string;\n  private structuredType: ODataStructuredTypeParser;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  precision?: number;\n  scale?: number;\n  referentials: ODataReferential[];\n  annotations: ODataAnnotation[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    name: string,\n    structuredType: ODataStructuredTypeParser,\n    field: StructuredTypeFieldConfig\n  ) {\n    this.name = name;\n    this.structuredType = structuredType;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = (field.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n    this.referentials = (field.referentials || []).map(\n      (referential) => new ODataReferential(referential)\n    );\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.precision = field.precision;\n    this.scale = field.scale;\n  }\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  validate(\n    value: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ):\n    | { [name: string]: any }\n    | { [name: string]: any }[]\n    | string[]\n    | undefined {\n    let errors;\n    if (this.collection && Array.isArray(value)) {\n      errors = value.map((v) => this.validate(v, { method, navigation })) as {\n        [name: string]: any[];\n      }[];\n    } else if (\n      (this.isStructuredType() &&\n        typeof value === 'object' &&\n        value !== null) ||\n      (this.navigation && value !== undefined)\n    ) {\n      errors =\n        this.structured().validate(value, { method, navigation }) ||\n        ({} as { [name: string]: any[] });\n    } else if (\n      this.isEnumType() &&\n      (typeof value === 'string' || typeof value === 'number')\n    ) {\n      errors = this.enum().validate(value, { method, navigation });\n    } else {\n      // IsEdmType\n      const computed = this.findAnnotation((a) => a.type === COMPUTED);\n      errors = [];\n      if (\n        !this.nullable &&\n        (value === null || (value === undefined && method !== 'patch')) && // Is null or undefined without patch?\n        !(computed?.bool && method === 'create') // Not (Is Computed field and create) ?\n      ) {\n        errors.push(`required`);\n      }\n      if (\n        this.maxLength !== undefined &&\n        typeof value === 'string' &&\n        value.length > this.maxLength\n      ) {\n        errors.push(`maxlength`);\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n\n  //#region Deserialize\n  private parse(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options?: OptionsHelper): T {\n    options = options || this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? value.map((v) => this.parse(parser, v, options))\n        : this.parse(parser, value, options);\n    }\n    return this.parser.deserialize(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Serialize\n  private toJson(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? (value as any[]).map((v) => this.toJson(parser, v, options))\n        : this.toJson(parser, value, options);\n    }\n    return this.parser.serialize(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Encode\n  encode(value: T, options?: OptionsHelper): string {\n    options = options || this.optionsHelper;\n    return this.parser.encode(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n    if (this.default !== undefined)\n      this.default = this.deserialize(this.default, options);\n  }\n\n  //#region Json Schema\n  // https://json-schema.org/\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any =\n      this.parser instanceof ODataStructuredTypeFieldParser ||\n      this.parser instanceof ODataStructuredTypeParser ||\n      this.parser instanceof ODataEnumTypeParser\n        ? this.parser.toJsonSchema(options)\n        : ({ title: this.name, type: 'object' } as any);\n\n    if (\n      [\n        'Edm.String',\n        'Edm.Date',\n        'Edm.TimeOfDay',\n        'Edm.DateTimeOffset',\n        'Edm.Guid',\n        'Edm.Binary',\n      ].indexOf(this.type) !== -1\n    ) {\n      schema.type = 'string';\n      if (this.type === 'Edm.Date') schema.format = 'date';\n      else if (this.type === 'Edm.TimeOfDay') schema.format = 'time';\n      else if (this.type === 'Edm.DateTimeOffset') schema.format = 'date-time';\n      else if (this.type === 'Edm.Guid')\n        schema.pattern =\n          '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$';\n      else if (this.type === 'Edm.Binary') schema.contentEncoding = 'base64';\n      else if (this.type === 'Edm.String' && this.maxLength)\n        schema.maxLength = this.maxLength;\n    } else if (\n      ['Edm.Int64', 'Edm.Int32', 'Edm.Int16', 'Edm.Byte', 'Edm.SByte'].indexOf(\n        this.type\n      ) !== -1\n    ) {\n      //TODO: Range\n      schema.type = 'integer';\n    } else if (['Edm.Decimal', 'Edm.Double'].indexOf(this.type) !== -1) {\n      schema.type = 'number';\n    } else if (['Edm.Boolean'].indexOf(this.type) !== -1) {\n      schema.type = 'boolean';\n    }\n    if (this.default) schema.default = this.default;\n    if (this.nullable) schema.type = [schema.type, 'null'];\n    if (this.collection)\n      schema = {\n        type: 'array',\n        items: schema,\n        additionalItems: false,\n      };\n    return schema;\n  }\n  //#endregion\n\n  isKey() {\n    return (\n      this.structuredType.keys?.find((k) => k.name === this.name) !== undefined\n    );\n  }\n\n  hasReferentials() {\n    return this.referentials.length !== 0;\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataStructuredTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  open: boolean;\n  children: ODataStructuredTypeParser[] = [];\n  alias?: string;\n  base?: string;\n  parent?: ODataStructuredTypeParser;\n  keys?: ODataEntityTypeKey[];\n  fields: ODataStructuredTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    config: StructuredTypeConfig,\n    namespace: string,\n    alias?: string\n  ) {\n    this.name = config.name;\n    this.base = config.base;\n    this.open = config.open || false;\n    this.namespace = namespace;\n    this.alias = alias;\n    if (Array.isArray(config.keys))\n      this.keys = config.keys.map((key) => new ODataEntityTypeKey(key));\n    this.fields = Object.entries(\n      config.fields as { [P in keyof T]: StructuredTypeFieldConfig }\n    ).map(\n      ([name, config]) => new ODataStructuredTypeFieldParser(name, this, config)\n    );\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  typeFor(name: string): string | undefined {\n    const field = this.fields.find((f) => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : undefined;\n  }\n\n  findChildParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): ODataStructuredTypeParser | undefined {\n    if (predicate(this)) return this;\n    let match: ODataStructuredTypeParser | undefined;\n    for (let ch of this.children) {\n      match = ch.findChildParser(predicate);\n      if (match !== undefined) break;\n    }\n    return match;\n  }\n\n  childParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): Parser {\n    return this.findChildParser(predicate) || NONE_PARSER;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: OptionsHelper): T {\n    options = options || this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.deserialize(value, options);\n    return Object.assign(\n      {},\n      value,\n      this.fields\n        .filter(\n          (f) =>\n            f.name in value &&\n            value[f.name] !== undefined &&\n            value[f.name] !== null\n        )\n        .reduce(\n          (acc, f) =>\n            Object.assign(acc, {\n              [f.name]: f.deserialize(value[f.name], options),\n            }),\n          {}\n        )\n    );\n  }\n\n  // Serialize\n  serialize(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.serialize(value, options);\n    return Object.assign(\n      {},\n      value,\n      this.fields\n        .filter(\n          (f) =>\n            f.name in value &&\n            (value as any)[f.name] !== undefined &&\n            (value as any)[f.name] !== null\n        )\n        .reduce(\n          (acc, f) =>\n            Object.assign(acc, {\n              [f.name]: f.serialize((value as any)[f.name], options),\n            }),\n          {}\n        )\n    );\n  }\n\n  // Encode\n  encode(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return raw(JSON.stringify(this.serialize(value, options)));\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.base) {\n      const parent = parserForType(this.base) as ODataStructuredTypeParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach((f) => f.configure({ parserForType, options }));\n  }\n\n  resolveKey(value: any): any {\n    let key = this.parent?.resolveKey(value) || {};\n    if (Array.isArray(this.keys) && this.keys.length > 0) {\n      for (var k of this.keys) {\n        let v = value as any;\n        let structured = this as ODataStructuredTypeParser | undefined;\n        let field: ODataStructuredTypeFieldParser | undefined;\n        for (let name of k.name.split('/')) {\n          if (structured === undefined) break;\n          field = structured.fields.find((f) => f.name === name);\n          if (field !== undefined) {\n            v = Types.isPlainObject(v) ? v[field.name] : v;\n            structured = field.isStructuredType()\n              ? field.structured()\n              : undefined;\n          }\n        }\n        if (field === undefined) return undefined;\n        let name = k.alias || field.name;\n        key[name] = field.encode(v);\n      }\n    }\n    if (Types.isEmpty(key)) return undefined;\n    return Objects.resolveKey(key);\n  }\n\n  defaults(): { [name: string]: any } {\n    let value = this.parent?.defaults() || {};\n    let fields = this.fields.filter(\n      (f) => f.default !== undefined || f.isStructuredType()\n    );\n    return Object.assign(\n      {},\n      value,\n      fields.reduce((acc, f) => {\n        let value = f.isStructuredType()\n          ? f.structured().defaults()\n          : f.default;\n        if (!Types.isEmpty(value)) Object.assign(acc, { [f.name]: value });\n        return acc;\n      }, {})\n    );\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any = this.parent?.toJsonSchema(options) || {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      $id: `${this.namespace}.${this.name}`,\n      title: this.name,\n      type: 'object',\n      properties: {},\n      required: [],\n    };\n    const fields = this.fields.filter(\n      (f) =>\n        (!f.navigation || (options.expand && f.name in options.expand)) &&\n        (!options.select || (options.select).indexOf(f.name) !== -1)\n    );\n    schema.properties = Object.assign(\n      {},\n      schema.properties,\n      fields\n        .map((f) => {\n          let expand =\n            options.expand && f.name in options.expand\n              ? (options.expand as any)[f.name]\n              : undefined;\n          let schema = f.toJsonSchema(expand);\n          if (options.custom && f.name in options.custom)\n            schema = (\n              options.custom[f.name as keyof T] as (\n                schema: any,\n                field: ODataStructuredTypeFieldParser\n              ) => any\n            )(schema, f);\n          return { [f.name]: schema };\n        })\n        .reduce((acc, v) => Object.assign(acc, v), {})\n    );\n    schema.required = [\n      ...schema.required,\n      ...fields.filter((f) => !f.nullable).map((f) => f.name),\n    ];\n    return schema;\n  }\n\n  validate(\n    attrs: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      create?: boolean;\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ): { [name: string]: any } | undefined {\n    const errors = (this.parent?.validate(attrs, { method, navigation }) ||\n      {}) as { [name: string]: any };\n    const fields = this.fields.filter((f) => !f.navigation || navigation);\n    for (var field of fields) {\n      const value = attrs[field.name as keyof T];\n      const errs = field.validate(value, { method, navigation });\n      if (errs !== undefined) {\n        errors[field.name] = errs;\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataRequest.html":{"url":"classes/ODataRequest.html","title":"class - ODataRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/request.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                fetchPolicy\n                            \n                            \n                                    Readonly\n                                headers\n                            \n                            \n                                    Readonly\n                                method\n                            \n                            \n                                    Readonly\n                                observe\n                            \n                            \n                                    Readonly\n                                params\n                            \n                            \n                                    Readonly\n                                path\n                            \n                            \n                                    Readonly\n                                    Optional\n                                reportProgress\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                            \n                                    Readonly\n                                    Optional\n                                responseType\n                            \n                            \n                                    Readonly\n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pathWithParams\n                                \n                                \n                                    url\n                                \n                                \n                                    urlWithParams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            observe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"events\" | \"response\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpParams\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            reportProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            responseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pathWithParams\n                    \n                \n\n                \n                    \n                        getpathWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:157\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:165\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        urlWithParams\n                    \n                \n\n                \n                    \n                        geturlWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:169\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ODataApi } from '../api';\nimport {\n  ACCEPT,\n  IF_MATCH_HEADER,\n  IF_NONE_MATCH_HEADER,\n  PREFER,\n} from '../constants';\nimport { Http } from '../utils';\nimport { ODataResource } from './resource';\n\nexport class ODataRequest {\n  readonly method: string;\n  readonly api: ODataApi;\n  readonly body: T | null;\n  readonly observe: 'events' | 'response';\n  readonly reportProgress?: boolean;\n  readonly withCredentials?: boolean;\n  readonly responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  readonly fetchPolicy:\n    | 'cache-first'\n    | 'cache-and-network'\n    | 'network-only'\n    | 'no-cache'\n    | 'cache-only';\n  readonly headers: HttpHeaders;\n  readonly params: HttpParams;\n  readonly path: string;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n    method: string;\n    api: ODataApi;\n    resource: ODataResource;\n    body: T | null;\n    observe: 'events' | 'response';\n    etag?: string;\n    headers?: HttpHeaders | { [header: string]: string | string[] };\n    reportProgress?: boolean;\n    params?: HttpParams | { [param: string]: string | string[] };\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    fetchPolicy?:\n      | 'cache-first'\n      | 'cache-and-network'\n      | 'network-only'\n      | 'no-cache'\n      | 'cache-only';\n    withCredentials?: boolean;\n  }) {\n    this.method = init.method;\n    this.resource = init.resource;\n\n    this.api = init.api;\n    this.body = init.body;\n    this.reportProgress = init.reportProgress;\n    this.responseType = init.responseType;\n    this.observe = init.observe;\n\n    this.withCredentials =\n      init.withCredentials === undefined\n        ? this.api.options.withCredentials\n        : init.withCredentials;\n    this.fetchPolicy = init.fetchPolicy || this.api.options.fetchPolicy;\n\n    // The Path and Params from resource\n    const [resourcePath, resourceParams] = init.resource.pathAndParams();\n    this.path = resourcePath;\n\n    //#region Headers\n    const customHeaders: { [name: string]: string | string[] } = {};\n    if (typeof init.etag === 'string') {\n      if (\n        this.api.options.etag.ifMatch &&\n        ['PUT', 'PATCH', 'DELETE'].indexOf(this.method) !== -1\n      )\n        customHeaders[IF_MATCH_HEADER] = init.etag;\n      else if (\n        this.api.options.etag.ifNoneMatch &&\n        ['GET'].indexOf(this.method) !== -1\n      )\n        customHeaders[IF_NONE_MATCH_HEADER] = init.etag;\n    }\n\n    const accept = [];\n    // Metadata ?\n    if (this.api.options.accept?.metadata !== undefined)\n      accept.push(`odata.metadata=${this.api.options.accept?.metadata}`);\n    // IEEE754\n    if (this.api.options.accept?.ieee754Compatible !== undefined)\n      accept.push(\n        `IEEE754Compatible=${this.api.options.accept?.ieee754Compatible}`\n      );\n    if (accept.length > 0)\n      customHeaders[ACCEPT] = [\n        `application/json;${accept.join(';')}`,\n        'text/plain',\n        '*/*',\n      ];\n\n    const prefer = [];\n    // Return\n    if (\n      this.api.options.prefer?.return !== undefined &&\n      ['POST', 'PUT', 'PATCH'].indexOf(this.method) !== -1\n    )\n      prefer.push(`return=${this.api.options.prefer?.return}`);\n    // MaxPageSize\n    if (\n      this.api.options.prefer?.maxPageSize !== undefined &&\n      ['GET'].indexOf(this.method) !== -1\n    )\n      prefer.push(`odata.maxpagesize=${this.api.options.prefer?.maxPageSize}`);\n    // Annotations\n    if (\n      this.api.options.prefer?.includeAnnotations !== undefined &&\n      ['GET'].indexOf(this.method) !== -1\n    )\n      prefer.push(\n        `odata.include-annotations=${this.api.options.prefer?.includeAnnotations}`\n      );\n    if (\n      this.api.options.prefer?.continueOnError === true &&\n      ['POST'].indexOf(this.method) !== -1\n    )\n      prefer.push(`odata.continue-on-error`);\n    if (prefer.length > 0) customHeaders[PREFER] = prefer;\n    this.headers = Http.mergeHttpHeaders(\n      this.api.options.headers,\n      customHeaders,\n      init.headers || {}\n    );\n    //#endregion\n\n    //#region Params\n    const customParams: { [name: string]: string | string[] } = {};\n    if (\n      ['POST', 'PUT', 'PATCH'].indexOf(this.method) !== -1 &&\n      '$select' in resourceParams\n    ) {\n      customParams['$select'] = resourceParams['$select'];\n    }\n    if (['POST'].indexOf(this.method) !== -1 && '$expand' in resourceParams) {\n      customParams['$expand'] = resourceParams['$expand'];\n    }\n    if (['GET'].indexOf(this.method) !== -1) {\n      Object.assign(customParams, resourceParams);\n    }\n\n    this.params = Http.mergeHttpParams(\n      this.api.options.params,\n      customParams,\n      init.params || {}\n    );\n    //#endregion\n  }\n\n  get pathWithParams() {\n    let path = this.path;\n    if (this.params.keys().length > 0) {\n      path = `${path}?${this.params}`;\n    }\n    return path;\n  }\n\n  get url() {\n    return `${this.api.serviceRootUrl}${this.path}`;\n  }\n\n  get urlWithParams() {\n    return `${this.api.serviceRootUrl}${this.pathWithParams}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponse.html":{"url":"classes/ODataResponse.html","title":"class - ODataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/response.ts\n        \n\n            \n                Description\n            \n            \n                OData Response\n\n            \n\n            \n                Extends\n            \n            \n                        HttpResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                entities\n                            \n                            \n                                entity\n                            \n                            \n                                    Static\n                                fromHttpResponse\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                property\n                            \n                            \n                                toJSON\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataResponseOptions | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(type: string, value: any, options: ODataResponseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataResponseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \nentities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:174\n                \n            \n\n\n            \n                \n                    Handle the response body as entities\n\n\n                    \n                    \n                    \n                        Returns :         ODataEntities\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:146\n                \n            \n\n\n            \n                \n                    Handle the response body as an entity\n\n\n                    \n                    \n                    \n                        Returns :         ODataEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromHttpResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromHttpResponse(req: ODataRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(req: ODataRequest, json: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:56\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    json\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(parser: Parser, value: any, options: ODataResponseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                Parser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataResponseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:197\n                \n            \n\n\n            \n                \n                    Handle the response body as a property\n\n\n                    \n                    \n                    \n                        Returns :         ODataProperty\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { body: any; headers: any; status: any; statusText: any; url: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:225\n                \n            \n\n\n            \n                \n                    Handle the response body as a value\n\n\n                    \n                    \n                    \n                        Returns :     T | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:91\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport {\n  ODataEntityAnnotations,\n  ODataEntitiesAnnotations,\n  ODataPropertyAnnotations,\n} from './annotations';\nimport { Parser } from '../../types';\nimport { Types } from '../../utils/types';\nimport { ODataResource } from '../resource';\nimport { ODataStructuredTypeParser } from '../../parsers/structured-type';\nimport { ODataEntities, ODataEntity, ODataProperty } from './types';\nimport {\n  APPLICATION_JSON,\n  ODATA_VERSION_HEADERS,\n  CONTENT_TYPE,\n  CACHE_CONTROL,\n} from '../../constants';\nimport { ODataApi } from '../../api';\nimport { ODataRequest } from '../request';\nimport { ODataResponseOptions } from './options';\nimport { Http } from '../../utils/http';\n\n/**\n * OData Response\n */\nexport class ODataResponse extends HttpResponse {\n  readonly api: ODataApi;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n    api: ODataApi;\n    resource: ODataResource;\n    body: T | null;\n    headers: HttpHeaders;\n    status: number;\n    statusText: string;\n    url?: string;\n  }) {\n    super(init);\n    this.api = init.api;\n    this.resource = init.resource;\n  }\n\n  static fromHttpResponse(req: ODataRequest, res: HttpResponse) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: res.body,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n      url: res.url || undefined,\n    });\n  }\n\n  static fromJSON(\n    req: ODataRequest,\n    json: {\n      body: T | null;\n      headers: { [name: string]: string | string[] };\n      status: number;\n      statusText: string;\n      url: string | null;\n    }\n  ) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: json.body,\n      headers: new HttpHeaders(json.headers),\n      status: json.status,\n      statusText: json.statusText,\n      url: json.url || undefined,\n    });\n  }\n\n  toJSON() {\n    return {\n      body: this.body,\n      headers: this.headers\n        .keys()\n        .map((name) => ({ [name]: this.headers.getAll(name) || [] }))\n        .reduce((acc, header) => Object.assign(acc, header), {}),\n      status: this.status,\n      statusText: this.statusText,\n      url: this.url,\n    };\n  }\n\n  private _options: ODataResponseOptions | null = null;\n  get options(): ODataResponseOptions {\n    if (this._options === null) {\n      this._options = new ODataResponseOptions(this.api.options);\n      const contentType = this.headers.get(CONTENT_TYPE);\n      if (contentType && contentType.indexOf(APPLICATION_JSON) !== -1) {\n        const features = contentType\n          .split(',')\n          .find((p) => p.startsWith(APPLICATION_JSON)) as string;\n        this._options.setFeatures(features);\n      }\n      const header = Http.resolveHeaderKey(this.headers, ODATA_VERSION_HEADERS);\n      if (header) {\n        const version = (this.headers.get(header) || '').replace(/\\;/g, '') as\n          | '2.0'\n          | '3.0'\n          | '4.0';\n        this._options.setVersion(version);\n      }\n      const cacheControl = this.headers.get(CACHE_CONTROL);\n      if (cacheControl) {\n        this._options.setCache(cacheControl);\n      }\n    }\n    return this._options;\n  }\n\n  private parse(\n    parser: Parser,\n    value: any,\n    options: ODataResponseOptions\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options.helper.type(value)\n      : undefined;\n    if (type !== undefined && parser instanceof ODataStructuredTypeParser) {\n      parser = parser.childParser((c) => c.isTypeOf(type));\n    }\n    return parser.deserialize(value, options);\n  }\n\n  private deserialize(\n    type: string,\n    value: any,\n    options: ODataResponseOptions\n  ): any {\n    const parser = this.api.parserForType(type);\n    return Array.isArray(value)\n      ? value.map((v) => this.parse(parser, v, options))\n      : this.parse(parser, value, options);\n  }\n\n  /**\n   * Handle the response body as an entity\n   * @returns\n   */\n  entity(): ODataEntity {\n    const options = this.options;\n    const payload =\n      this.body && options.version === '2.0'\n        ? (this.body)['d']\n        : this.body;\n    const annots = new ODataEntityAnnotations({\n      data: payload || {},\n      options: options,\n      headers: this.headers,\n    });\n    const data = payload ? annots.data(payload) : null;\n    let entity = (\n      data !== null && Types.isPlainObject(data)\n        ? options.helper.attributes(data, this.api.options.stripMetadata)\n        : data\n    ) as T | null;\n\n    const type = this.resource.type();\n    if (entity !== null && type !== undefined)\n      entity = this.deserialize(type, entity, options) as T;\n    return { entity, annots };\n  }\n\n  /**\n   * Handle the response body as entities\n   * @returns\n   */\n  entities(): ODataEntities {\n    const options = this.options;\n    const payload =\n      this.body && options.version === '2.0'\n        ? (this.body)['d']\n        : this.body;\n    const annots = new ODataEntitiesAnnotations({\n      data: payload || {},\n      options: options,\n      headers: this.headers,\n    });\n    let entities = payload ? annots.data(payload) : null;\n\n    const type = this.resource.type();\n    if (entities !== null && type !== undefined)\n      entities = this.deserialize(type, entities, options) as T[];\n    return { entities, annots };\n  }\n\n  /**\n   * Handle the response body as a property\n   * @returns\n   */\n  property(): ODataProperty {\n    const options = this.options;\n    const payload =\n      this.body && options.version === '2.0'\n        ? (this.body)['d']\n        : this.body;\n    const annots = new ODataPropertyAnnotations({\n      data: payload || {},\n      options: options,\n      headers: this.headers,\n    });\n    const data = payload ? (annots.data(payload) as T) : null;\n    let property = (\n      data !== null && Types.isPlainObject(data)\n        ? options.helper.attributes(data, this.api.options.stripMetadata)\n        : data\n    ) as T | null;\n\n    const type = this.resource.type();\n    if (property !== null && type !== undefined)\n      property = this.deserialize(type, property, options) as T;\n    return { property, annots };\n  }\n\n  /**\n   * Handle the response body as a value\n   * @returns\n   */\n  value(): T | null {\n    const options = this.options;\n    const data = this.body && options.version === '2.0' ? this.body : this.body;\n    let value = (\n      data !== null && Types.isPlainObject(data)\n        ? options.helper.attributes(data, this.api.options.stripMetadata)\n        : data\n    ) as T | null;\n\n    const type = this.resource.type();\n    if (value !== null && type !== undefined)\n      value = this.deserialize(type, value, options) as T;\n    return value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponseOptions.html":{"url":"classes/ODataResponseOptions.html","title":"class - ODataResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ResponseOptions\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cacheability\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                maxAge\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                setCache\n                            \n                            \n                                setFeatures\n                            \n                            \n                                setVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Options)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cacheability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResponseOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCache\n                        \n                        \n                    \n                \n            \n            \n                \nsetCache(cacheControl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cacheControl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFeatures\n                        \n                        \n                    \n                \n            \n            \n                \nsetFeatures(features: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVersion\n                        \n                        \n                    \n                \n            \n            \n                \nsetVersion(version: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:33\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  DEFAULT_VERSION,\n  MAX_AGE,\n  VERSION_2_0,\n  VERSION_3_0,\n  VERSION_4_0,\n} from '../../constants';\nimport { ODataHelper } from '../../helper';\nimport {\n  CacheCacheability,\n  ODataMetadataType,\n  ODataVersion,\n  Options,\n  ResponseOptions,\n} from '../../types';\n\nexport class ODataResponseOptions implements ResponseOptions {\n  version: ODataVersion;\n  streaming?: boolean;\n  // OData\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  // Cache\n  cacheability?: 'public' | 'private' | 'no-cache' | 'no-store';\n  maxAge?: number;\n\n  constructor(config: Options) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.stringAsEnum = config.stringAsEnum;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n\n  clone() {\n    return new ODataResponseOptions(this);\n  }\n\n  setFeatures(features: string) {\n    features.split(';').forEach((o) => {\n      let [k, v] = o.split('=');\n      switch (k.trim()) {\n        case 'odata.metadata':\n          this.metadata = v as ODataMetadataType;\n          break;\n        case 'odata.streaming':\n          this.streaming = v == 'true';\n          break;\n        case 'IEEE754Compatible':\n          this.ieee754Compatible = v == 'true';\n          break;\n      }\n    });\n  }\n\n  setVersion(version: string) {\n    const value = version.replace(/\\;/g, '').trim();\n    if ([VERSION_2_0, VERSION_3_0, VERSION_4_0].indexOf(value) !== -1)\n      this.version = value as ODataVersion;\n  }\n\n  setCache(cacheControl: string) {\n    cacheControl.split(',').forEach((directive) => {\n      if (directive.startsWith(MAX_AGE)) {\n        let maxAge = Number(directive.split('=')[1]);\n        if (!Number.isNaN(maxAge)) this.maxAge = maxAge;\n      }\n      if (\n        ['public', 'private', 'no-cache', 'no-store'].indexOf(directive) !== -1\n      ) {\n        this.cacheability = directive as CacheCacheability;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSchema.html":{"url":"classes/ODataSchema.html","title":"class - ODataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                annotations\n                            \n                            \n                                api\n                            \n                            \n                                callables\n                            \n                            \n                                containers\n                            \n                            \n                                entities\n                            \n                            \n                                enums\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                    Public\n                                findCallableForType\n                            \n                            \n                                    Public\n                                findEntitySetForType\n                            \n                            \n                                    Public\n                                findEnumTypeForType\n                            \n                            \n                                    Public\n                                findStructuredTypeForType\n                            \n                            \n                                isNamespaceOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    entitySets\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SchemaConfig, api: ODataApi)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SchemaConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallable[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:92\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:80\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:86\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNamespaceOf\n                        \n                        \n                    \n                \n            \n            \n                \nisNamespaceOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        entitySets\n                    \n                \n\n                \n                    \n                        getentitySets()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:68\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataStructuredType } from './structured-type';\nimport { ODataCallable } from './callable';\nimport { ODataEntityContainer } from './entity-container';\nimport { ODataEnumType } from './enum-type';\nimport { ODataApi } from '../api';\nimport { SchemaConfig, Parser, CallableConfig } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataSchema {\n  api: ODataApi;\n  namespace: string;\n  alias?: string;\n  enums: ODataEnumType[];\n  entities: ODataStructuredType[];\n  callables: ODataCallable[];\n  containers: ODataEntityContainer[];\n  annotations: ODataAnnotation[];\n\n  constructor(config: SchemaConfig, api: ODataApi) {\n    this.api = api;\n    this.namespace = config.namespace;\n    this.alias = config.alias;\n    this.enums = (config.enums || []).map(\n      (config) => new ODataEnumType(config, this)\n    );\n    this.entities = (config.entities || []).map(\n      (config) => new ODataStructuredType(config, this)\n    );\n    // Merge callables\n    let callableConfigs = config.callables || [];\n    callableConfigs = callableConfigs.reduce(\n      (acc: CallableConfig[], config) => {\n        if (acc.every((c) => c.name !== config.name)) {\n          config = callableConfigs\n            .filter((c) => c.name === config.name)\n            .reduce((acc, c) => {\n              acc.parameters = Object.assign(\n                acc.parameters || {},\n                c.parameters || {}\n              );\n              return acc;\n            }, config);\n          return [...acc, config];\n        }\n        return acc;\n      },\n      [] as CallableConfig[]\n    );\n    this.callables = callableConfigs.map(\n      (config) => new ODataCallable(config, this)\n    );\n    this.containers = (config.containers || []).map(\n      (container) => new ODataEntityContainer(container, this)\n    );\n    this.annotations = (config.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n  }\n\n  isNamespaceOf(type: string) {\n    return (\n      type.startsWith(this.namespace) ||\n      (this.alias && type.startsWith(this.alias))\n    );\n  }\n\n  get entitySets() {\n    return this.containers.reduce(\n      (acc, container) => [...acc, ...container.entitySets],\n      [] as ODataEntitySet[]\n    );\n  }\n\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  //#region Find for Type\n  public findEnumTypeForType(type: string) {\n    return this.enums.find((e) => e.isTypeOf(type)) as\n      | ODataEnumType\n      | undefined;\n  }\n\n  public findStructuredTypeForType(type: string) {\n    return this.entities.find((e) => e.isTypeOf(type)) as\n      | ODataStructuredType\n      | undefined;\n  }\n\n  public findCallableForType(type: string) {\n    return this.callables.find((e) => e.isTypeOf(type)) as\n      | ODataCallable\n      | undefined;\n  }\n\n  public findEntitySetForType(type: string) {\n    return this.entitySets.find((e) => e.isTypeOf(type));\n  }\n  //#endregion\n\n  configure({\n    parserForType,\n    findOptionsForType,\n  }: {\n    parserForType: (type: string) => Parser;\n    findOptionsForType: (type: string) => any;\n  }) {\n    // Configure Enums\n    this.enums.forEach((enu) => enu.configure());\n    // Configure Entities\n    this.entities.forEach((config) =>\n      config.configure({ parserForType, findOptionsForType })\n    );\n    // Configure callables\n    this.callables.forEach((callable) => callable.configure({ parserForType }));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataServiceFactory.html":{"url":"injectables/ODataServiceFactory.html","title":"injectable - ODataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entitySet\n                            \n                            \n                                singleton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/factory.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entitySet\n                        \n                        \n                    \n                \n            \n            \n                \nentitySet(path: string, apiNameOrEntityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:10\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiNameOrEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntitySetService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singleton\n                        \n                        \n                    \n                \n            \n            \n                \nsingleton(path: string, apiNameOrEntityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:21\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiNameOrEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataSingletonService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ODataClient } from '../client';\nimport { ODataEntitySetService } from './entity-set';\nimport { ODataSingletonService } from './singleton';\n\n@Injectable()\nexport class ODataServiceFactory {\n  constructor(protected client: ODataClient) {}\n\n  entitySet(\n    path: string,\n    apiNameOrEntityType?: string\n  ): ODataEntitySetService {\n    return new (class extends ODataEntitySetService {})(\n      this.client,\n      path,\n      apiNameOrEntityType\n    );\n  }\n\n  singleton(\n    path: string,\n    apiNameOrEntityType?: string\n  ): ODataSingletonService {\n    return new (class extends ODataSingletonService {})(\n      this.client,\n      path,\n      apiNameOrEntityType\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredType.html":{"url":"classes/ODataStructuredType.html","title":"class - ODataStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                base\n                            \n                            \n                                children\n                            \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                model\n                            \n                            \n                                name\n                            \n                            \n                                open\n                            \n                            \n                                    Optional\n                                parent\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                defaults\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                fields\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                isCompoundKey\n                            \n                            \n                                isSimpleKey\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                keys\n                            \n                            \n                                pick\n                            \n                            \n                                resolveKey\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                type\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/structured-type.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredType[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            model\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaults\n                        \n                        \n                    \n                \n            \n            \n                \ndefaults()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \nencode(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataStructuredTypeFieldParser[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: ODataAnnotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCompoundKey\n                        \n                        \n                    \n                \n            \n            \n                \nisCompoundKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSimpleKey\n                        \n                        \n                    \n                \n            \n            \n                \nisSimpleKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityTypeKey[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pick\n                        \n                        \n                    \n                \n            \n            \n                \npick(value: literal type, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(attrs: T | literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            T | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(attrs: Partial, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataCollection, ODataModelOptions } from '../models';\nimport { ODataModel } from '../models/model';\nimport {\n  JsonSchemaOptions,\n  ODataEntityTypeKey,\n  ODataStructuredTypeFieldParser,\n  ODataStructuredTypeParser,\n} from '../parsers';\nimport { Parser, StructuredTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\nimport { ODataSchema } from './schema';\n\nexport class ODataStructuredType {\n  name: string;\n  schema: ODataSchema;\n  base?: string;\n  open: boolean;\n  parent?: ODataStructuredType;\n  children: ODataStructuredType[] = [];\n  model?: typeof ODataModel;\n  collection?: typeof ODataCollection;\n  parser: ODataStructuredTypeParser;\n  annotations: ODataAnnotation[];\n\n  constructor(config: StructuredTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.base = config.base;\n    this.open = config.open || false;\n    this.parser = new ODataStructuredTypeParser(\n      config,\n      schema.namespace,\n      schema.alias\n    );\n    this.annotations = (config.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n    if (config.model !== undefined) {\n      this.model = config.model as typeof ODataModel;\n      const options = this.model.hasOwnProperty('options')\n        ? this.model.options\n        : { fields: {} };\n      this.model.meta = new ODataModelOptions(options, this);\n      if (config.collection !== undefined) {\n        this.collection = config.collection as typeof ODataCollection;\n        this.collection.model = this.model;\n      }\n    }\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  configure({\n    parserForType,\n    findOptionsForType,\n  }: {\n    parserForType: (type: string) => Parser;\n    findOptionsForType: (type: string) => ODataModelOptions | undefined;\n  }) {\n    if (this.base) {\n      const parent = this.api.findStructuredTypeForType(\n        this.base\n      ) as ODataStructuredType;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.parser.configure({ options: this.api.options, parserForType });\n    if (this.model !== undefined && this.model.options !== null) {\n      this.model.meta.configure({\n        options: this.api.options,\n        findOptionsForType,\n      });\n    }\n  }\n\n  type({ alias = false }: { alias?: boolean } = {}) {\n    return `${alias ? this.schema.alias : this.schema.namespace}.${this.name}`;\n  }\n\n  isTypeOf(type: string) {\n    return this.parser.isTypeOf(type);\n  }\n\n  isSimpleKey() {\n    return this.keys().length === 1;\n  }\n\n  isCompoundKey() {\n    return this.keys().length > 1;\n  }\n\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  fields({\n    include_navigation = false,\n    include_parents = true,\n  }: {\n    include_parents?: boolean;\n    include_navigation?: boolean;\n  } = {}): ODataStructuredTypeFieldParser[] {\n    return [\n      ...(include_parents && this.parent !== undefined\n        ? this.parent.fields({ include_parents, include_navigation })\n        : []),\n      ...this.parser.fields.filter(\n        (field) => include_navigation || !field.navigation\n      ),\n    ];\n  }\n\n  keys({\n    include_parents = true,\n  }: {\n    include_parents?: boolean;\n  } = {}): ODataEntityTypeKey[] {\n    return [\n      ...(include_parents && this.parent !== undefined\n        ? this.parent.keys({ include_parents })\n        : []),\n      ...(this.parser.keys || []),\n    ];\n  }\n\n  pick(\n    value: { [name: string]: any },\n    {\n      include_parents = true,\n      include_navigation = false,\n      include_etag = true,\n    }: {\n      include_parents?: boolean;\n      include_navigation?: boolean;\n      include_etag?: boolean;\n    } = {}\n  ): Partial {\n    const names = this.fields({ include_parents, include_navigation }).map(\n      (f) => f.name\n    );\n    let attrs = Object.keys(value)\n      .filter((k) => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: value[k] }), {});\n    if (include_etag) {\n      const etag = this.api.options.helper.etag(value);\n      this.api.options.helper.etag(attrs, etag);\n    }\n    return attrs;\n  }\n\n  deserialize(value: any): T {\n    return this.parser.deserialize(value, this.api.options);\n  }\n\n  serialize(value: T): any {\n    return this.parser.serialize(value, this.api.options);\n  }\n\n  encode(value: T): any {\n    return this.parser.encode(value, this.api.options);\n  }\n\n  resolveKey(attrs: T | { [name: string]: any }) {\n    return this.parser.resolveKey(attrs);\n  }\n\n  defaults() {\n    return this.parser.defaults();\n  }\n\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    return this.parser.toJsonSchema(options);\n  }\n\n  validate(\n    attrs: Partial,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ) {\n    return this.parser.validate(attrs, { method, navigation });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredTypeParser.html":{"url":"classes/ODataStructuredTypeParser.html","title":"class - ODataStructuredTypeParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredTypeParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/structured-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                    Optional\n                                base\n                            \n                            \n                                children\n                            \n                            \n                                fields\n                            \n                            \n                                    Optional\n                                keys\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                open\n                            \n                            \n                                    Optional\n                                optionsHelper\n                            \n                            \n                                    Optional\n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                childParser\n                            \n                            \n                                configure\n                            \n                            \n                                defaults\n                            \n                            \n                                deserialize\n                            \n                            \n                                encode\n                            \n                            \n                                findChildParser\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                resolveKey\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                typeFor\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:337\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:332\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:333\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:331\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:336\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            keys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityTypeKey[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:335\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:328\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:329\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:330\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            optionsHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:337\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:334\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            childParser\n                        \n                        \n                    \n                \n            \n            \n                \nchildParser(predicate: (p: ODataStructuredTypeParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:383\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Parser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:445\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaults\n                        \n                        \n                    \n                \n            \n            \n                \ndefaults()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:487\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:390\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \nencode(value: T, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:440\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findChildParser\n                        \n                        \n                    \n                \n            \n            \n                \nfindChildParser(predicate: (p: ODataStructuredTypeParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:371\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataStructuredTypeParser | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:358\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:461\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options?: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:415\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:506\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeFor\n                        \n                        \n                    \n                \n            \n            \n                \ntypeFor(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:364\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(attrs: any, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:548\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Objects, Types } from '../utils';\nimport {\n  Parser,\n  StructuredTypeFieldConfig,\n  StructuredTypeConfig,\n  OptionsHelper,\n  NONE_PARSER,\n  StructuredTypeFieldOptions,\n} from '../types';\nimport { ODataEnumTypeParser } from './enum-type';\nimport { COMPUTED } from '../constants';\nimport { ODataAnnotation } from '../schema/annotation';\nimport { raw } from '../resources/builder';\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaCustom = {\n  [P in keyof T]?: (\n    schema: any,\n    field: ODataStructuredTypeFieldParser\n  ) => any;\n};\ntype JsonSchemaExpand = { [P in keyof T]?: JsonSchemaOptions };\nexport type JsonSchemaOptions = {\n  select?: JsonSchemaSelect;\n  custom?: JsonSchemaCustom;\n  expand?: JsonSchemaExpand;\n};\n\nexport class ODataEntityTypeKey {\n  name: string;\n  alias?: string;\n  constructor({ name, alias }: { name: string; alias?: string }) {\n    this.name = name;\n    this.alias = alias;\n  }\n}\n\nexport class ODataReferential {\n  property: string;\n  referencedProperty: string;\n  constructor({\n    property,\n    referencedProperty,\n  }: {\n    property: string;\n    referencedProperty: string;\n  }) {\n    this.property = property;\n    this.referencedProperty = referencedProperty;\n  }\n}\n\nexport class ODataStructuredTypeFieldParser implements Parser {\n  name: string;\n  private structuredType: ODataStructuredTypeParser;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  precision?: number;\n  scale?: number;\n  referentials: ODataReferential[];\n  annotations: ODataAnnotation[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    name: string,\n    structuredType: ODataStructuredTypeParser,\n    field: StructuredTypeFieldConfig\n  ) {\n    this.name = name;\n    this.structuredType = structuredType;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = (field.annotations || []).map(\n      (annot) => new ODataAnnotation(annot)\n    );\n    this.referentials = (field.referentials || []).map(\n      (referential) => new ODataReferential(referential)\n    );\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.precision = field.precision;\n    this.scale = field.scale;\n  }\n  findAnnotation(predicate: (annot: ODataAnnotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  validate(\n    value: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ):\n    | { [name: string]: any }\n    | { [name: string]: any }[]\n    | string[]\n    | undefined {\n    let errors;\n    if (this.collection && Array.isArray(value)) {\n      errors = value.map((v) => this.validate(v, { method, navigation })) as {\n        [name: string]: any[];\n      }[];\n    } else if (\n      (this.isStructuredType() &&\n        typeof value === 'object' &&\n        value !== null) ||\n      (this.navigation && value !== undefined)\n    ) {\n      errors =\n        this.structured().validate(value, { method, navigation }) ||\n        ({} as { [name: string]: any[] });\n    } else if (\n      this.isEnumType() &&\n      (typeof value === 'string' || typeof value === 'number')\n    ) {\n      errors = this.enum().validate(value, { method, navigation });\n    } else {\n      // IsEdmType\n      const computed = this.findAnnotation((a) => a.type === COMPUTED);\n      errors = [];\n      if (\n        !this.nullable &&\n        (value === null || (value === undefined && method !== 'patch')) && // Is null or undefined without patch?\n        !(computed?.bool && method === 'create') // Not (Is Computed field and create) ?\n      ) {\n        errors.push(`required`);\n      }\n      if (\n        this.maxLength !== undefined &&\n        typeof value === 'string' &&\n        value.length > this.maxLength\n      ) {\n        errors.push(`maxlength`);\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n\n  //#region Deserialize\n  private parse(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options?: OptionsHelper): T {\n    options = options || this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? value.map((v) => this.parse(parser, v, options))\n        : this.parse(parser, value, options);\n    }\n    return this.parser.deserialize(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Serialize\n  private toJson(\n    parser: ODataStructuredTypeParser,\n    value: any,\n    options?: OptionsHelper\n  ): any {\n    const type = Types.isPlainObject(value)\n      ? options?.helper.type(value)\n      : undefined;\n    if (type !== undefined) {\n      return parser\n        .childParser((c) => c.isTypeOf(type))\n        .serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value)\n        ? (value as any[]).map((v) => this.toJson(parser, v, options))\n        : this.toJson(parser, value, options);\n    }\n    return this.parser.serialize(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  //#region Encode\n  encode(value: T, options?: OptionsHelper): string {\n    options = options || this.optionsHelper;\n    return this.parser.encode(value, {\n      field: this,\n      ...options,\n    } as StructuredTypeFieldOptions);\n  }\n  //#endregion\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    this.parser = parserForType(this.type);\n    if (this.default !== undefined)\n      this.default = this.deserialize(this.default, options);\n  }\n\n  //#region Json Schema\n  // https://json-schema.org/\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any =\n      this.parser instanceof ODataStructuredTypeFieldParser ||\n      this.parser instanceof ODataStructuredTypeParser ||\n      this.parser instanceof ODataEnumTypeParser\n        ? this.parser.toJsonSchema(options)\n        : ({ title: this.name, type: 'object' } as any);\n\n    if (\n      [\n        'Edm.String',\n        'Edm.Date',\n        'Edm.TimeOfDay',\n        'Edm.DateTimeOffset',\n        'Edm.Guid',\n        'Edm.Binary',\n      ].indexOf(this.type) !== -1\n    ) {\n      schema.type = 'string';\n      if (this.type === 'Edm.Date') schema.format = 'date';\n      else if (this.type === 'Edm.TimeOfDay') schema.format = 'time';\n      else if (this.type === 'Edm.DateTimeOffset') schema.format = 'date-time';\n      else if (this.type === 'Edm.Guid')\n        schema.pattern =\n          '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$';\n      else if (this.type === 'Edm.Binary') schema.contentEncoding = 'base64';\n      else if (this.type === 'Edm.String' && this.maxLength)\n        schema.maxLength = this.maxLength;\n    } else if (\n      ['Edm.Int64', 'Edm.Int32', 'Edm.Int16', 'Edm.Byte', 'Edm.SByte'].indexOf(\n        this.type\n      ) !== -1\n    ) {\n      //TODO: Range\n      schema.type = 'integer';\n    } else if (['Edm.Decimal', 'Edm.Double'].indexOf(this.type) !== -1) {\n      schema.type = 'number';\n    } else if (['Edm.Boolean'].indexOf(this.type) !== -1) {\n      schema.type = 'boolean';\n    }\n    if (this.default) schema.default = this.default;\n    if (this.nullable) schema.type = [schema.type, 'null'];\n    if (this.collection)\n      schema = {\n        type: 'array',\n        items: schema,\n        additionalItems: false,\n      };\n    return schema;\n  }\n  //#endregion\n\n  isKey() {\n    return (\n      this.structuredType.keys?.find((k) => k.name === this.name) !== undefined\n    );\n  }\n\n  hasReferentials() {\n    return this.referentials.length !== 0;\n  }\n\n  isEdmType() {\n    return this.type.startsWith('Edm.');\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n\n  enum() {\n    if (!this.isEnumType()) throw new Error('Field are not EnumType');\n    return this.parser as ODataEnumTypeParser;\n  }\n\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error('Field are not StrucuturedType');\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataStructuredTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  open: boolean;\n  children: ODataStructuredTypeParser[] = [];\n  alias?: string;\n  base?: string;\n  parent?: ODataStructuredTypeParser;\n  keys?: ODataEntityTypeKey[];\n  fields: ODataStructuredTypeFieldParser[];\n  optionsHelper?: OptionsHelper;\n\n  constructor(\n    config: StructuredTypeConfig,\n    namespace: string,\n    alias?: string\n  ) {\n    this.name = config.name;\n    this.base = config.base;\n    this.open = config.open || false;\n    this.namespace = namespace;\n    this.alias = alias;\n    if (Array.isArray(config.keys))\n      this.keys = config.keys.map((key) => new ODataEntityTypeKey(key));\n    this.fields = Object.entries(\n      config.fields as { [P in keyof T]: StructuredTypeFieldConfig }\n    ).map(\n      ([name, config]) => new ODataStructuredTypeFieldParser(name, this, config)\n    );\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias) names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  typeFor(name: string): string | undefined {\n    const field = this.fields.find((f) => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : undefined;\n  }\n\n  findChildParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): ODataStructuredTypeParser | undefined {\n    if (predicate(this)) return this;\n    let match: ODataStructuredTypeParser | undefined;\n    for (let ch of this.children) {\n      match = ch.findChildParser(predicate);\n      if (match !== undefined) break;\n    }\n    return match;\n  }\n\n  childParser(\n    predicate: (p: ODataStructuredTypeParser) => boolean\n  ): Parser {\n    return this.findChildParser(predicate) || NONE_PARSER;\n  }\n\n  // Deserialize\n  deserialize(value: any, options?: OptionsHelper): T {\n    options = options || this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.deserialize(value, options);\n    return Object.assign(\n      {},\n      value,\n      this.fields\n        .filter(\n          (f) =>\n            f.name in value &&\n            value[f.name] !== undefined &&\n            value[f.name] !== null\n        )\n        .reduce(\n          (acc, f) =>\n            Object.assign(acc, {\n              [f.name]: f.deserialize(value[f.name], options),\n            }),\n          {}\n        )\n    );\n  }\n\n  // Serialize\n  serialize(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    if (this.parent !== undefined)\n      value = this.parent.serialize(value, options);\n    return Object.assign(\n      {},\n      value,\n      this.fields\n        .filter(\n          (f) =>\n            f.name in value &&\n            (value as any)[f.name] !== undefined &&\n            (value as any)[f.name] !== null\n        )\n        .reduce(\n          (acc, f) =>\n            Object.assign(acc, {\n              [f.name]: f.serialize((value as any)[f.name], options),\n            }),\n          {}\n        )\n    );\n  }\n\n  // Encode\n  encode(value: T, options?: OptionsHelper): any {\n    options = options || this.optionsHelper;\n    return raw(JSON.stringify(this.serialize(value, options)));\n  }\n\n  configure({\n    parserForType,\n    options,\n  }: {\n    parserForType: (type: string) => Parser;\n    options: OptionsHelper;\n  }) {\n    this.optionsHelper = options;\n    if (this.base) {\n      const parent = parserForType(this.base) as ODataStructuredTypeParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach((f) => f.configure({ parserForType, options }));\n  }\n\n  resolveKey(value: any): any {\n    let key = this.parent?.resolveKey(value) || {};\n    if (Array.isArray(this.keys) && this.keys.length > 0) {\n      for (var k of this.keys) {\n        let v = value as any;\n        let structured = this as ODataStructuredTypeParser | undefined;\n        let field: ODataStructuredTypeFieldParser | undefined;\n        for (let name of k.name.split('/')) {\n          if (structured === undefined) break;\n          field = structured.fields.find((f) => f.name === name);\n          if (field !== undefined) {\n            v = Types.isPlainObject(v) ? v[field.name] : v;\n            structured = field.isStructuredType()\n              ? field.structured()\n              : undefined;\n          }\n        }\n        if (field === undefined) return undefined;\n        let name = k.alias || field.name;\n        key[name] = field.encode(v);\n      }\n    }\n    if (Types.isEmpty(key)) return undefined;\n    return Objects.resolveKey(key);\n  }\n\n  defaults(): { [name: string]: any } {\n    let value = this.parent?.defaults() || {};\n    let fields = this.fields.filter(\n      (f) => f.default !== undefined || f.isStructuredType()\n    );\n    return Object.assign(\n      {},\n      value,\n      fields.reduce((acc, f) => {\n        let value = f.isStructuredType()\n          ? f.structured().defaults()\n          : f.default;\n        if (!Types.isEmpty(value)) Object.assign(acc, { [f.name]: value });\n        return acc;\n      }, {})\n    );\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any = this.parent?.toJsonSchema(options) || {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      $id: `${this.namespace}.${this.name}`,\n      title: this.name,\n      type: 'object',\n      properties: {},\n      required: [],\n    };\n    const fields = this.fields.filter(\n      (f) =>\n        (!f.navigation || (options.expand && f.name in options.expand)) &&\n        (!options.select || (options.select).indexOf(f.name) !== -1)\n    );\n    schema.properties = Object.assign(\n      {},\n      schema.properties,\n      fields\n        .map((f) => {\n          let expand =\n            options.expand && f.name in options.expand\n              ? (options.expand as any)[f.name]\n              : undefined;\n          let schema = f.toJsonSchema(expand);\n          if (options.custom && f.name in options.custom)\n            schema = (\n              options.custom[f.name as keyof T] as (\n                schema: any,\n                field: ODataStructuredTypeFieldParser\n              ) => any\n            )(schema, f);\n          return { [f.name]: schema };\n        })\n        .reduce((acc, v) => Object.assign(acc, v), {})\n    );\n    schema.required = [\n      ...schema.required,\n      ...fields.filter((f) => !f.nullable).map((f) => f.name),\n    ];\n    return schema;\n  }\n\n  validate(\n    attrs: any,\n    {\n      method,\n      navigation = false,\n    }: {\n      create?: boolean;\n      method?: 'create' | 'update' | 'patch';\n      navigation?: boolean;\n    } = {}\n  ): { [name: string]: any } | undefined {\n    const errors = (this.parent?.validate(attrs, { method, navigation }) ||\n      {}) as { [name: string]: any };\n    const fields = this.fields.filter((f) => !f.navigation || navigation);\n    for (var field of fields) {\n      const value = attrs[field.name as keyof T];\n      const errs = field.validate(value, { method, navigation });\n      if (errs !== undefined) {\n        errors[field.name] = errs;\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionHandler.html":{"url":"classes/OptionHandler.html","title":"class - OptionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertArray\n                            \n                            \n                                    Private\n                                assertObject\n                            \n                            \n                                assign\n                            \n                            \n                                at\n                            \n                            \n                                clear\n                            \n                            \n                                empty\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                push\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJSON\n                            \n                            \n                                unset\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: literal type, n: QueryOptionNames)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:114\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        n\n                                                  \n                                                        \n                                                                        QueryOptionNames\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertObject(create: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign(values: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            empty\n                        \n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(path: string, def?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(path: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unset\n                        \n                        \n                    \n                \n            \n            \n                \nunset(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue(v?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:120\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  buildPathAndQuery,\n  Expand,\n  Filter,\n  OrderBy,\n  Select,\n  Transform,\n} from './builder';\n\nimport { Dates, Types, Urls, Objects } from '../utils';\n\nexport type QueryArguments = {\n  select?: Select;\n  expand?: Expand;\n  transform?: Transform;\n  search?: string;\n  filter?: Filter;\n  orderBy?: OrderBy;\n  top?: number;\n  skip?: number;\n  skiptoken?: string;\n};\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  expand = 'expand',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  format = 'format',\n}\n\nexport class ODataQueryOptions {\n  options: { [name: string]: any };\n\n  constructor(options?: { [name: string]: any }) {\n    this.options = options || {};\n  }\n\n  // Params\n  pathAndParams(): [string, { [name: string]: any }] {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format,\n    ]\n      .filter((key) => !Types.isEmpty(this.options[key]))\n      .reduce(\n        (acc, key) => Object.assign(acc, { [key]: this.options[key] }),\n        {}\n      );\n\n    return buildPathAndQuery(options);\n  }\n\n  toString(): string {\n    const [path, params] = this.pathAndParams();\n    return (\n      path +\n      Object.entries(params)\n        .filter(([, value]) => !Types.isEmpty(value))\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&')\n    );\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined) this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach((name) => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter((k) => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(\n    private o: { [name: string]: any },\n    private n: QueryOptionNames\n  ) {}\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return (v !== undefined && (this.o[this.n] = v)) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter((v) => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1) this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): { [name: string]: any } {\n    if (!Types.isArray(this.o[this.n]) && Types.isPlainObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find((v) => Types.isPlainObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    Objects.set(obj, path, value);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    return Objects.get(obj, path, def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    Objects.unset(obj, path);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1) this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    return Objects.has(obj, path);\n  }\n\n  assign(values: { [attr: string]: any }) {\n    let obj = this.assertObject(true);\n    return Objects.merge(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        stringAsEnum\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        stringAsEnum\n                                    \n                                \n                                \n                                    \n                                        stringAsEnum:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         ODataVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { ODataVersionHelper } from './helper';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  serialize(\n    value: T,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encodes the value/s of a URL parameter or query-string.\n  encode(value: T, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionsHelper.html":{"url":"interfaces/OptionsHelper.html","title":"interface - OptionsHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OptionsHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        helper\n                                \n                                \n                                            Optional\n                                        ieee754Compatible\n                                \n                                \n                                            Optional\n                                        metadata\n                                \n                                \n                                            Optional\n                                        streaming\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        helper\n                                    \n                                \n                                \n                                    \n                                        helper:         ODataVersionHelper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersionHelper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ieee754Compatible\n                                    \n                                \n                                \n                                    \n                                        ieee754Compatible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:         ODataMetadataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataMetadataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streaming\n                                    \n                                \n                                \n                                    \n                                        streaming:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { ODataVersionHelper } from './helper';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  serialize(\n    value: T,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encodes the value/s of a URL parameter or query-string.\n  encode(value: T, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parser.html":{"url":"interfaces/Parser.html","title":"interface - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                                \n                                    encode\n                                \n                                \n                                    serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options?: OptionsHelper | StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper | StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encode\n                        \n                        \n                    \n                \n            \n            \n                \nencode(value: T, options?: OptionsHelper | StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper | StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options?: OptionsHelper | StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper | StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { ODataVersionHelper } from './helper';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  serialize(\n    value: T,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encodes the value/s of a URL parameter or query-string.\n  encode(value: T, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseOptions.html":{"url":"interfaces/ResponseOptions.html","title":"interface - ResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OptionsHelper\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cacheability\n                                \n                                \n                                            Optional\n                                        maxAge\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cacheability\n                                    \n                                \n                                \n                                    \n                                        cacheability:         CacheCacheability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CacheCacheability\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { ODataVersionHelper } from './helper';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  serialize(\n    value: T,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encodes the value/s of a URL parameter or query-string.\n  encode(value: T, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentHandler.html":{"url":"classes/SegmentHandler.html","title":"class - SegmentHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearKey\n                            \n                            \n                                clearParameters\n                            \n                            \n                                hasKey\n                            \n                            \n                                hasParameters\n                            \n                            \n                                key\n                            \n                            \n                                parameters\n                            \n                            \n                                path\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segment: ODataSegment)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:168\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        ODataSegment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearKey\n                        \n                        \n                    \n                \n            \n            \n                \nclearKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearParameters\n                        \n                        \n                    \n                \n            \n            \n                \nclearParameters()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasKey\n                        \n                        \n                    \n                \n            \n            \n                \nhasKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasParameters\n                        \n                        \n                    \n                \n            \n            \n                \nhasParameters()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            key\n                        \n                        \n                    \n                \n            \n            \n                \nkey(value?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:181\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parameters\n                        \n                        \n                    \n                \n            \n            \n                \nparameters(value?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:191\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:170\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { raw, buildPathAndQuery } from './builder';\n\nimport { Types, Dates } from '../utils';\n\nimport { PATH_SEPARATOR } from '../constants';\nimport { EntityKey } from './resource';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action',\n}\n\nexport type ODataSegment = {\n  name: PathSegmentNames;\n  path: string;\n  type?: string;\n  key?: any;\n  parameters?: any;\n};\n\nfunction pathSegmentsBuilder(\n  segment: ODataSegment\n): [string, { [name: string]: any }] {\n  if (segment.name === PathSegmentNames.function) {\n    let [path, params] = segment.parameters\n      ? buildPathAndQuery({ func: { [segment.path]: segment.parameters } })\n      : buildPathAndQuery({ func: segment.path });\n    if (path.startsWith(PATH_SEPARATOR)) {\n      path = path.slice(1);\n    }\n    return [path, params];\n  } else {\n    let key = segment.key;\n    // HACK: Check guid string\n    if (\n      typeof key === 'string' &&\n      /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(\n        key\n      )\n    ) {\n      key = raw(key);\n    }\n    let [path, params] = key ? buildPathAndQuery({ key }) : ['', {}];\n    return [segment.path + path, params];\n  }\n}\n\nexport class ODataPathSegments {\n  private _segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this._segments = segments || [];\n  }\n\n  pathAndParams(): [string, { [name: string]: any }] {\n    const result = this._segments.reduce(\n      (acc, segment) => {\n        const [path, params] = pathSegmentsBuilder(segment);\n        acc.paths.push(path);\n        acc.params = Object.assign(acc.params, params);\n        return acc;\n      },\n      { paths: [] as string[], params: {} as { [name: string]: any } }\n    );\n    return [result.paths.join(PATH_SEPARATOR), result.params];\n  }\n\n  types({ key = false }: { key?: boolean } = {}): string[] {\n    return this.segments({ key })\n      .map((s) => s.type())\n      .filter((t) => t !== undefined) as string[];\n  }\n\n  keys(values?: (EntityKey | undefined)[]) {\n    const segments = this.segments({ key: true });\n    if (values !== undefined) {\n      segments.forEach((segment, index) => {\n        const key = values[index];\n        if (key === undefined) {\n          segment.clearKey();\n        } else {\n          segment.key(key);\n        }\n      });\n    }\n    return segments.map((s) => s.key() as EntityKey | undefined);\n  }\n\n  toString(): string {\n    const [path, params] = this.pathAndParams();\n    return (\n      path +\n      Object.entries(params)\n        .filter(([, value]) => value)\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&')\n    );\n  }\n\n  toJSON() {\n    return this._segments.map((segment) => {\n      let json = { name: segment.name, path: segment.path };\n      if (segment.type !== undefined) json.type = segment.type;\n      if (segment.key !== undefined)\n        json.key = Dates.isoStringToDate(\n          JSON.parse(JSON.stringify(segment.key))\n        );\n      if (segment.parameters !== undefined)\n        json.parameters = Dates.isoStringToDate(\n          JSON.parse(JSON.stringify(segment.parameters))\n        );\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(predicate: (segment: ODataSegment) => boolean) {\n    //Backward Find\n    return [...this._segments].reverse().find(predicate);\n  }\n\n  segments({ key = false }: { key?: boolean } = {}) {\n    let segments = [...this._segments];\n    if (key)\n      segments = segments.filter(\n        (s) =>\n          [\n            PathSegmentNames.entitySet,\n            PathSegmentNames.navigationProperty,\n            PathSegmentNames.property,\n          ].indexOf(s.name) !== -1\n      );\n    return segments.map((s) => new SegmentHandler(s));\n  }\n\n  last({ key = false }: { key?: boolean } = {}) {\n    const segments = this.segments({ key });\n    return segments.length > 0 ? segments[segments.length - 1] : undefined;\n  }\n\n  add(name: string, path: string) {\n    const segment = { name, path } as ODataSegment;\n    this._segments.push(segment);\n    return new SegmentHandler(segment);\n  }\n\n  get(name: string) {\n    let segment = this.find((s) => s.name === name);\n    if (segment === undefined)\n      throw Error(`No Segment for name ${name} was found`);\n    return new SegmentHandler(segment);\n  }\n}\n\nexport class SegmentHandler {\n  constructor(private segment: ODataSegment) {}\n  get name() {\n    return this.segment.name;\n  }\n  type(value?: string) {\n    if (value !== undefined) this.segment.type = value;\n    return this.segment.type;\n  }\n  path(value?: string) {\n    if (value !== undefined) this.segment.path = value;\n    return this.segment.path;\n  }\n  key(value?: EntityKey) {\n    if (value !== undefined) this.segment.key = value;\n    return this.segment.key as EntityKey;\n  }\n  hasKey() {\n    return !Types.isEmpty(this.segment.key);\n  }\n  clearKey() {\n    delete this.segment.key;\n  }\n  parameters(value?: T) {\n    if (value !== undefined) this.segment.parameters = value;\n    return this.segment.parameters as T;\n  }\n  hasParameters() {\n    return !Types.isEmpty(this.segment.parameters);\n  }\n  clearParameters() {\n    delete this.segment.parameters;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoragePayload.html":{"url":"interfaces/StoragePayload.html","title":"interface - StoragePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoragePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                                \n                                        statusText\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                    \n                                \n                                \n                                    \n                                        statusText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n  body: any | null;\n  headers: { [name: string]: string | string[] };\n  status: number;\n  statusText: string;\n  url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor({\n    name,\n    storage = sessionStorage,\n    timeout,\n  }: {\n    timeout?: number;\n    name: string;\n    storage?: Storage;\n  }) {\n    super({ timeout });\n    this.entries = new Map>(\n      JSON.parse(storage.getItem(name) || '[]')\n    );\n    window.addEventListener(\n      'beforeunload',\n      ((backend, key, responses) =>\n        function () {\n          backend.setItem(key, JSON.stringify(Array.from(responses.entries())));\n        })(storage, name, this.entries)\n    );\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.pathWithParams, res.toJSON(), {\n      timeout: res.options.maxAge,\n      pattern: `^${req.path}`,\n    });\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.pathWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeFieldOptions.html":{"url":"interfaces/StructuredTypeFieldOptions.html","title":"interface - StructuredTypeFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OptionsHelper\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         StructuredTypeFieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StructuredTypeFieldConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { ODataVersionHelper } from './helper';\n\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'cache-and-network'\n  | 'network-only'\n  | 'no-cache'\n  | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  stringAsEnum?: boolean;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  accept?: {\n    metadata?: ODataMetadataType;\n    ieee754Compatible?: boolean;\n  };\n  etag?: {\n    ifMatch?: boolean;\n    ifNoneMatch?: boolean;\n  };\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n    continueOnError?: boolean;\n    includeAnnotations?: string;\n  };\n  stripMetadata?: ODataMetadataType;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n  metadata?: ODataMetadataType;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface ResponseOptions extends OptionsHelper {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeFieldConfig;\n}\n\nexport interface Parser {\n  deserialize(\n    value: any,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): T;\n  serialize(\n    value: T,\n    options?: OptionsHelper | StructuredTypeFieldOptions\n  ): any;\n  //Encodes the value/s of a URL parameter or query-string.\n  encode(value: T, options?: OptionsHelper | StructuredTypeFieldOptions): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any) => value,\n  serialize: (value: any) => value,\n  encode: (value: any) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T, ...opts: any[]): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: { [type: string]: Parser };\n  schemas?: SchemaConfig[];\n};\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n};\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[];\n};\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n};\n\nexport type EnumTypeFieldConfig = {\n  value: number;\n  annotations?: AnnotationConfig[];\n};\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: { [member: string]: EnumTypeFieldConfig };\n};\n\nexport type StructuredTypeFieldConfig = {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  precision?: number;\n  annotations?: AnnotationConfig[];\n  scale?: number;\n  referentials?: { property: string; referencedProperty: string }[];\n  referential?: string;\n  referenced?: string;\n};\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new (...params: any[]): any };\n  collection?: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  keys?: { name: string; alias?: string }[];\n  fields: { [P in keyof T]?: StructuredTypeFieldConfig };\n};\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n};\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: { type: string; collection?: boolean };\n};\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new (...params: any[]): any };\n  annotations?: AnnotationConfig[];\n};\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.0.4\n        \n            @angular/common : ~12.0.4\n        \n            @angular/compiler : ~12.0.4\n        \n            @angular/core : ~12.0.4\n        \n            @angular/forms : ~12.0.4\n        \n            @angular/platform-browser : ~12.0.4\n        \n            @angular/platform-browser-dynamic : ~12.0.4\n        \n            @angular/router : ~12.0.4\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FieldType   (projects/.../metadata.ts)\n                        \n                        \n                            ODataModelState   (projects/.../options.ts)\n                        \n                        \n                            PathSegmentNames   (projects/.../path-segments.ts)\n                        \n                        \n                            QueryCustomTypes   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptionNames   (projects/.../query-options.ts)\n                        \n                        \n                            StandardAggregateMethods   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/responses/metadata.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldType\n                    \n                \n                        \n                            \n                                 ATTRIBUTE\n                            \n                        \n                        \n                            \n                                 TAG\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/models/options.ts\n    \n        \n            \n                \n                    \n                        \n                        ODataModelState\n                    \n                \n                        \n                            \n                                 Added\n                            \n                        \n                        \n                            \n                                 Removed\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                 Unchanged\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n            \n                \n                    \n                        \n                        PathSegmentNames\n                    \n                \n                        \n                            \n                                 batch\n                            \n                        \n                        \n                            \n                                Value : batch\n                            \n                        \n                        \n                            \n                                 metadata\n                            \n                        \n                        \n                            \n                                Value : metadata\n                            \n                        \n                        \n                            \n                                 entitySet\n                            \n                        \n                        \n                            \n                                Value : entitySet\n                            \n                        \n                        \n                            \n                                 singleton\n                            \n                        \n                        \n                            \n                                Value : singleton\n                            \n                        \n                        \n                            \n                                 type\n                            \n                        \n                        \n                            \n                                Value : type\n                            \n                        \n                        \n                            \n                                 property\n                            \n                        \n                        \n                            \n                                Value : property\n                            \n                        \n                        \n                            \n                                 navigationProperty\n                            \n                        \n                        \n                            \n                                Value : navigationProperty\n                            \n                        \n                        \n                            \n                                 reference\n                            \n                        \n                        \n                            \n                                Value : reference\n                            \n                        \n                        \n                            \n                                 value\n                            \n                        \n                        \n                            \n                                Value : value\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 action\n                            \n                        \n                        \n                            \n                                Value : action\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryCustomTypes\n                    \n                \n                        \n                            \n                                 Raw\n                            \n                        \n                        \n                            \n                                 Alias\n                            \n                        \n                        \n                            \n                                 Duration\n                            \n                        \n                        \n                            \n                                 Binary\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StandardAggregateMethods\n                    \n                \n                        \n                            \n                                 sum\n                            \n                        \n                        \n                            \n                                Value : sum\n                            \n                        \n                        \n                            \n                                 min\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 max\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 average\n                            \n                        \n                        \n                            \n                                Value : average\n                            \n                        \n                        \n                            \n                                 countdistinct\n                            \n                        \n                        \n                            \n                                Value : countdistinct\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/query-options.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOptionNames\n                    \n                \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 expand\n                            \n                        \n                        \n                            \n                                Value : expand\n                            \n                        \n                        \n                            \n                                 filter\n                            \n                        \n                        \n                            \n                                Value : filter\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n                        \n                            \n                                 transform\n                            \n                        \n                        \n                            \n                                Value : transform\n                            \n                        \n                        \n                            \n                                 orderBy\n                            \n                        \n                        \n                            \n                                Value : orderBy\n                            \n                        \n                        \n                            \n                                 top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : skip\n                            \n                        \n                        \n                            \n                                 skiptoken\n                            \n                        \n                        \n                            \n                                Value : skiptoken\n                            \n                        \n                        \n                            \n                                 format\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addBody   (projects/.../client.ts)\n                        \n                        \n                            buildAggregate   (projects/.../builder.ts)\n                        \n                        \n                            buildExpand   (projects/.../builder.ts)\n                        \n                        \n                            buildFilter   (projects/.../builder.ts)\n                        \n                        \n                            buildGroupBy   (projects/.../builder.ts)\n                        \n                        \n                            buildOrderBy   (projects/.../builder.ts)\n                        \n                        \n                            buildPathAndQuery   (projects/.../builder.ts)\n                        \n                        \n                            buildTransforms   (projects/.../builder.ts)\n                        \n                        \n                            buildUrl   (projects/.../builder.ts)\n                        \n                        \n                            createSettings   (projects/.../module.ts)\n                        \n                        \n                            escapeIllegalChars   (projects/.../builder.ts)\n                        \n                        \n                            getBoundaryDelimiter   (projects/.../batch.ts)\n                        \n                        \n                            getBoundaryEnd   (projects/.../batch.ts)\n                        \n                        \n                            getHeaderValue   (projects/.../batch.ts)\n                        \n                        \n                            getStringCollectionClause   (projects/.../builder.ts)\n                        \n                        \n                            handleValue   (projects/.../builder.ts)\n                        \n                        \n                            Model   (projects/.../options.ts)\n                        \n                        \n                            ModelField   (projects/.../options.ts)\n                        \n                        \n                            now   (projects/.../batch.ts)\n                        \n                        \n                            parseNot   (projects/.../builder.ts)\n                        \n                        \n                            pathSegmentsBuilder   (projects/.../path-segments.ts)\n                        \n                        \n                            renderPrimitiveValue   (projects/.../builder.ts)\n                        \n                        \n                            uniqid   (projects/.../batch.ts)\n                        \n                        \n                            Unnamed function   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/client.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addBody\n                        \n                        \n                    \n                \n            \n            \n                \naddBody(options, body)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            buildAggregate\n                        \n                        \n                    \n                \n            \n            \n                \nbuildAggregate(aggregate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aggregate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildExpand\n                        \n                        \n                    \n                \n            \n            \n                \nbuildExpand(expands)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expands\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFilter\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFilter(filters, aliases, propPrefix: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propPrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildGroupBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildGroupBy(groupBy)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildOrderBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildOrderBy(orderBy, prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildPathAndQuery\n                        \n                        \n                    \n                \n            \n            \n                \nbuildPathAndQuery(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTransforms\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTransforms(transforms)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transforms\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildUrl\n                        \n                        \n                    \n                \n            \n            \n                \nbuildUrl(path, params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapeIllegalChars\n                        \n                        \n                    \n                \n            \n            \n                \nescapeIllegalChars(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStringCollectionClause\n                        \n                        \n                    \n                \n            \n            \n                \ngetStringCollectionClause(lambdaParameter, value: any, collectionOperator, propName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lambdaParameter\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionOperator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleValue\n                        \n                        \n                    \n                \n            \n            \n                \nhandleValue(value, aliases?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseNot\n                        \n                        \n                    \n                \n            \n            \n                \nparseNot(builtFilters)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builtFilters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderPrimitiveValue\n                        \n                        \n                    \n                \n            \n            \n                \nrenderPrimitiveValue(key, val: any, aliases)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSettings\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSettings(configs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/batch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryDelimiter(contentType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryEnd\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryEnd(boundaryDelimiter)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boundaryDelimiter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeaderValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeaderValue(header)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            now\n                        \n                        \n                    \n                \n            \n            \n                \nnow()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uniqid\n                        \n                        \n                    \n                \n            \n            \n                \nuniqid(prefix?, suffix?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    suffix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/models/options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Model\n                        \n                        \n                    \n                \n            \n            \n                \nModel(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ModelField\n                        \n                        \n                    \n                \n            \n            \n                \nModelField(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            pathSegmentsBuilder\n                        \n                        \n                    \n                \n            \n            \n                \npathSegmentsBuilder(segment)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    segment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular OData\n\n\nA fluent API for querying, creating, updating and deleting OData resources in Angular.\nOData service for Angular.\nPlease check also my other related project, OData Angular Generator\nDemo:\nFull examples of the library:\n\nAngularODataEntity\n\nTable of contents\n\nInstallation\nUsage\nGenerator\nOData Version\nQuery Builder\nDocumentation\n\nInstallation\nInstall from npm:\nnpm i angular-odataUsage\n1) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot({\n      serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n    })\n    ...\n  ]\n})\nexport class AppModule {}2) Inject and use the ODataServiceFactory\nimport { Component } from '@angular/core';\nimport { ODataClient, ODATA_ETAG } from 'angular-odata';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TripPin';\n  constructor(private factory: ODataServiceFactory) {\n    this.queries();\n  }\n\n  queries() {\n    // Use OData Service Factory\n    let airportsService = this.factory.entity(\"Airports\");\n    let peopleService = this.factory.entity(\"People\");\n\n    let airports = airportsService.entities();\n\n    // Fetch airports with count\n    airports\n    .get({withCount: true})\n    .subscribe(({entities, annots}) => console.log(\"Airports: \", entities, \"Annotations: \", annots));\n\n    // Fetch all airports\n    airports\n    .fetchAll()\n    .subscribe(aports => console.log(\"All: \", aports));\n\n    // Fetch airport with key\n    airports\n    .entity(\"CYYZ\")\n    .get()\n    .pipe(\n      switchMap(() => airports.entity(\"CYYZ\").get({fetchPolicy: 'cache-first'}))) // From Cache!\n    .subscribe(({entity, annots}) => console.log(\"Airport: \", entity, \"Annotations: \", annots));\n\n    // Filter airports (inmutable resource)\n    airports\n    .filter({Location: {City: {CountryRegion: \"United States\"}}})\n    .get()\n    .subscribe(({entities, annots}) => console.log(\"Airports of United States: \", entities, \"Annotations: \", annots));\n\n    // Add filter (mutable resource)\n    airports.query.filter().push({Location: {City: {Region: \"California\"}}});\n    airports\n    .get()\n    .subscribe(({entities, annots}) => console.log(\"Airports in California: \", entities, \"Annotations: \", annots));\n\n    // Resource to JSON\n    const json = airports.toJSON();\n    console.log(json);\n    // JSON to Resource\n    const query = this.odata.fromJSON(json);\n    console.log(query);\n\n    // Remove filter (mutable resource)\n    airports.query.filter().clear();\n    airports\n    .get()\n    .subscribe(({entities, annots}) => console.log(\"Airports: \", entities, \"Annotations: \", annots));\n\n    let people = peopleService.entities();\n\n    // Expand (inmutable resource)\n    people.expand({\n      Friends: {\n        expand: { Friends: { select: ['AddressInfo']}}\n      },\n      Trips: { select: ['Name', 'Tags'] },\n    })\n    .get({withCount: true})\n    .subscribe(({entities, annots}) => console.log(\"People with Friends and Trips: \", entities, \"Annotations: \", annots));\n\n    this.odata.batch(\"TripPin\").post(batch => {\n      airports.get().subscribe(console.log);\n      airport.get().subscribe(console.log);\n      people.get({withCount: true}).subscribe(console.log);\n    }).subscribe();\n  }\n}Generator\nIf you use OData Angular Generator, import the config and the module from generated source.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, TripPinModule } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig),\n    TripPinModule\n  ]\n  ...\n})\nexport class AppModule {}OData Version\nThe library works mainly with OData Version 4, however, it incorporates basic support for versions 3 and 2.\nQuery Builder\nFor a deep query customizations the library use odata-query as a builder.\n\nOData v4 query builder\n\nDocumentation\nThe api documentation is generated using compodoc and can be viewed here: https://diegomvh.github.io/angular-odata/docs/\nLibrary documentation can be viewed on the wiki here: https://github.com/diegomvh/angular-odata/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Diego van Haaster\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ODataModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    88 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (projects/.../builder.ts)\n                        \n                        \n                            AnnotationConfig   (projects/.../types.ts)\n                        \n                        \n                            ApiConfig   (projects/.../types.ts)\n                        \n                        \n                            CacheCacheability   (projects/.../types.ts)\n                        \n                        \n                            CallableConfig   (projects/.../types.ts)\n                        \n                        \n                            Duration   (projects/.../edm.ts)\n                        \n                        \n                            EntityContainerConfig   (projects/.../types.ts)\n                        \n                        \n                            EntityKey   (projects/.../resource.ts)\n                        \n                        \n                            EntitySetConfig   (projects/.../types.ts)\n                        \n                        \n                            EnumTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            EnumTypeFieldConfig   (projects/.../types.ts)\n                        \n                        \n                            Expand   (projects/.../builder.ts)\n                        \n                        \n                            ExpandObject   (projects/.../builder.ts)\n                        \n                        \n                            ExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ExpandType   (projects/.../builder.ts)\n                        \n                        \n                            FetchPolicy   (projects/.../types.ts)\n                        \n                        \n                            Filter   (projects/.../builder.ts)\n                        \n                        \n                            FilterType   (projects/.../builder.ts)\n                        \n                        \n                            GroupBy   (projects/.../builder.ts)\n                        \n                        \n                            HttpActionOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpEntitiesOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpEntityOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpFunctionOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpNavigationPropertyOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpNoneOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpPropertyOptions   (projects/.../options.ts)\n                        \n                        \n                            JsonSchemaCustom   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaExpand   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaOptions   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaSelect   (projects/.../structured-type.ts)\n                        \n                        \n                            ModelFieldOptions   (projects/.../options.ts)\n                        \n                        \n                            ModelOptions   (projects/.../options.ts)\n                        \n                        \n                            NestedExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ODataCollectionResource   (projects/.../options.ts)\n                        \n                        \n                            ODataContext   (projects/.../helper.ts)\n                        \n                        \n                            ODataEntities   (projects/.../types.ts)\n                        \n                        \n                            ODataEntity   (projects/.../types.ts)\n                        \n                        \n                            ODataMetadataType   (projects/.../types.ts)\n                        \n                        \n                            ODataModelEntry   (projects/.../options.ts)\n                        \n                        \n                            ODataModelEvent   (projects/.../options.ts)\n                        \n                        \n                            ODataModelFieldOptions   (projects/.../options.ts)\n                        \n                        \n                            ODataModelRelation   (projects/.../options.ts)\n                        \n                        \n                            ODataModelResource   (projects/.../options.ts)\n                        \n                        \n                            ODataProperty   (projects/.../types.ts)\n                        \n                        \n                            ODataSegment   (projects/.../path-segments.ts)\n                        \n                        \n                            ODataVersion   (projects/.../types.ts)\n                        \n                        \n                            OrderBy   (projects/.../builder.ts)\n                        \n                        \n                            OrderByObject   (projects/.../builder.ts)\n                        \n                        \n                            OrderByType   (projects/.../builder.ts)\n                        \n                        \n                            Parameter   (projects/.../types.ts)\n                        \n                        \n                            QueryArguments   (projects/.../query-options.ts)\n                        \n                        \n                            QueryCustomType   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptions   (projects/.../builder.ts)\n                        \n                        \n                            SchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            Select   (projects/.../builder.ts)\n                        \n                        \n                            SelectType   (projects/.../builder.ts)\n                        \n                        \n                            StructuredTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            StructuredTypeFieldConfig   (projects/.../types.ts)\n                        \n                        \n                            Transform   (projects/.../builder.ts)\n                        \n                        \n                            Unpacked   (projects/.../builder.ts)\n                        \n                        \n                            Value   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Expand\n                \n            \n            \n                \n                        ExpandType | ExpandType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandObject\n                \n            \n            \n                \n                             | NestedExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandType\n                \n            \n            \n                \n                        string | ExpandObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                        FilterType | FilterType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupBy\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NestedExpandOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderBy\n                \n            \n            \n                \n                        OrderByType | OrderByType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByObject\n                \n            \n            \n                \n                         |  | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByType\n                \n            \n            \n                \n                        string | OrderByObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryCustomType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Select\n                \n            \n            \n                \n                        SelectType | SelectType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectType\n                \n            \n            \n                \n                        string | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Transform\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Unpacked\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                            string | Date | number | boolean | QueryCustomType\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    AnnotationConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CacheCacheability\n                \n            \n            \n                \n                        \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CallableConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityContainerConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntitySetConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumTypeFieldConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPolicy\n                \n            \n            \n                \n                        \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataMetadataType\n                \n            \n            \n                \n                        \"minimal\" | \"full\" | \"none\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataVersion\n                \n            \n            \n                \n                        \"2.0\" | \"3.0\" | \"4.0\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Parameter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SchemaConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StructuredTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StructuredTypeFieldConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/parsers/edm.ts\n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/resource.ts\n    \n    \n        \n            \n                \n                    \n                    EntityKey\n                \n            \n            \n                \n                             | QueryCustomType | string | number\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/services/options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpActionOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpFunctionOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpNavigationPropertyOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpEntitiesOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpEntityOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpNoneOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpPropertyOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/parsers/structured-type.ts\n    \n    \n        \n            \n                \n                    \n                    JsonSchemaCustom\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaSelect\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/models/options.ts\n    \n    \n        \n            \n                \n                    \n                    ModelFieldOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ModelOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataCollectionResource\n                \n            \n            \n                \n                        ODataEntitySetResource | ODataNavigationPropertyResource | ODataPropertyResource\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelEntry\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelFieldOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelRelation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelResource\n                \n            \n            \n                \n                        ODataEntityResource | ODataSingletonResource | ODataNavigationPropertyResource | ODataPropertyResource\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/helper.ts\n    \n    \n        \n            \n                \n                    \n                    ODataContext\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/responses/types.ts\n    \n    \n        \n            \n                \n                    \n                    ODataEntities\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataEntity\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n    \n        \n            \n                \n                    \n                    ODataSegment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/query-options.ts\n    \n    \n        \n            \n                \n                    \n                    QueryArguments\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
